<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atom.Moles</name>
    </assembly>
    <members>
        <member name="T:Atom.Moles.MAnonymous">
            <summary>Mole type of <see cref="T:Atom.Anonymous"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MAnonymous.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MAnonymous.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MAnonymous.CreateListFuncOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},System.Collections.Generic.IList{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Anonymous.CreateList``1(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MAnonymous.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MArrayExtensions">
            <summary>Mole type of <see cref="T:Atom.Collections.ArrayExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayExtensions.ElementsEqualTArrayTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],``0[],System.Boolean})">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ArrayExtensions.ElementsEqual``1(``0[],``0[])"/>.</para>
                        Gets a value indicating whether the elements of the specified arrays are equal;
                        using the default EqualityComparer{T}.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayExtensions.ElementsEqualTArrayTArrayIEqualityComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],``0[],System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ArrayExtensions.ElementsEqual``1(``0[],``0[],System.Collections.Generic.IEqualityComparer`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MArrayExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MArrayUtilities">
            <summary>Mole type of <see cref="T:Atom.Collections.ArrayUtilities"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayUtilities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MArrayUtilities.CreateMultiDimensionalInt32Int32TArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Int32,System.Int32,``0[],``0[0:,0:]})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ArrayUtilities.CreateMultiDimensional``1(T:System.Int32,T:System.Int32,``0[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MArrayUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MAssociation`2">
            <summary>Mole type of <see cref="T:Atom.Collections.Association`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MAssociation`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MAssociation`2.#ctor(Atom.Collections.Association{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MAssociation`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.ConstructorTKeyTValue">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Association`2.#ctor(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.GetHashCode">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.GetHashCode"/>.</para>
                        Returns the hash code of the Association&lt;TKey, TValue&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.KeyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Key"/>.</para>
                        Gets or sets the key of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.KeySetTKey">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Key"/>.</para>
                        Gets or sets the key of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.ToKeyValuePair">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.ToKeyValuePair"/>.</para>
                        Construct a KeyValuePair{TKey, TValue} object from this Association{TKey, TValue}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.ToString">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.ValueGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Value"/>.</para>
                        Gets or sets the value of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.ValueSetTValue">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Value"/>.</para>
                        Gets or sets the value of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MAssociation`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.GetHashCode01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.GetHashCode"/>.</para>
                        Returns the hash code of the Association&lt;TKey, TValue&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.KeyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Key"/>.</para>
                        Gets or sets the key of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.KeySetTKey">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Key"/>.</para>
                        Gets or sets the key of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.ToKeyValuePair">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.ToKeyValuePair"/>.</para>
                        Construct a KeyValuePair{TKey, TValue} object from this Association{TKey, TValue}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.ToString01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Association`2.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.ValueGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Value"/>.</para>
                        Gets or sets the value of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MAssociation`2.AllInstances.ValueSetTValue">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Association`2.Value"/>.</para>
                        Gets or sets the value of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2">
            <summary>Mole type of <see cref="T:Atom.Collections.Comparers.AssociationKeyComparer`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.#ctor(Atom.Collections.Comparers.AssociationKeyComparer{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.Bind(System.Collections.Generic.IComparer{Atom.Collections.Association{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.CompareAssociationOfTKeyTValueAssociationOfTKeyTValue">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.AssociationKeyComparer`2.Compare(Atom.Collections.Association`2{`1,`2},Atom.Collections.Association`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.AssociationKeyComparer`2.#ctor"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MAssociationKeyComparer`2.AllInstances.CompareAssociationOfTKeyTValueAssociationOfTKeyTValue">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.AssociationKeyComparer`2.Compare(Atom.Collections.Association`2{`1,`2},Atom.Collections.Association`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseItemCreationEditor">
            <summary>Mole type of <see cref="T:Atom.Design.BaseItemCreationEditor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseItemCreationEditor.#ctor(Atom.Design.BaseItemCreationEditor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseItemCreationEditor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.CreateObjectType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.CreateObject(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.SetupCreatedObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.SetupCreatedObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseItemCreationEditor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.AllInstances.CreateObjectType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.CreateObject(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.AllInstances.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemCreationEditor.AllInstances.SetupCreatedObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemCreationEditor.SetupCreatedObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseItemSelectionEditor`1">
            <summary>Mole type of <see cref="T:Atom.Design.BaseItemSelectionEditor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseItemSelectionEditor`1.#ctor(Atom.Design.BaseItemSelectionEditor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseItemSelectionEditor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.GetFinalValueTItem">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.GetItemFromValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.ShowSelectionDialogTItem">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.ShowSelectionDialog(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances.GetFinalValueTItem">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances.GetItemFromValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseItemSelectionEditor`1.AllInstances.ShowSelectionDialogTItem">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.ShowSelectionDialog(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MBaseLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.BaseLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MBaseLog.#ctor(Atom.Diagnostics.BaseLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MBaseLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MBaseLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.#ctor"/>.</para>
                        Initializes a new instance of the BaseLog class.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.DefaultSeverityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.IsNotLoggedLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.MessageFilterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.MessageFilter"/>.</para>
                        Gets or sets the ILogFilter that is used to filter the messages
                        that are actually logged.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.MessageFilterSetILogFilter">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.MessageFilter"/>.</para>
                        Gets or sets the ILogFilter that is used to filter the messages
                        that are actually logged.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.WriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.WriteLineString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.WriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.WriteString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MBaseLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.DefaultSeverityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.IsNotLoggedLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.MessageFilterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.MessageFilter"/>.</para>
                        Gets or sets the ILogFilter that is used to filter the messages
                        that are actually logged.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.MessageFilterSetILogFilter">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.BaseLog.MessageFilter"/>.</para>
                        Gets or sets the ILogFilter that is used to filter the messages
                        that are actually logged.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.WriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.WriteLineString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.WriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MBaseLog.AllInstances.WriteString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseObjectPropertyWrapper">
            <summary>Mole type of <see cref="T:Atom.Design.BaseObjectPropertyWrapper"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper.#ctor(Atom.Design.BaseObjectPropertyWrapper)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper.Bind(Atom.Design.IObjectPropertyWrapper)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.OnPropertyChangedString">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.OnPropertyChanged(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.add_PropertyChanged(T:System.ComponentModel.PropertyChangedEventHandler)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.remove_PropertyChanged(T:System.ComponentModel.PropertyChangedEventHandler)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.SystemICloneableClone">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.System.ICloneable.Clone"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.WrappedObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.WrappedObjectSetObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.OnPropertyChangedString">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.OnPropertyChanged(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.add_PropertyChanged(T:System.ComponentModel.PropertyChangedEventHandler)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.remove_PropertyChanged(T:System.ComponentModel.PropertyChangedEventHandler)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.SystemICloneableClone">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.System.ICloneable.Clone"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.WrappedObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper.AllInstances.WrappedObjectSetObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1">
            <summary>Mole type of <see cref="T:Atom.Design.BaseObjectPropertyWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.#ctor(Atom.Design.BaseObjectPropertyWrapper{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.Bind(Atom.Design.IObjectPropertyWrapper)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseObjectPropertyWrapper`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.WrappedObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.WrappedObjectSetTObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.WrappedTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.AllInstances.WrappedObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.AllInstances.WrappedObjectSetTObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseObjectPropertyWrapper01`1.AllInstances.WrappedTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBaseObjectReaderWriter`1">
            <summary>Mole type of <see cref="T:Atom.Storage.BaseObjectReaderWriter`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.#ctor(Atom.Storage.BaseObjectReaderWriter{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectReader)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectReaderWriter)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectReaderWriter{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectReader{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectWriter)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Bind(Atom.Storage.IObjectWriter{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.DeserializeObjectIDeserializationContext">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.SerializeObjectISerializationContext">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.TypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BaseObjectReaderWriter`1.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.BaseObjectReaderWriter`1.Type"/> this IObjectReaderWriter serializes and deserializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBaseObjectReaderWriter`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.AllInstances.DeserializeObjectIDeserializationContext">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.AllInstances.SerializeObjectISerializationContext">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBaseObjectReaderWriter`1.AllInstances.TypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BaseObjectReaderWriter`1.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.BaseObjectReaderWriter`1.Type"/> this IObjectReaderWriter serializes and deserializes.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseTypeSelectionEditor">
            <summary>Mole type of <see cref="T:Atom.Design.BaseTypeSelectionEditor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseTypeSelectionEditor.#ctor(Atom.Design.BaseTypeSelectionEditor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MBaseTypeSelectionEditor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.CreateTypeWrapperType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.GetItemFromValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.GetSelectableItems">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetSelectableItems"/>.</para>
                        Gets the items that can be selected in this BaseItemSelectionEditor{TItem}.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.MapTypeToNameType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.MapTypeToName(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.MapTypeToTypeNameType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.MapTypeToTypeName(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.ShowFullTypeNameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseTypeSelectionEditor.ShowFullTypeName"/>.</para>
                        Gets or sets a value indicating whether the full type name of the objects
                        to select should be shown or only the normal short name should be shown.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.ShowFullTypeNameSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseTypeSelectionEditor.ShowFullTypeName"/>.</para>
                        Gets or sets a value indicating whether the full type name of the objects
                        to select should be shown or only the normal short name should be shown.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor._GetSelectableItemsb__0Type">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.&lt;GetSelectableItems&gt;b__0(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances.CreateTypeWrapperType">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances.GetItemFromValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances.GetSelectableItems">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetSelectableItems"/>.</para>
                        Gets the items that can be selected in this BaseItemSelectionEditor{TItem}.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances.ShowFullTypeNameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseTypeSelectionEditor.ShowFullTypeName"/>.</para>
                        Gets or sets a value indicating whether the full type name of the objects
                        to select should be shown or only the normal short name should be shown.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances.ShowFullTypeNameSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.BaseTypeSelectionEditor.ShowFullTypeName"/>.</para>
                        Gets or sets a value indicating whether the full type name of the objects
                        to select should be shown or only the normal short name should be shown.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MBaseTypeSelectionEditor.AllInstances._GetSelectableItemsb__0Type">
            <summary>Sets the mole of <see cref="M:Atom.Design.BaseTypeSelectionEditor.&lt;GetSelectableItems&gt;b__0(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBinaryDeserializationContext">
            <summary>Mole type of <see cref="T:Atom.Storage.BinaryDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.#ctor(Atom.Storage.BinaryDeserializationContext)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.Bind(Atom.Storage.IBinaryDeserializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.Bind(Atom.Storage.IDeserializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.Bind(Atom.Storage.IUnsignedBinaryDeserializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinaryDeserializationContext.Bind(Atom.Storage.IUnsignedDeserializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ConstructorBinaryReader">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.#ctor(T:System.IO.BinaryReader)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ConstructorStream">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.#ctor(T:System.IO.Stream)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadBoolean">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadByte">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadChar">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadDouble">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadInt16">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadInt32">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadInt64">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadSingle">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadString">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReadUInt32">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.ReaderGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this BinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadBoolean">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadByte">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadChar">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadDouble">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadInt16">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadInt32">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadInt64">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadSingle">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadString">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReadUInt32">
            <summary><para>Sets the mole of <see cref="M:Atom.Storage.BinaryDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinaryDeserializationContext.AllInstances.ReaderGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this BinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBinarySerializationContext">
            <summary>Mole type of <see cref="T:Atom.Storage.BinarySerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.#ctor(Atom.Storage.BinarySerializationContext)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.Bind(Atom.Storage.IBinarySerializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.Bind(Atom.Storage.ISerializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.Bind(Atom.Storage.IUnsignedBinarySerializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MBinarySerializationContext.Bind(Atom.Storage.IUnsignedSerializationContext)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.ConstructorBinaryWriter">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.#ctor(T:System.IO.BinaryWriter)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.ConstructorStream">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.#ctor(T:System.IO.Stream)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteByte">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteChar">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteDouble">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteInt32">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteInt64">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteSingle">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteString">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriteUnsignedUInt32">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.WriterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this BinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MBinarySerializationContext.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteByte">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteChar">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteDouble">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteInt32">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteInt64">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteSingle">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteString">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriteUnsignedUInt32">
            <summary>Sets the mole of <see cref="M:Atom.Storage.BinarySerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MBinarySerializationContext.AllInstances.WriterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Storage.BinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this BinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MChangedValue`1">
            <summary>Mole type of <see cref="T:Atom.ChangedValue`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MChangedValue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MChangedValue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MChangedValue`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MChangedValue`1.EqualityOpChangedValueOfTChangedValueOfT">
            <summary>Sets the mole of <see cref="M:Atom.ChangedValue`1.op_Equality(Atom.ChangedValue`1{`1},Atom.ChangedValue`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MChangedValue`1.InequalityOpChangedValueOfTChangedValueOfT">
            <summary>Sets the mole of <see cref="M:Atom.ChangedValue`1.op_Inequality(Atom.ChangedValue`1{`1},Atom.ChangedValue`1{`1})"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MChangedValue`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MCollectionExtensions">
            <summary>Mole type of <see cref="T:Atom.Collections.CollectionExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MCollectionExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MCollectionExtensions.AddRangeICollectionOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.CollectionExtensions.AddRange``1(System.Collections.Generic.ICollection`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MCollectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MCollectionExtensions.ReplaceICollectionOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.CollectionExtensions.Replace``1(System.Collections.Generic.ICollection`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MCollectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Components.Moles.MComponent">
            <summary>Mole type of <see cref="T:Atom.Components.Component"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponent.#ctor(Atom.Components.Component)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponent.Bind(Atom.IPreUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponent.Bind(Atom.IUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponent.Bind(Atom.Components.IComponent)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Component.#ctor"/>.</para>
                        Initializes a new instance of the Component class.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.Initialize">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Component.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.InitializeBindings">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Component.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.IsEnabledGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.IsEnabledSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this <see cref="T:Atom.Components.Component"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.OwnerSetIEntity">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this <see cref="T:Atom.Components.Component"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Component.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Component.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MComponent.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.Initialize">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Component.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.InitializeBindings">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Component.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.IsEnabledGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.IsEnabledSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this <see cref="T:Atom.Components.Component"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.OwnerSetIEntity">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Component.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this <see cref="T:Atom.Components.Component"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Component.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponent.AllInstances.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Component.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MComponentNotFoundException">
            <summary>Mole type of <see cref="T:Atom.Components.ComponentNotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponentNotFoundException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponentNotFoundException.#ctor(Atom.Components.ComponentNotFoundException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponentNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponentNotFoundException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MComponentNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.ComponentNotFoundException.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Components.ComponentNotFoundException"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.ComponentNotFoundException.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.Components.ComponentNotFoundException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:Atom.Components.ComponentNotFoundException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MComponentNotFoundException.ConstructorType">
            <summary>Sets the mole of <see cref="M:Atom.Components.ComponentNotFoundException.#ctor(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MComponentNotFoundException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfig">
            <summary>Mole type of <see cref="T:Atom.Configuration.Config"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfig.#ctor(Atom.Configuration.Config)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfig.Bind(Atom.Configuration.IConfig)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.ConstructorIConfigStore">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.#ctor(T:Atom.Configuration.IConfigStore)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.ConstructorIConfigStoreIConfigPropertySearcherIStringConverter">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.#ctor(T:Atom.Configuration.IConfigStore,T:Atom.Configuration.IConfigPropertySearcher,T:Atom.IStringConverter)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.FindConfigProperties">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.FindConfigProperties"/>.</para>
                        Finds the configuration properties that have been defined on the sub-(classes) of this Config.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.GetStorageNameTupleOfPropertyInfoIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.GetStorageName(System.Tuple`2{T:System.Reflection.PropertyInfo,T:Atom.Configuration.IConfigPropertyAttribute})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.Load">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.Load"/>.</para>
                        Loads the data stored in the <see cref="T:Atom.Configuration.IConfigStore"/> into this <see cref="T:Atom.Configuration.Config"/>.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.LoadDefaults">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadDefaults"/>.</para>
                        Loads the default values of the config properties.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.LoadDefaultsIEnumerableOfTupleOfPropertyInfoIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadDefaults(System.Collections.Generic.IEnumerable`1{System.Tuple`2{T:System.Reflection.PropertyInfo,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.LoadFromStoreIEnumerableOfTupleOfPropertyInfoIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadFromStore(System.Collections.Generic.IEnumerable`1{System.Tuple`2{T:System.Reflection.PropertyInfo,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.ParseValueStringType">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.ParseValue(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.Save">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.Save"/>.</para>
                        Saves this Config to the <see cref="T:Atom.Configuration.IConfigStore"/>.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.SerializeProperties">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.SerializeProperties"/>.</para>
                        Serializes the properties stored in this Config instance
                        into a storeable format.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.SetPropertyValuePropertyInfoObject">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.SetPropertyValue(T:System.Reflection.PropertyInfo,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfig.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.FindConfigProperties">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.FindConfigProperties"/>.</para>
                        Finds the configuration properties that have been defined on the sub-(classes) of this Config.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.Load">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.Load"/>.</para>
                        Loads the data stored in the <see cref="T:Atom.Configuration.IConfigStore"/> into this <see cref="T:Atom.Configuration.Config"/>.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.LoadDefaults">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadDefaults"/>.</para>
                        Loads the default values of the config properties.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.LoadDefaultsIEnumerableOfTupleOfPropertyInfoIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadDefaults(System.Collections.Generic.IEnumerable`1{System.Tuple`2{T:System.Reflection.PropertyInfo,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.LoadFromStoreIEnumerableOfTupleOfPropertyInfoIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.LoadFromStore(System.Collections.Generic.IEnumerable`1{System.Tuple`2{T:System.Reflection.PropertyInfo,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.ParseValueStringType">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.ParseValue(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.Save">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.Save"/>.</para>
                        Saves this Config to the <see cref="T:Atom.Configuration.IConfigStore"/>.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.SerializeProperties">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.Config.SerializeProperties"/>.</para>
                        Serializes the properties stored in this Config instance
                        into a storeable format.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfig.AllInstances.SetPropertyValuePropertyInfoObject">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.Config.SetPropertyValue(T:System.Reflection.PropertyInfo,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfigPropertyAttribute">
            <summary>Mole type of <see cref="T:Atom.Configuration.ConfigPropertyAttribute"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertyAttribute.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertyAttribute.#ctor(Atom.Configuration.ConfigPropertyAttribute)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertyAttribute.Bind(Atom.Configuration.IConfigPropertyAttribute)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertyAttribute.Bind(System.Runtime.InteropServices._Attribute)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.CommentGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.CommentSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertyAttribute.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.DefaultValueGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.DefaultValueSetObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.StorageNameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.StorageNameSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.CommentGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.CommentSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.DefaultValueGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.DefaultValueSetObject">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.StorageNameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertyAttribute.AllInstances.StorageNameSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Configuration.ConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfigPropertySearcher">
            <summary>Mole type of <see cref="T:Atom.Configuration.ConfigPropertySearcher"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertySearcher.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertySearcher.#ctor(Atom.Configuration.ConfigPropertySearcher)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertySearcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MConfigPropertySearcher.Bind(Atom.Configuration.IConfigPropertySearcher)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertySearcher.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher.GetConfigAttributePropertyInfo">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertySearcher.GetConfigAttribute(T:System.Reflection.PropertyInfo)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher.SearchType">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertySearcher.Search(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher._GetConfigAttributeb__7Object">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertySearcher.&lt;GetConfigAttribute&gt;b__7(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MConfigPropertySearcher.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MConfigPropertySearcher.AllInstances.SearchType">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.ConfigPropertySearcher.Search(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MConsoleLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.ConsoleLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MConsoleLog.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MConsoleLog.#ctor(Atom.Diagnostics.ConsoleLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MConsoleLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MConsoleLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.WriteLine"/>.</para>
                        Writes a new empty line to this ConsoleLog.
                        </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MConsoleLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.AllInstances.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.AllInstances.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MConsoleLog.AllInstances.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.ConsoleLog.WriteLine"/>.</para>
                        Writes a new empty line to this ConsoleLog.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MCountingVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.CountingVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.#ctor(Atom.Patterns.Visitor.CountingVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.Bind(Atom.Patterns.Visitor.IVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.CountingVisitor`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.CountingVisitor`1.Count"/>.</para>
                        Gets the number of items that have been visited by this CountingVisitor{T}.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.CountingVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this CountingVisitor{T} is done performing its work.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.Reset">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Visitor.CountingVisitor`1.Reset"/>.</para>
                        Resets the number of items that have been
                        visited by this CountingVisitor{T}.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.CountingVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.CountingVisitor`1.Count"/>.</para>
                        Gets the number of items that have been visited by this CountingVisitor{T}.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.AllInstances.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.CountingVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this CountingVisitor{T} is done performing its work.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.AllInstances.Reset">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Visitor.CountingVisitor`1.Reset"/>.</para>
                        Resets the number of items that have been
                        visited by this CountingVisitor{T}.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MCountingVisitor`1.AllInstances.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.CountingVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Provider.DirectObjectProvider`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.#ctor(Atom.Patterns.Provider.DirectObjectProvider{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.Bind(Atom.IObjectProvider{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.ConstructorTObject">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.DirectObjectProvider`1.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.TryResolve">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Provider.DirectObjectProvider`1.TryResolve"/>.</para>
                        Attempts to get the object this IObjectProvider{TObject}
                        provides.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MDirectObjectProvider`1.AllInstances.TryResolve">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Provider.DirectObjectProvider`1.TryResolve"/>.</para>
                        Attempts to get the object this IObjectProvider{TObject}
                        provides.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.EmptyVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.#ctor(Atom.Patterns.Visitor.EmptyVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.Bind(Atom.Patterns.Visitor.IVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Visitor.EmptyVisitor`1.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Patterns.Visitor.EmptyVisitor`1"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.EmptyVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this IVisitor{T} is done performing it&apos;s work..
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.InstanceGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.EmptyVisitor`1.Instance"/>.</para>
                        Gets the singleton instance of the <see cref="T:Atom.Patterns.Visitor.EmptyVisitor`1"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.EmptyVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.AllInstances.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.EmptyVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this IVisitor{T} is done performing it&apos;s work..
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MEmptyVisitor`1.AllInstances.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.EmptyVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MEntity">
            <summary>Mole type of <see cref="T:Atom.Components.Entity"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.#ctor(Atom.Components.Entity)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.Bind(Atom.INameable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.Bind(Atom.IPreUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.Bind(Atom.IReadOnlyNameable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.Bind(Atom.IUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntity.Bind(Atom.Components.IEntity)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.ComponentsGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Components"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntityComponentCollection"/> that contains the <see cref="T:Atom.Components.IComponent"/>s
                        this Entity is composed of.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.Entity.#ctor"/>.</para>
                        Initializes a new instance of the Entity class, that
                        uses the <see cref="T:Atom.Components.EntityComponentCollection"/> with a default capacity of 5.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.ConstructorIEntityComponentCollection">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.#ctor(T:Atom.Components.IEntityComponentCollection)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.NameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Name"/>.</para>
                        Gets or sets the name that (usually) uniquely identifies this Entity.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.NameSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Name"/>.</para>
                        Gets or sets the name that (usually) uniquely identifies this Entity.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MEntity.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.AllInstances.ComponentsGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Components"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntityComponentCollection"/> that contains the <see cref="T:Atom.Components.IComponent"/>s
                        this Entity is composed of.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.AllInstances.NameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Name"/>.</para>
                        Gets or sets the name that (usually) uniquely identifies this Entity.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.AllInstances.NameSetString">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.Entity.Name"/>.</para>
                        Gets or sets the name that (usually) uniquely identifies this Entity.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.AllInstances.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntity.AllInstances.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.Entity.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MEntityComponentCollection">
            <summary>Mole type of <see cref="T:Atom.Components.EntityComponentCollection"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.#ctor(Atom.Components.EntityComponentCollection)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Bind(Atom.IPreUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Bind(Atom.IUpdateable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Bind(Atom.Components.IEntityComponentCollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Bind(System.Collections.Generic.IEnumerable{Atom.Components.IComponent})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Contains``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Boolean})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains``1"/>.</para>
                        Determines whether this <see cref="T:Atom.Components.EntityComponentCollection"/> contains
                        a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Find``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Find``1"/>.</para>
                        Finds the first occurence of an <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.FindAll``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IList{``0}})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.FindAll``1"/>.</para>
                        Finds all <see cref="T:Atom.Components.IComponent"/>s that are of type <typeparamref name="T"/> or implement it.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Get``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Get``1"/>.</para>
                        Tries to get the <see cref="T:Atom.Components.IComponent"/> of the specified Type.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.Remove``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Boolean})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Remove``1"/>.</para>
                        Removes the first occurence of a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AddIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Add(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AddRangeIEnumerableOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.AddRange(System.Collections.Generic.IEnumerable`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AddedAddRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.add_Added(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AddedRemoveRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.remove_Added(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.BeginSetup">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.BeginSetup"/>.</para>
                        Begins the region in which <see cref="T:Atom.Components.IComponent"/>s are added to this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.BindingNotificationEnabledGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.BindingNotificationEnabledSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Clear"/>.</para>
                        Removes all <see cref="T:Atom.Components.IComponent"/>s from this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.ConstructorIEntityInt32">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.#ctor(T:Atom.Components.IEntity,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.ContainsIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.ContainsType">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Components.IComponent"/>s in this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.EndSetup">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.EndSetup"/>.</para>
                        Ends the setup process initiated by BeginSetup.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates over the <see cref="N:Atom.Components"/>
                        of this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.IEntityComponentCollectionContracts_AtomComponentsIEntityComponentCollectionAddRangeb__0_0IComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.IEntityComponentCollectionContracts_&lt;Atom.Components.IEntityComponentCollection.AddRange&gt;b__0_0(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.InitializeBindings">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.InitializeBindings"/>.</para>
                        Initialize the bindings between components in this EntityComponentCollection
                        by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        if <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/> is true.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.IsReadOnlySetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.ItemGetType">
            <summary>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Item(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.OnComponentAddedIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.OnComponentAdded(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.OnComponentRemovedIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.OnComponentRemoved(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntity"/> that owns this EntityComponentCollection.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.RemoveIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Remove(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.RemovedAddRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.add_Removed(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.RemovedRemoveRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.remove_Removed(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.MEntityComponentCollection.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.AllInstances.Contains``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Components.EntityComponentCollection,System.Boolean})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains``1"/>.</para>
                        Determines whether this <see cref="T:Atom.Components.EntityComponentCollection"/> contains
                        a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.AllInstances.Find``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Components.EntityComponentCollection,``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Find``1"/>.</para>
                        Finds the first occurence of an <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.AllInstances.FindAll``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Components.EntityComponentCollection,System.Collections.Generic.IList{``0}})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.FindAll``1"/>.</para>
                        Finds all <see cref="T:Atom.Components.IComponent"/>s that are of type <typeparamref name="T"/> or implement it.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.AllInstances.Get``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Components.EntityComponentCollection,``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Get``1"/>.</para>
                        Tries to get the <see cref="T:Atom.Components.IComponent"/> of the specified Type.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.MEntityComponentCollection.AllInstances.Remove``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Components.EntityComponentCollection,System.Boolean})">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Remove``1"/>.</para>
                        Removes the first occurence of a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.AddIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Add(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.AddRangeIEnumerableOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.AddRange(System.Collections.Generic.IEnumerable`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.AddedAddRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.add_Added(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.AddedRemoveRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.remove_Added(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.BeginSetup">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.BeginSetup"/>.</para>
                        Begins the region in which <see cref="T:Atom.Components.IComponent"/>s are added to this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.BindingNotificationEnabledGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.BindingNotificationEnabledSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Clear"/>.</para>
                        Removes all <see cref="T:Atom.Components.IComponent"/>s from this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.ContainsIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.ContainsType">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Contains(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Components.IComponent"/>s in this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.EndSetup">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.EndSetup"/>.</para>
                        Ends the setup process initiated by BeginSetup.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates over the <see cref="N:Atom.Components"/>
                        of this <see cref="T:Atom.Components.EntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.InitializeBindings">
            <summary><para>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.InitializeBindings"/>.</para>
                        Initialize the bindings between components in this EntityComponentCollection
                        by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        if <see cref="P:Atom.Components.EntityComponentCollection.BindingNotificationEnabled"/> is true.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.IsReadOnlySetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this EntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.ItemGetType">
            <summary>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Item(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.OnComponentAddedIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.OnComponentAdded(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.OnComponentRemovedIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.OnComponentRemoved(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Components.EntityComponentCollection.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntity"/> that owns this EntityComponentCollection.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.PreUpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.RemoveIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Remove(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.RemovedAddRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.add_Removed(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.RemovedRemoveRelaxedEventHandlerOfIComponent">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.remove_Removed(Atom.RelaxedEventHandler`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.MEntityComponentCollection.AllInstances.UpdateIUpdateContext">
            <summary>Sets the mole of <see cref="M:Atom.Components.EntityComponentCollection.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MEnumerableExtensions">
            <summary>Mole type of <see cref="T:Atom.Collections.EnumerableExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.CastIEnumerableOfTSourceConverterOfTSourceTResult``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Converter{``0,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.Cast``2(System.Collections.Generic.IEnumerable`1{``0},System.Converter`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ConcatIEnumerableOfTFirstIEnumerableOfTSecond``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.Concat``3(System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ConcatIEnumerableOfTFirstIEnumerableOfTSecondConverterOfTFirstTDestinationConverterOfTSecondTDestination``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Converter{``1,``0},System.Converter{``2,``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.Concat``3(System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2},System.Converter`2{``1,``0},System.Converter`2{``2,``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ContainsAnyIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ContainsIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.Contains``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.CreateFittingListIEnumerableOfTSource``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``1}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.CreateFittingList``2(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ElementsEqualIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.ElementsEqual``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.ElementsEqualIEnumerableOfTIEnumerableOfTIEqualityComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.ElementsEqual``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEqualityComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.HasDistinctElementsIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.HasDistinctElements``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.HasDistinctElementsIEnumerableOfTIEqualityComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.HasDistinctElements``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEqualityComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MEnumerableExtensions.IndexOfIEnumerableOfTPredicateOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Int32})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable`1{``0},System.Predicate`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MEnumerableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Moles.MEventHandlerExtensions">
            <summary>Mole type of <see cref="T:Atom.EventHandlerExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.RaiseEventHandlerOfTEventArgsObjectTEventArgs``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.EventHandler{``0},System.Object,``0})">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise``1(System.EventHandler`1{``0},T:System.Object,``0)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.RaiseRelaxedEventHandlerOfTEventArgsObjectTEventArgs``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.RelaxedEventHandler{``0},System.Object,``0})">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise``1(Atom.RelaxedEventHandler`1{``0},T:System.Object,``0)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.RaiseRelaxedEventHandlerOfTSenderTEventArgsTSenderTEventArgs``2(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.RelaxedEventHandler{``0,``1},``0,``1})">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise``2(Atom.RelaxedEventHandler`2{``0,``1},``0,``1)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MEventHandlerExtensions.RaiseSimpleEventHandlerOfTSenderTSender``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.SimpleEventHandler{``0},``0})">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise``1(Atom.SimpleEventHandler`1{``0},``0)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MEventHandlerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MEventHandlerExtensions.RaiseEventHandlerObject">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise(T:System.EventHandler,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MEventHandlerExtensions.RaiseEventHandlerObjectEventArgs">
            <summary>Sets the mole of <see cref="M:Atom.EventHandlerExtensions.Raise(T:System.EventHandler,T:System.Object,T:System.EventArgs)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MExceptionExtensions">
            <summary>Mole type of <see cref="T:Atom.ExceptionExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MExceptionExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MExceptionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MExceptionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MExceptionExtensions.GetInternalPreserveStackTraceMethod">
            <summary><para>Sets the mole of <see cref="M:Atom.ExceptionExtensions.GetInternalPreserveStackTraceMethod"/>.</para>
                        Uses reflection to return the internal InternalPreserveStackTrace method of the Exception class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MExceptionExtensions.PreserveStackTraceException">
            <summary>Sets the mole of <see cref="M:Atom.ExceptionExtensions.PreserveStackTrace(T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MExistingItemCollectionEditor`1">
            <summary>Mole type of <see cref="T:Atom.Design.ExistingItemCollectionEditor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MExistingItemCollectionEditor`1.#ctor(Atom.Design.ExistingItemCollectionEditor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MExistingItemCollectionEditor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.GetItemsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetItems(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.SetItemsObjectTItemArray">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.SetItems(T:System.Object,`1[])"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MExistingItemCollectionEditor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.AllInstances.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.AllInstances.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.AllInstances.GetItemsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetItems(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MExistingItemCollectionEditor`1.AllInstances.SetItemsObjectTItemArray">
            <summary>Sets the mole of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.SetItems(T:System.Object,`1[])"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MFastMultiMap`2">
            <summary>Mole type of <see cref="T:Atom.Collections.FastMultiMap`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.#ctor(Atom.Collections.FastMultiMap{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.Bind(Atom.Collections.IMultiMap{`0,`1})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MFastMultiMap`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.List{`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AddTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AtomCollectionsIMultiMapTKeyTElementTryGetTKeyIEnumerableOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Atom.Collections.IMultiMap&lt;TKey,TElement&gt;.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.FastMultiMap`2"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.ContainsTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.ContainsTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.FastMultiMap`2.Count"/>.</para>
                        Gets the number of key/value association pairs in this FastMultiMap&lt;TKey,TElement&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the lists of this FastMultiMap.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:Atom.Collections.FastMultiMap`2.Item(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.RemoveTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.TryGetTKeyListOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.TryGet(`1,System.Collections.Generic.List`1{`2}@)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MFastMultiMap`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.AddTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.AtomCollectionsIMultiMapTKeyTElementTryGetTKeyIEnumerableOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Atom.Collections.IMultiMap&lt;TKey,TElement&gt;.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.ContainsTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.ContainsTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.FastMultiMap`2.Count"/>.</para>
                        Gets the number of key/value association pairs in this FastMultiMap&lt;TKey,TElement&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the lists of this FastMultiMap.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:Atom.Collections.FastMultiMap`2.Item(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.RemoveTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MFastMultiMap`2.AllInstances.TryGetTKeyListOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.FastMultiMap`2.TryGet(`1,System.Collections.Generic.List`1{`2}@)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor">
            <summary>Mole type of <see cref="T:Atom.Design.Descriptors.FieldPropertyDescriptor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.#ctor(Atom.Design.Descriptors.FieldPropertyDescriptor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.ConstructorFieldInfo">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.FieldPropertyDescriptor.#ctor(T:System.Reflection.FieldInfo)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.GetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.FieldPropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.PropertyTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.FieldPropertyDescriptor.PropertyType"/>.</para>
                        Gets the type of the field wrapped by the <see cref="T:Atom.Design.Descriptors.FieldPropertyDescriptor"/>.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.SetValueObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.FieldPropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.AllInstances.GetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.FieldPropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.AllInstances.PropertyTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.FieldPropertyDescriptor.PropertyType"/>.</para>
                        Gets the type of the field wrapped by the <see cref="T:Atom.Design.Descriptors.FieldPropertyDescriptor"/>.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MFieldPropertyDescriptor.AllInstances.SetValueObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.FieldPropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MFileLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.FileLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MFileLog.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MFileLog.#ctor(Atom.Diagnostics.FileLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MFileLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MFileLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MFileLog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MFileLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MFileLog.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.FileLog.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MFileLog.ConstructorStringEncoding">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.FileLog.#ctor(T:System.String,T:System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MFileLog.CreateTextWriterStringEncoding">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.FileLog.CreateTextWriter(T:System.String,T:System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MFileLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Moles.MGlobalServices">
            <summary>Mole type of <see cref="T:Atom.GlobalServices"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MGlobalServices.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MGlobalServices.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MGlobalServices.GetService``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.GlobalServices.GetService``1"/>.</para>
                        Gets the requested service.
                        </summary>
        </member>
        <member name="M:Atom.Moles.MGlobalServices.GetServiceString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,``0})">
            <summary>Sets the mole of <see cref="M:Atom.GlobalServices.GetService``1(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MGlobalServices.TryGetService``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.GlobalServices.TryGetService``1"/>.</para>
                        Tries to get the requested service.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MGlobalServices.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MGlobalServices.ContainerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.GlobalServices.Container"/>.</para>
                        Gets or sets the object which stores the globally accessable services.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MGlobalServices.ContainerSetServiceContainer">
            <summary><para>Sets the mole of <see cref="P:Atom.GlobalServices.Container"/>.</para>
                        Gets or sets the object which stores the globally accessable services.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MGlobalServices.TryGetServiceType">
            <summary>Sets the mole of <see cref="M:Atom.GlobalServices.TryGetService(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MGlobalServices.TryLogString">
            <summary>Sets the mole of <see cref="M:Atom.GlobalServices.TryLog(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MHashCodeBuilder">
            <summary>Mole type of <see cref="T:Atom.HashCodeBuilder"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MHashCodeBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MHashCodeBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MHashCodeBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Moles.MHashCodeBuilder.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHat`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Hat`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHat`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHat`1.#ctor(Atom.Collections.Hat{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHat`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHat`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHat`1.Bind(System.Collections.Generic.IEnumerable{Atom.Collections.HatEntry{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Clear"/>.</para>
                        Removes all items from the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.ConstructorIRand">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.#ctor(T:Atom.Math.IRand)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.ConstructorIRandInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.#ctor(T:Atom.Math.IRand,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.Count"/>.</para>
                        Gets a value that represents the number of HatEntries
                        that have been inserted into this <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.Get">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Get"/>.</para>
                        Randomly picks out one item from the <see cref="T:Atom.Collections.Hat`1"/>.
                        Items with greater weight have a higher chance to be picked.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.GetEnumerator"/>.</para>
                        Receives an enumerates that iterates over the entries in this <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.InsertTSingle">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.InsertTSingleInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.InsertTSingleInt32SingleBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single,T:System.Int32,T:System.Single,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.Hat`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.RemoveEntryHatEntryOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.RemoveEntry(Atom.Collections.HatEntry`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.RemoveTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Remove(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.SetWeightModifierInt32Single">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.SetWeightModifier(T:System.Int32,T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.TotalWeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.TotalWeight"/>.</para>
                        Gets the total weight of all items in the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.TotalWeightSetSingle">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.TotalWeight"/>.</para>
                        Gets the total weight of all items in the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHat`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Clear"/>.</para>
                        Removes all items from the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.Count"/>.</para>
                        Gets a value that represents the number of HatEntries
                        that have been inserted into this <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.Get">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Get"/>.</para>
                        Randomly picks out one item from the <see cref="T:Atom.Collections.Hat`1"/>.
                        Items with greater weight have a higher chance to be picked.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Hat`1.GetEnumerator"/>.</para>
                        Receives an enumerates that iterates over the entries in this <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.InsertTSingle">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.InsertTSingleInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.InsertTSingleInt32SingleBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Insert(`1,T:System.Single,T:System.Int32,T:System.Single,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.Hat`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.RemoveEntryHatEntryOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.RemoveEntry(Atom.Collections.HatEntry`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.RemoveTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.Remove(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.SetWeightModifierInt32Single">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.SetWeightModifier(T:System.Int32,T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Hat`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.TotalWeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.TotalWeight"/>.</para>
                        Gets the total weight of all items in the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHat`1.AllInstances.TotalWeightSetSingle">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Hat`1.TotalWeight"/>.</para>
                        Gets the total weight of all items in the <see cref="T:Atom.Collections.Hat`1"/>.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHatEntry`1">
            <summary>Mole type of <see cref="T:Atom.Collections.HatEntry`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHatEntry`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHatEntry`1.#ctor(Atom.Collections.HatEntry{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHatEntry`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.ConstructorHatOfTTInt32SingleSingleBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Collections.HatEntry`1.#ctor(Atom.Collections.Hat`1{`1},`1,T:System.Int32,T:System.Single,T:System.Single,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.DataGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Data"/>.</para>
                        Gets the data stores in the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.HasIndividualModifierGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.HasIndividualModifier"/>.</para>
                        Gets or sets a value indicating whether the <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/> is
                        individual to all others.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.HasIndividualModifierSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.HasIndividualModifier"/>.</para>
                        Gets or sets a value indicating whether the <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/> is
                        individual to all others.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.IdGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Id"/>.</para>
                        Gets the id associated with this <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.OriginalWeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.OriginalWeight"/>.</para>
                        Gets the original weight of the <see cref="T:Atom.Collections.HatEntry`1"/> ,
                        before any modifiers.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Hat`1"/> that owns the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.OwnerSetHatOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Hat`1"/> that owns the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.WeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Weight"/>.</para>
                        Gets the final weight of the <see cref="T:Atom.Collections.HatEntry`1"/>,
                        after taking into account the current <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.WeightModifierGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.</para>
                        Gets or sets the weight modifier value of the <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.WeightModifierSetSingle">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.</para>
                        Gets or sets the weight modifier value of the <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHatEntry`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.DataGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Data"/>.</para>
                        Gets the data stores in the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.HasIndividualModifierGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.HasIndividualModifier"/>.</para>
                        Gets or sets a value indicating whether the <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/> is
                        individual to all others.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.HasIndividualModifierSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.HasIndividualModifier"/>.</para>
                        Gets or sets a value indicating whether the <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/> is
                        individual to all others.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.IdGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Id"/>.</para>
                        Gets the id associated with this <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.OriginalWeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.OriginalWeight"/>.</para>
                        Gets the original weight of the <see cref="T:Atom.Collections.HatEntry`1"/> ,
                        before any modifiers.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.OwnerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Hat`1"/> that owns the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.OwnerSetHatOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Hat`1"/> that owns the <see cref="T:Atom.Collections.HatEntry`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.WeightGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.Weight"/>.</para>
                        Gets the final weight of the <see cref="T:Atom.Collections.HatEntry`1"/>,
                        after taking into account the current <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.WeightModifierGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.</para>
                        Gets or sets the weight modifier value of the <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHatEntry`1.AllInstances.WeightModifierSetSingle">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.HatEntry`1.WeightModifier"/>.</para>
                        Gets or sets the weight modifier value of the <see cref="T:Atom.Collections.HatEntry`1"/> .
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHeap`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Heap`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.#ctor(Atom.Collections.Heap{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.Bind(Atom.Collections.IHeap{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MHeap`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Clear"/>.</para>
                        Clears all the objects in this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ComparerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Comparer"/>.</para>
                        Gets the IComparer{T} that is used to compare the objects stored in this IHeap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ConstructorHeapType">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.#ctor(T:Atom.Collections.HeapType)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ConstructorHeapTypeIComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.#ctor(T:Atom.Collections.HeapType,System.Collections.Generic.IComparer`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ConstructorHeapTypeInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.#ctor(T:Atom.Collections.HeapType,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ConstructorHeapTypeInt32IComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.#ctor(T:Atom.Collections.HeapType,T:System.Int32,System.Collections.Generic.IComparer`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Count"/>.</para>
                        Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the collection.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.HeapTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.HeapType"/>.</para>
                        Gets the type of heap represented by this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.Pop">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Pop"/>.</para>
                        Removes and returns the item at the root of this Heap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.RootGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Root"/>.</para>
                        Gets the smallest item in the heap (located at the root).
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.SystemCollectionsGenericICollectionTRemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MHeap`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Clear"/>.</para>
                        Clears all the objects in this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.ComparerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Comparer"/>.</para>
                        Gets the IComparer{T} that is used to compare the objects stored in this IHeap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Count"/>.</para>
                        Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the collection.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.HeapTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.HeapType"/>.</para>
                        Gets the type of heap represented by this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.Pop">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Heap`1.Pop"/>.</para>
                        Removes and returns the item at the root of this Heap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.RootGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Heap`1.Root"/>.</para>
                        Gets the smallest item in the heap (located at the root).
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MHeap`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Heap`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MIOUtilities">
            <summary>Mole type of <see cref="T:Atom.IOUtilities"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MIOUtilities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MIOUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MIOUtilities.ActuallyCopyStreamStreamStream">
            <summary>Sets the mole of <see cref="M:Atom.IOUtilities.ActuallyCopyStream(T:System.IO.Stream,T:System.IO.Stream)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MIOUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MIOUtilities.CopyStreamStreamStream">
            <summary>Sets the mole of <see cref="M:Atom.IOUtilities.CopyStream(T:System.IO.Stream,T:System.IO.Stream)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.InOrderVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.#ctor(Atom.Patterns.Visitor.InOrderVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.Bind(Atom.Patterns.Visitor.IOrderedVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.ConstructorIVisitorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.InOrderVisitor`1.#ctor(Atom.Patterns.Visitor.IVisitor`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.InOrderVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.InOrderVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.AllInstances.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.InOrderVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MInOrderVisitor`1.AllInstances.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.InOrderVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MInvalidExtensionException">
            <summary>Mole type of <see cref="T:Atom.InvalidExtensionException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidExtensionException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidExtensionException.#ctor(Atom.InvalidExtensionException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidExtensionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidExtensionException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidExtensionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MInvalidExtensionException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MInvalidExtensionException.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.InvalidExtensionException.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.InvalidExtensionException"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidExtensionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.InvalidExtensionException.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidExtensionException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.InvalidExtensionException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidExtensionException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:Atom.InvalidExtensionException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MInvalidExtensionException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Moles.MInvalidVersionException">
            <summary>Mole type of <see cref="T:Atom.InvalidVersionException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidVersionException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidVersionException.#ctor(Atom.InvalidVersionException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidVersionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidVersionException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MInvalidVersionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MInvalidVersionException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MInvalidVersionException.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.InvalidVersionException.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.InvalidVersionException"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidVersionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.InvalidVersionException.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidVersionException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.InvalidVersionException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MInvalidVersionException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:Atom.InvalidVersionException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MInvalidVersionException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Provider.LambdaObjectProvider`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.#ctor(Atom.Patterns.Provider.LambdaObjectProvider{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.Bind(Atom.IObjectProvider{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.ConstructorFuncOfIObjectProviderContainerTObjectIObjectProviderContainer">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.LambdaObjectProvider`1.#ctor(System.Func`2{T:Atom.IObjectProviderContainer,`1},T:Atom.IObjectProviderContainer)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.ConstructorFuncOfTObject">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.LambdaObjectProvider`1.#ctor(System.Func`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.TryResolve">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Provider.LambdaObjectProvider`1.TryResolve"/>.</para>
                        Gets the object this IObjectProvider{TObject}.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MLambdaObjectProvider`1.AllInstances.TryResolve">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Provider.LambdaObjectProvider`1.TryResolve"/>.</para>
                        Gets the object this IObjectProvider{TObject}.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MListExtensions">
            <summary>Mole type of <see cref="T:Atom.Collections.ListExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MListExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MListExtensions.AsReadOnlyIListOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ListExtensions.AsReadOnly``1(System.Collections.Generic.IList`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.MListExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MListExtensions.SwapItemsIListOfTInt32Int32``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IList{``0},System.Int32,System.Int32})">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ListExtensions.SwapItems``1(System.Collections.Generic.IList`1{``0},T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MListExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MLogExtensions">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.LogExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.WriteILogIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Diagnostics.ILog,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.Write``1(T:Atom.Diagnostics.ILog,System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.WriteILogLogSeveritiesIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Diagnostics.ILog,Atom.Diagnostics.LogSeverities,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.Write``1(T:Atom.Diagnostics.ILog,T:Atom.Diagnostics.LogSeverities,System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.WriteLineILogIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Diagnostics.ILog,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.WriteLine``1(T:Atom.Diagnostics.ILog,System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogExtensions.WriteLineILogLogSeveritiesIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Diagnostics.ILog,Atom.Diagnostics.LogSeverities,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.WriteLine``1(T:Atom.Diagnostics.ILog,T:Atom.Diagnostics.LogSeverities,System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.ContainsLogSeveritiesLogSeverities">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.Contains(T:Atom.Diagnostics.LogSeverities,T:Atom.Diagnostics.LogSeverities)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.WriteILogLogSeveritiesStringObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.Write(T:Atom.Diagnostics.ILog,T:Atom.Diagnostics.LogSeverities,T:System.String,T:System.Object[])"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.WriteILogStringObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.Write(T:Atom.Diagnostics.ILog,T:System.String,T:System.Object[])"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.WriteLineILogLogSeveritiesStringObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.WriteLine(T:Atom.Diagnostics.ILog,T:Atom.Diagnostics.LogSeverities,T:System.String,T:System.Object[])"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogExtensions.WriteLineILogStringObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogExtensions.WriteLine(T:Atom.Diagnostics.ILog,T:System.String,T:System.Object[])"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MLogProvider">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.LogProvider"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogProvider.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogProvider.#ctor(Atom.Diagnostics.LogProvider)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MLogProvider.Bind(Atom.Diagnostics.ILogProvider)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogProvider.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogProvider.ConstructorILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.LogProvider.#ctor(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogProvider.LogGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.LogProvider.Log"/>.</para>
                        Gets the <see cref="T:Atom.Diagnostics.ILog"/> object this LogProvider provides.
                        </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MLogProvider.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MLogProvider.AllInstances.LogGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.LogProvider.Log"/>.</para>
                        Gets the <see cref="T:Atom.Diagnostics.ILog"/> object this LogProvider provides.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MManagedDisposable">
            <summary>Mole type of <see cref="T:Atom.ManagedDisposable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MManagedDisposable.#ctor(Atom.ManagedDisposable)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MManagedDisposable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MManagedDisposable.Bind(Atom.IIsDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MManagedDisposable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.#ctor"/>.</para>
                        Initializes a new instance of the ManagedDisposable class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.Dispose">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.Dispose"/>.</para>
                        Immediately releases all managed and unmanaged resources this IDisposable object
                        has aquired.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.DisposeBoolean">
            <summary>Sets the mole of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.DisposeManagedResources">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.DisposeUnmanagedResources">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.IsDisposedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.ManagedDisposable.IsDisposed"/>.</para>
                        Gets a value indicating whether this <see cref="T:System.IDisposable"/> object
                        has been disposed.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.ThrowIfDisposed">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.ThrowIfDisposed"/>.</para>
                        Throws a new <see cref="T:System.ObjectDisposedException"/> if this ManagedDisposable object has
                        been disposed.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MManagedDisposable.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.Dispose">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.Dispose"/>.</para>
                        Immediately releases all managed and unmanaged resources this IDisposable object
                        has aquired.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.DisposeBoolean">
            <summary>Sets the mole of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.DisposeManagedResources">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.DisposeUnmanagedResources">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.IsDisposedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.ManagedDisposable.IsDisposed"/>.</para>
                        Gets a value indicating whether this <see cref="T:System.IDisposable"/> object
                        has been disposed.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MManagedDisposable.AllInstances.ThrowIfDisposed">
            <summary><para>Sets the mole of <see cref="M:Atom.ManagedDisposable.ThrowIfDisposed"/>.</para>
                        Throws a new <see cref="T:System.ObjectDisposedException"/> if this ManagedDisposable object has
                        been disposed.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MMaybe">
            <summary>Mole type of <see cref="T:Atom.Maybe"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MMaybe.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MMaybe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MMaybe.None``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.Maybe{``0}})">
            <summary><para>Sets the mole of <see cref="M:Atom.Maybe.None``1"/>.</para>
                        Gets an instance of the Maybe monad that contains &quot;No Value&quot;.
                        </summary>
        </member>
        <member name="M:Atom.Moles.MMaybe.SomeT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,Atom.Maybe{``0}})">
            <summary><para>Sets the mole of <see cref="M:Atom.Maybe.Some``1(``0)"/>.</para>
                        Gets an instance of the Maybe monad that contains
                        the specified <paramref name="value"/>.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MMaybe.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Moles.MMaybe01`1">
            <summary>Mole type of <see cref="T:Atom.Maybe`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MMaybe01`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MMaybe01`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MMaybe01`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Moles.MMaybe01`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor">
            <summary>Mole type of <see cref="T:Atom.Design.Descriptors.MemberPropertyDescriptor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.#ctor(Atom.Design.Descriptors.MemberPropertyDescriptor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.CanResetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.CanResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.ComponentTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.ComponentType"/>.</para>
                        Gets the type of the comonent descriped by the MemberPropertyDescriptor.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.ConstructorMemberInfo">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.#ctor(T:System.Reflection.MemberInfo)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.GetHashCode">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.GetHashCode"/>.</para>
                        Overriden to return the hash-code of the wrapped member.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the MemberPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.ResetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.ShouldSerializeValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ShouldSerializeValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.CanResetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.CanResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.ComponentTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.ComponentType"/>.</para>
                        Gets the type of the comonent descriped by the MemberPropertyDescriptor.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.GetHashCode01">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.GetHashCode"/>.</para>
                        Overriden to return the hash-code of the wrapped member.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the MemberPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.ResetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MMemberPropertyDescriptor.AllInstances.ShouldSerializeValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ShouldSerializeValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MMultiLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.MultiLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.#ctor(Atom.Diagnostics.MultiLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.Bind(System.Collections.Generic.ICollection{Atom.Diagnostics.ILog})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.Bind(System.Collections.Generic.IEnumerable{Atom.Diagnostics.ILog})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MMultiLog.Bind(System.Collections.Generic.IList{Atom.Diagnostics.ILog})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AddILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Add(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Clear"/>.</para>
                        Removes all <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.ContainsILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Contains(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.MultiLog.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the list of <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.IsReadOnlySystemCollectionsGenericICollectionAtomDiagnosticsILogget">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.ICollection&lt;Atom.Diagnostics.ILog&gt;.get_IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.ItemSystemCollectionsGenericIListAtomDiagnosticsILoggetInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.get_Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.ItemSystemCollectionsGenericIListAtomDiagnosticsILogsetInt32ILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.set_Item(T:System.Int32,T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.RemoveILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Remove(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.SystemCollectionsGenericICollectionAtomDiagnosticsILogCopyToILogArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.ICollection&lt;Atom.Diagnostics.ILog&gt;.CopyTo(T:Atom.Diagnostics.ILog[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.SystemCollectionsGenericIListAtomDiagnosticsILogIndexOfILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.IndexOf(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.SystemCollectionsGenericIListAtomDiagnosticsILogInsertInt32ILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.Insert(T:System.Int32,T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.SystemCollectionsGenericIListAtomDiagnosticsILogRemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.WriteLine"/>.</para>
                        Writes a new empty line to each ILog that has been attached to this MultiLog.
                        </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MMultiLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.AddILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Add(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Clear"/>.</para>
                        Removes all <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.ContainsILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Contains(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.MultiLog.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the list of <see cref="T:Atom.Diagnostics.ILog"/>s that listen to this MultiLog.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.IsReadOnlySystemCollectionsGenericICollectionAtomDiagnosticsILogget">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.ICollection&lt;Atom.Diagnostics.ILog&gt;.get_IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.ItemSystemCollectionsGenericIListAtomDiagnosticsILoggetInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.get_Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.ItemSystemCollectionsGenericIListAtomDiagnosticsILogsetInt32ILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.set_Item(T:System.Int32,T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.RemoveILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.Remove(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.SystemCollectionsGenericICollectionAtomDiagnosticsILogCopyToILogArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.ICollection&lt;Atom.Diagnostics.ILog&gt;.CopyTo(T:Atom.Diagnostics.ILog[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.SystemCollectionsGenericIListAtomDiagnosticsILogIndexOfILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.IndexOf(T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.SystemCollectionsGenericIListAtomDiagnosticsILogInsertInt32ILog">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.Insert(T:System.Int32,T:Atom.Diagnostics.ILog)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.SystemCollectionsGenericIListAtomDiagnosticsILogRemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.Generic.IList&lt;Atom.Diagnostics.ILog&gt;.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MMultiLog.AllInstances.WriteLine">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.MultiLog.WriteLine"/>.</para>
                        Writes a new empty line to each ILog that has been attached to this MultiLog.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MMultiMap`2">
            <summary>Mole type of <see cref="T:Atom.Collections.MultiMap`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.#ctor(Atom.Collections.MultiMap{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.Bind(Atom.Collections.IMultiMap{`0,`1})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.Bind(System.Linq.ILookup{`0,`1})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MMultiMap`2.Bind(System.Collections.Generic.IEnumerable{System.Linq.IGrouping{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AddTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.MultiMap`2"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.ContainsTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.ContainsTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.MultiMap`2.Count"/>.</para>
                        Gets the number of key/value association pairs in this MultiMap&lt;TKey,TElement&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.CreateGroupingTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.CreateGrouping(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the IGroupings that are associated with this MultiMap.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:Atom.Collections.MultiMap`2.Item(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.RemoveTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.TryGetTKeyIEnumerableOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MMultiMap`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.AddTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.ContainsTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.ContainsTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.MultiMap`2.Count"/>.</para>
                        Gets the number of key/value association pairs in this MultiMap&lt;TKey,TElement&gt;.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.CreateGroupingTKey">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.CreateGrouping(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the IGroupings that are associated with this MultiMap.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:Atom.Collections.MultiMap`2.Item(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.RemoveTKeyTElement">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MMultiMap`2.AllInstances.TryGetTKeyIEnumerableOfTElementOut">
            <summary>Sets the mole of <see cref="M:Atom.Collections.MultiMap`2.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MNameOf`1">
            <summary>Mole type of <see cref="T:Atom.NameOf`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MNameOf`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MNameOf`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MNameOf`1.PropertyExpressionOfFuncOfTTProperty``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String})">
            <summary>Sets the mole of <see cref="M:Atom.NameOf`1.Property``1(System.Linq.Expressions.Expression`1{System.Func`2{`1,``0}})"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MNameOf`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Design.Moles.MNameableObjectWrapper`1">
            <summary>Mole type of <see cref="T:Atom.Design.NameableObjectWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MNameableObjectWrapper`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Design.Moles.MNameableObjectWrapper`1.#ctor(Atom.Design.NameableObjectWrapper{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MNameableObjectWrapper`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Design.Moles.MNameableObjectWrapper`1.Bind(Atom.IReadOnlyNameable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Design.Moles.MNameableObjectWrapper`1.Bind(System.IEquatable{Atom.Design.NameableObjectWrapper{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.ConstructorTObjectFuncOfTObjectString">
            <summary>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.#ctor(`1,System.Func`2{`1,T:System.String})"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.EqualsNameableObjectWrapperOfTObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.Equals(Atom.Design.NameableObjectWrapper`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.GetHashCode">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.GetHashCode"/>.</para>
                        Gets the hashcode of this NameableObjectWrapper{TObject} instance.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.NameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.NameableObjectWrapper`1.Name"/>.</para>
                        Gets the name of the object.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.ObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.NameableObjectWrapper`1.Object"/>.</para>
                        Gets the actual object this NameableObjectWrapper{TObject} wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.ToString">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.ToString"/>.</para>
                        Overriden to return the Name this NameableObjectWrapper{TObject} provides.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.EqualsNameableObjectWrapperOfTObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.Equals(Atom.Design.NameableObjectWrapper`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.GetHashCode01">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.GetHashCode"/>.</para>
                        Gets the hashcode of this NameableObjectWrapper{TObject} instance.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.NameGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.NameableObjectWrapper`1.Name"/>.</para>
                        Gets the name of the object.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.ObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.NameableObjectWrapper`1.Object"/>.</para>
                        Gets the actual object this NameableObjectWrapper{TObject} wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MNameableObjectWrapper`1.AllInstances.ToString01">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.NameableObjectWrapper`1.ToString"/>.</para>
                        Overriden to return the Name this NameableObjectWrapper{TObject} provides.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MNonNullList`1">
            <summary>Mole type of <see cref="T:Atom.Collections.NonNullList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.#ctor(Atom.Collections.NonNullList{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MNonNullList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.#ctor"/>.</para>
                        Initializes a new instance of the NonNullList{T} class.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.ConstructorIListOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.#ctor(System.Collections.Generic.IList`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.GetPredicateFailedErrorMessageT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.NonNullPredicateT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.NonNullPredicate(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1._ctorb__0T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.&lt;.ctor&gt;b__0(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MNonNullList`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MNonNullList`1.AllInstances.GetPredicateFailedErrorMessageT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.NonNullList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MNotFoundException">
            <summary>Mole type of <see cref="T:Atom.NotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MNotFoundException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MNotFoundException.#ctor(Atom.NotFoundException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MNotFoundException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MNotFoundException.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.NotFoundException.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.NotFoundException"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.NotFoundException.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MNotFoundException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.NotFoundException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MNotFoundException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:Atom.NotFoundException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MNotFoundException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Collections.Moles.MObjectMatrix`1">
            <summary>Mole type of <see cref="T:Atom.Collections.ObjectMatrix`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.#ctor(Atom.Collections.ObjectMatrix{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.Bind(System.IEquatable{Atom.Collections.ObjectMatrix{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MObjectMatrix`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddColumn">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumn"/>.</para>
                        Adds a single column to this ObjectMatrix{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddColumnTArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumn(`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddColumnsInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumns(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddRow">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRow"/>.</para>
                        Adds a single row to the matrix.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddRowTArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRow(`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AddRowsInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRows(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.Clone">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Clone"/>.</para>
                        Creates a clone of this ObjectMatrix{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ColumnCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.ColumnCount"/>.</para>
                        Gets or sets the number of columns this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ColumnCountSetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.ColumnCount"/>.</para>
                        Gets or sets the number of columns this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ConstructorInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.#ctor(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ConstructorObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.#ctor(Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ConstructorTMdArray2">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.#ctor(`1[0:,0:])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.DeleteColumnInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.DeleteColumn(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.DeleteRowInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.DeleteRow(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.EqualsObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.FindTInt32OutInt32Out">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Find(`1,T:System.Int32@,T:System.Int32@)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetColumnInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetColumn(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates over all elements of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetHashCode">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetHashCode"/>.</para>
                        Returns the hash code of this <see cref="T:Atom.Collections.ObjectMatrix`1"/> instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetIndexInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetIndex(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetRowInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetRow(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetSubMatrixInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetSubMatrix(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.GetSubMatrixInt32Int32Int32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetSubMatrix(T:System.Int32,T:System.Int32,T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.InitializeInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Initialize(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.InterchangeColumnsInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.InterchangeColumns(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.InterchangeRowsInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.InterchangeRows(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.IsSquareGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.IsSquare"/>.</para>
                        Gets a value indicating whether this Matrix is a square Matrix.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ItemGetInt32Int32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.Item(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ItemSetInt32Int32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.Item(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ResizeInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Resize(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.RowCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.RowCount"/>.</para>
                        Gets or sets the number of rows this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.RowCountSetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.RowCount"/>.</para>
                        Gets or sets the number of rows this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.SetColumnInt32TArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetColumn(T:System.Int32,`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.SetRowInt32TArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetRow(T:System.Int32,`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.SetSubMatrixInt32Int32Int32Int32ObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetSubMatrix(T:System.Int32,T:System.Int32,T:System.Int32,T:System.Int32,Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.SetSubMatrixInt32Int32ObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetSubMatrix(T:System.Int32,T:System.Int32,Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.ToString">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.ToString"/>.</para>
                        Returns a humen-readable representation of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MObjectMatrix`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddColumn">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumn"/>.</para>
                        Adds a single column to this ObjectMatrix{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddColumnTArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumn(`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddColumnsInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddColumns(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddRow">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRow"/>.</para>
                        Adds a single row to the matrix.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddRowTArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRow(`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.AddRowsInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.AddRows(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.Clone">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Clone"/>.</para>
                        Creates a clone of this ObjectMatrix{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ColumnCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.ColumnCount"/>.</para>
                        Gets or sets the number of columns this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ColumnCountSetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.ColumnCount"/>.</para>
                        Gets or sets the number of columns this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.DeleteColumnInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.DeleteColumn(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.DeleteRowInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.DeleteRow(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.EqualsObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.FindTInt32OutInt32Out">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Find(`1,T:System.Int32@,T:System.Int32@)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetColumnInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetColumn(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates over all elements of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetHashCode01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetHashCode"/>.</para>
                        Returns the hash code of this <see cref="T:Atom.Collections.ObjectMatrix`1"/> instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetIndexInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetIndex(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetRowInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetRow(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetSubMatrixInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetSubMatrix(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.GetSubMatrixInt32Int32Int32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.GetSubMatrix(T:System.Int32,T:System.Int32,T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.InitializeInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Initialize(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.InterchangeColumnsInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.InterchangeColumns(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.InterchangeRowsInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.InterchangeRows(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.IsSquareGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.IsSquare"/>.</para>
                        Gets a value indicating whether this Matrix is a square Matrix.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ItemGetInt32Int32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.Item(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ItemSetInt32Int32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.Item(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ResizeInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.Resize(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.RowCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.RowCount"/>.</para>
                        Gets or sets the number of rows this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.RowCountSetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.ObjectMatrix`1.RowCount"/>.</para>
                        Gets or sets the number of rows this <see cref="T:Atom.Collections.ObjectMatrix`1"/> has.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.SetColumnInt32TArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetColumn(T:System.Int32,`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.SetRowInt32TArray">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetRow(T:System.Int32,`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.SetSubMatrixInt32Int32Int32Int32ObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetSubMatrix(T:System.Int32,T:System.Int32,T:System.Int32,T:System.Int32,Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.SetSubMatrixInt32Int32ObjectMatrixOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.SetSubMatrix(T:System.Int32,T:System.Int32,Atom.Collections.ObjectMatrix`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MObjectMatrix`1.AllInstances.ToString01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.ObjectMatrix`1.ToString"/>.</para>
                        Returns a humen-readable representation of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.MObjectPropertyWrapperFactory">
            <summary>Mole type of <see cref="T:Atom.Design.ObjectPropertyWrapperFactory"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MObjectPropertyWrapperFactory.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Design.Moles.MObjectPropertyWrapperFactory.#ctor(Atom.Design.ObjectPropertyWrapperFactory)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MObjectPropertyWrapperFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Design.Moles.MObjectPropertyWrapperFactory.Bind(Atom.Design.IObjectPropertyWrapperFactory)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Design.ObjectPropertyWrapperFactory"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.GetObjectTypes">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.GetObjectTypes"/>.</para>
                        Gets the types of the objects this <see cref="T:Atom.Design.ObjectPropertyWrapperFactory"/>
                        provides an <see cref="T:Atom.Design.IObjectPropertyWrapper"/> for.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.ReceiveWrapperObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.ReceiveWrapper(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.ReceiveWrapperOrObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.ReceiveWrapperOrObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.RegisterWrapperIObjectPropertyWrapper">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.RegisterWrapper(T:Atom.Design.IObjectPropertyWrapper)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.UnregisterWrapperType">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.UnregisterWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances.GetObjectTypes">
            <summary><para>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.GetObjectTypes"/>.</para>
                        Gets the types of the objects this <see cref="T:Atom.Design.ObjectPropertyWrapperFactory"/>
                        provides an <see cref="T:Atom.Design.IObjectPropertyWrapper"/> for.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances.ReceiveWrapperObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.ReceiveWrapper(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances.ReceiveWrapperOrObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.ReceiveWrapperOrObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances.RegisterWrapperIObjectPropertyWrapper">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.RegisterWrapper(T:Atom.Design.IObjectPropertyWrapper)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MObjectPropertyWrapperFactory.AllInstances.UnregisterWrapperType">
            <summary>Sets the mole of <see cref="M:Atom.Design.ObjectPropertyWrapperFactory.UnregisterWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MObjectProviderContainer">
            <summary>Mole type of <see cref="T:Atom.Patterns.Provider.ObjectProviderContainer"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.#ctor(Atom.Patterns.Provider.ObjectProviderContainer)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.Bind(Atom.IObjectProviderContainer)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.Bind(Atom.Patterns.Provider.IObjectProviderContainerRegistrar)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.RegisterIObjectProviderOfTObject``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.IObjectProvider{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.ObjectProviderContainer.Register``1(Atom.IObjectProvider`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MObjectProviderContainer.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MObjectProviderContainer.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.ObjectProviderContainer.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MObjectProviderContainer.TryGetObjectProviderType">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.ObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.MObjectProviderContainer.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.MObjectProviderContainer.AllInstances.RegisterIObjectProviderOfTObject``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Patterns.Provider.ObjectProviderContainer,Atom.IObjectProvider{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.ObjectProviderContainer.Register``1(Atom.IObjectProvider`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.MObjectProviderContainer.AllInstances.TryGetObjectProviderType">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Provider.ObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MObjectProviderExtensions">
            <summary>Mole type of <see cref="T:Atom.ObjectProviderExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.GetObjectProviderIObjectProviderContainer``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.IObjectProviderContainer,Atom.IObjectProvider{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.GetObjectProvider``1(T:Atom.IObjectProviderContainer)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.RegisterIObjectProviderContainerRegistrarFuncOfIObjectProviderContainerTObject``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Patterns.Provider.IObjectProviderContainerRegistrar,System.Func{Atom.IObjectProviderContainer,``0}})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.Register``1(T:Atom.Patterns.Provider.IObjectProviderContainerRegistrar,System.Func`2{T:Atom.IObjectProviderContainer,``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.RegisterIObjectProviderContainerRegistrarFuncOfTObject``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.Patterns.Provider.IObjectProviderContainerRegistrar,System.Func{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.Register``1(T:Atom.Patterns.Provider.IObjectProviderContainerRegistrar,System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.ResolveIObjectProviderContainer``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.IObjectProviderContainer,``0})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.Resolve``1(T:Atom.IObjectProviderContainer)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.ResolveIObjectProviderOfTObject``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.IObjectProvider{``0},``0})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.Resolve``1(Atom.IObjectProvider`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.TryGetObjectProviderIObjectProviderContainer``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.IObjectProviderContainer,Atom.IObjectProvider{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.TryGetObjectProvider``1(T:Atom.IObjectProviderContainer)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MObjectProviderExtensions.TryResolveIObjectProviderContainer``1(Microsoft.Moles.Framework.MolesDelegates.Func{Atom.IObjectProviderContainer,``0})">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.TryResolve``1(T:Atom.IObjectProviderContainer)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MObjectProviderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MObjectProviderExtensions.TryResolveIObjectProviderContainerType">
            <summary>Sets the mole of <see cref="M:Atom.ObjectProviderExtensions.TryResolve(T:Atom.IObjectProviderContainer,T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.OrderedVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.#ctor(Atom.Patterns.Visitor.OrderedVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.Bind(Atom.Patterns.Visitor.IOrderedVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.ConstructorIVisitorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.#ctor(Atom.Patterns.Visitor.IVisitor`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.OrderedVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this OrderedVisitor{T} is done visiting.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.VisitorGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.OrderedVisitor`1.Visitor"/>.</para>
                        Gets the <see cref="T:Atom.Patterns.Visitor.IVisitor`1"/> this OrderedVisitor{T} uses internally.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.OrderedVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this OrderedVisitor{T} is done visiting.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MOrderedVisitor`1.AllInstances.VisitorGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.OrderedVisitor`1.Visitor"/>.</para>
                        Gets the <see cref="T:Atom.Patterns.Visitor.IVisitor`1"/> this OrderedVisitor{T} uses internally.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MPlainTextConfigStore">
            <summary>Mole type of <see cref="T:Atom.Configuration.PlainTextConfigStore"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MPlainTextConfigStore.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MPlainTextConfigStore.#ctor(Atom.Configuration.PlainTextConfigStore)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MPlainTextConfigStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.MPlainTextConfigStore.Bind(Atom.Configuration.IConfigStore)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.ConstructorStringEncoding">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.#ctor(T:System.String,T:System.Text.Encoding)"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.Load">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.Load"/>.</para>
                        Gets the properties that have been saved, by loading them from this IConfigStore.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.ReadLines">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.ReadLines"/>.</para>
                        Reads all configuration lines from the text file.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.SaveIEnumerableOfTupleOfStringStringIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.Save(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.WriteLinesIEnumerableOfTupleOfStringStringIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.WriteLines(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.MPlainTextConfigStore.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.AllInstances.Load">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.Load"/>.</para>
                        Gets the properties that have been saved, by loading them from this IConfigStore.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.AllInstances.ReadLines">
            <summary><para>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.ReadLines"/>.</para>
                        Reads all configuration lines from the text file.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.AllInstances.SaveIEnumerableOfTupleOfStringStringIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.Save(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.MPlainTextConfigStore.AllInstances.WriteLinesIEnumerableOfTupleOfStringStringIConfigPropertyAttribute">
            <summary>Sets the mole of <see cref="M:Atom.Configuration.PlainTextConfigStore.WriteLines(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPool`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Pooling.Pool`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPool`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPool`1.#ctor(Atom.Collections.Pooling.Pool{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPool`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPool`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPool`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.ActiveCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.ActiveCount"/>.</para>
                        Gets the number of active items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.ActiveNodesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.ActiveNodes"/>.</para>
                        Gets an enumerator that iterates through the active nodes
                        in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AddNewNode">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.AddNewNode"/>.</para>
                        Adds a new <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> to this Pool{T},
                        and as such resizing the Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AddNodesInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.AddNodes(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllNodesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.AllNodes"/>.</para>
                        Gets an enumerator that iterates through all of the nodes
                        in the Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AvailableCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.AvailableCount"/>.</para>
                        Gets the number of available items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.CapacityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.Capacity"/>.</para>
                        Gets the total number of items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Clear"/>.</para>
                        Makes all items in the Pool available.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.ConstructorInt32PooledObjectCreatorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.#ctor(T:System.Int32,Atom.Collections.Pooling.PooledObjectCreator`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.CreateInt32PooledObjectCreatorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Create(T:System.Int32,Atom.Collections.Pooling.PooledObjectCreator`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.Get">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Get"/>.</para>
                        Removes an available item from the Pool and makes it active.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates through the active items
                        of this Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.IsFixedSizeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.IsFixedSize"/>.</para>
                        Gets or sets a value indicating whether this Pool{T}
                        is of fixed size; and as such doesn&apos;t resize itself when required.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.IsFixedSizeSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.IsFixedSize"/>.</para>
                        Gets or sets a value indicating whether this Pool{T}
                        is of fixed size; and as such doesn&apos;t resize itself when required.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.OnCreatedPoolNodeOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.ReturnPoolNodeOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Return(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPool`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.ActiveCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.ActiveCount"/>.</para>
                        Gets the number of active items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.ActiveNodesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.ActiveNodes"/>.</para>
                        Gets an enumerator that iterates through the active nodes
                        in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.AddNewNode">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.AddNewNode"/>.</para>
                        Adds a new <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> to this Pool{T},
                        and as such resizing the Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.AddNodesInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.AddNodes(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.AllNodesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.AllNodes"/>.</para>
                        Gets an enumerator that iterates through all of the nodes
                        in the Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.AvailableCountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.AvailableCount"/>.</para>
                        Gets the number of available items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.CapacityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.Capacity"/>.</para>
                        Gets the total number of items in the Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Clear"/>.</para>
                        Makes all items in the Pool available.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.Get">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Get"/>.</para>
                        Removes an available item from the Pool and makes it active.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.GetEnumerator"/>.</para>
                        Gets an enumerator that iterates through the active items
                        of this Pool.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.IsFixedSizeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.IsFixedSize"/>.</para>
                        Gets or sets a value indicating whether this Pool{T}
                        is of fixed size; and as such doesn&apos;t resize itself when required.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.IsFixedSizeSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.Pool`1.IsFixedSize"/>.</para>
                        Gets or sets a value indicating whether this Pool{T}
                        is of fixed size; and as such doesn&apos;t resize itself when required.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.OnCreatedPoolNodeOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.ReturnPoolNodeOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.Return(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPool`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.Pool`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPoolNode`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Pooling.PoolNode`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPoolNode`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPoolNode`1.#ctor(Atom.Collections.Pooling.PoolNode{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPoolNode`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.ConstructorTInt32PoolOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.PoolNode`1.#ctor(`1,T:System.Int32,Atom.Collections.Pooling.Pool`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.IsActiveGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.IsActive"/>.</para>
                        Gets a value indicating whether this PoolNode{T} is currently
                        used by the application and as such is not available for reuse.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.IsActiveSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.IsActive"/>.</para>
                        Gets a value indicating whether this PoolNode{T} is currently
                        used by the application and as such is not available for reuse.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.ItemGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.Item"/>.</para>
                        Gets the item stored in this PoolNode{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.NodeIndexGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.NodeIndex"/>.</para>
                        Gets the index of this PoolNode{T} into its parent Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.PoolGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.Pool"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Pooling.Pool`1"/> that owns this PoolNode{T}.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances.IsActiveGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.IsActive"/>.</para>
                        Gets a value indicating whether this PoolNode{T} is currently
                        used by the application and as such is not available for reuse.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances.IsActiveSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.IsActive"/>.</para>
                        Gets a value indicating whether this PoolNode{T} is currently
                        used by the application and as such is not available for reuse.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances.ItemGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.Item"/>.</para>
                        Gets the item stored in this PoolNode{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances.NodeIndexGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.NodeIndex"/>.</para>
                        Gets the index of this PoolNode{T} into its parent Pool{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPoolNode`1.AllInstances.PoolGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PoolNode`1.Pool"/>.</para>
                        Gets the <see cref="T:Atom.Collections.Pooling.Pool`1"/> that owns this PoolNode{T}.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Pooling.PooledObjectWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.#ctor(Atom.Collections.Pooling.PooledObjectWrapper{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.Bind(Atom.Collections.Pooling.IPooledObjectWrapper{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.Bind(Atom.Collections.Pooling.IPooledObject{Atom.Collections.Pooling.IPooledObjectWrapper{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.ConstructorT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.PooledObjectWrapper`1.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.PoolNodeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PoolNode"/>.</para>
                        Gets or sets the PoolNode{IPooledObjectWrapper{T}} which
                        is associated with this PooledObjectWrapper{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.PoolNodeSetPoolNodeOfIPooledObjectWrapperOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PoolNode"/>.</para>
                        Gets or sets the PoolNode{IPooledObjectWrapper{T}} which
                        is associated with this PooledObjectWrapper{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.PooledObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PooledObject"/>.</para>
                        Gets the Object this PooledObjectWrapper{T} wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.AllInstances.PoolNodeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PoolNode"/>.</para>
                        Gets or sets the PoolNode{IPooledObjectWrapper{T}} which
                        is associated with this PooledObjectWrapper{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.AllInstances.PoolNodeSetPoolNodeOfIPooledObjectWrapperOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PoolNode"/>.</para>
                        Gets or sets the PoolNode{IPooledObjectWrapper{T}} which
                        is associated with this PooledObjectWrapper{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MPooledObjectWrapper`1.AllInstances.PooledObjectGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Pooling.PooledObjectWrapper`1.PooledObject"/>.</para>
                        Gets the Object this PooledObjectWrapper{T} wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.PostOrderVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.#ctor(Atom.Patterns.Visitor.PostOrderVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.Bind(Atom.Patterns.Visitor.IOrderedVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.ConstructorIVisitorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PostOrderVisitor`1.#ctor(Atom.Patterns.Visitor.IVisitor`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PostOrderVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PostOrderVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.AllInstances.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PostOrderVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPostOrderVisitor`1.AllInstances.VisitPreOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PostOrderVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.PreOrderVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.#ctor(Atom.Patterns.Visitor.PreOrderVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.Bind(Atom.Patterns.Visitor.IOrderedVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.ConstructorIVisitorOfT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PreOrderVisitor`1.#ctor(Atom.Patterns.Visitor.IVisitor`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PreOrderVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PreOrderVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.AllInstances.VisitInOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PreOrderVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MPreOrderVisitor`1.AllInstances.VisitPostOrderT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.PreOrderVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MPreconditionedList`1">
            <summary>Mole type of <see cref="T:Atom.Collections.PreconditionedList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.#ctor(Atom.Collections.PreconditionedList{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MPreconditionedList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.ConstructorPredicateOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.#ctor(System.Predicate`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.ConstructorPredicateOfTIListOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.#ctor(System.Predicate`1{`1},System.Collections.Generic.IList`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.GetPredicateFailedErrorMessageT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.OnPredicateFailedTString">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.OnPredicateFailed(`1,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MPreconditionedList`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.GetPredicateFailedErrorMessageT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MPreconditionedList`1.AllInstances.OnPredicateFailedTString">
            <summary>Sets the mole of <see cref="M:Atom.Collections.PreconditionedList`1.OnPredicateFailed(`1,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor">
            <summary>Mole type of <see cref="T:Atom.Design.Descriptors.PropertyPropertyDescriptor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.#ctor(Atom.Design.Descriptors.PropertyPropertyDescriptor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.ConstructorPropertyInfo">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.PropertyPropertyDescriptor.#ctor(T:System.Reflection.PropertyInfo)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.GetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.PropertyPropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.PropertyPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the PropertyPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.PropertyTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.PropertyPropertyDescriptor.PropertyType"/>.</para>
                        Gets the type of the property wrapped by the <see cref="T:Atom.Design.Descriptors.PropertyPropertyDescriptor"/>.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.SetValueObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.PropertyPropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.AllInstances.GetValueObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.PropertyPropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.AllInstances.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.PropertyPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the PropertyPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.AllInstances.PropertyTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Design.Descriptors.PropertyPropertyDescriptor.PropertyType"/>.</para>
                        Gets the type of the property wrapped by the <see cref="T:Atom.Design.Descriptors.PropertyPropertyDescriptor"/>.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.MPropertyPropertyDescriptor.AllInstances.SetValueObjectObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.Descriptors.PropertyPropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Math.Moles.MRandRangeExtensions">
            <summary>Mole type of <see cref="T:Atom.Math.RandRangeExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Math.Moles.MRandRangeExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Math.Moles.MRandRangeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandDecimalDecimal">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.Decimal,T:System.Decimal)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandDoubleDouble">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.Double,T:System.Double)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandInt64Int64">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.Int64,T:System.Int64)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandSingleSingle">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.Single,T:System.Single)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.RandomRangeIRandUInt32UInt32">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.RandomRange(T:Atom.Math.IRand,T:System.UInt32,T:System.UInt32)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.UncheckedRandomRangeIRandInt32Int32">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.UncheckedRandomRange(T:Atom.Math.IRand,T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Math.Moles.MRandRangeExtensions.UncheckedRandomRangeIRandSingleSingle">
            <summary>Sets the mole of <see cref="M:Atom.Math.RandRangeExtensions.UncheckedRandomRange(T:Atom.Math.IRand,T:System.Single,T:System.Single)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MRedirectingList`1">
            <summary>Mole type of <see cref="T:Atom.Collections.RedirectingList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.#ctor(Atom.Collections.RedirectingList{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MRedirectingList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.CastObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Cast(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Clear"/>.</para>
                        Removes all items from the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.RedirectingList`1"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ConstructorIListOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.#ctor(System.Collections.Generic.IList`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Count"/>.</para>
                        Gets the number of elements contained in the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the collection.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.IndexOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.IndexOf(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.get_IsFixedSize"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.IsReadOnly"/>.</para>
                        Gets a value indicating whether the System.Collections.Generic.ICollection{T} is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.get_IsSynchronized"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.get_Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.set_Item(T:System.Int32,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.ListGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.List"/>.</para>
                        Gets the list this RedirectingList{T} uses internally.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.get_SyncRoot"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.CopyTo(T:System.Array,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIListAddObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Add(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIListContainsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Contains(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.IndexOf(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Insert(T:System.Int32,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Remove(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MRedirectingList`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Clear"/>.</para>
                        Removes all items from the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Count"/>.</para>
                        Gets the number of elements contained in the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates through the collection.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.IndexOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.IndexOf(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.get_IsFixedSize"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.IsReadOnly"/>.</para>
                        Gets a value indicating whether the System.Collections.Generic.ICollection{T} is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.get_IsSynchronized"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.get_Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.set_Item(T:System.Int32,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.ListGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.RedirectingList`1.List"/>.</para>
                        Gets the list this RedirectingList{T} uses internally.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.get_SyncRoot"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.ICollection.CopyTo(T:System.Array,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Add(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Contains(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.IndexOf(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Insert(T:System.Int32,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MRedirectingList`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.RedirectingList`1.System.Collections.IList.Remove(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MReflectionExtensions">
            <summary>Mole type of <see cref="T:Atom.ReflectionExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MReflectionExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MReflectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MReflectionExtensions.GetConstantValueTypeString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Type,System.String,Atom.Maybe{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetConstantValue``1(T:System.Type,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MReflectionExtensions._GetConstantValueb__0FieldInfo``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Reflection.FieldInfo,System.Reflection.FieldInfo})">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.&lt;GetConstantValue&gt;b__0``1(T:System.Reflection.FieldInfo)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.GetBestMatchingConstructorListOfConstructorInfoObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetBestMatchingConstructor(System.Collections.Generic.List`1{T:System.Reflection.ConstructorInfo},T:System.Object[])"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.GetBestMatchingConstructorTypeObjectArray">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetBestMatchingConstructor(T:System.Type,T:System.Object[])"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.GetConstructorsType">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetConstructors(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.GetConstructorsWithMatchingParameterCountTypeObjectArrayConstructorInfoArray">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetConstructorsWithMatchingParameterCount(T:System.Type,T:System.Object[],T:System.Reflection.ConstructorInfo[])"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.GetTypeNameType">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.GetTypeName(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MReflectionExtensions.ImplementsTypeType">
            <summary>Sets the mole of <see cref="M:Atom.ReflectionExtensions.Implements(T:System.Type,T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MReverseComparer`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Comparers.ReverseComparer`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MReverseComparer`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MReverseComparer`1.#ctor(Atom.Collections.Comparers.ReverseComparer{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MReverseComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MReverseComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.CompareTT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.ReverseComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.ComparerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Comparers.ReverseComparer`1.Comparer"/>.</para>
                        Gets or sets the comparer used in this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.ComparerSetIComparerOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Comparers.ReverseComparer`1.Comparer"/>.</para>
                        Gets or sets the comparer used in this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Comparers.ReverseComparer`1.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.Comparers.ReverseComparer`1"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.ConstructorIComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.ReverseComparer`1.#ctor(System.Collections.Generic.IComparer`1{`1})"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MReverseComparer`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.AllInstances.CompareTT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.ReverseComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.AllInstances.ComparerGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Comparers.ReverseComparer`1.Comparer"/>.</para>
                        Gets or sets the comparer used in this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MReverseComparer`1.AllInstances.ComparerSetIComparerOfT">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.Comparers.ReverseComparer`1.Comparer"/>.</para>
                        Gets or sets the comparer used in this instance.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MServiceContainerExtensions">
            <summary>Mole type of <see cref="T:Atom.ServiceContainerExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MServiceContainerExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MServiceContainerExtensions.AddServiceIServiceContainerTService``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.ComponentModel.Design.IServiceContainer,``0})">
            <summary>Sets the mole of <see cref="M:Atom.ServiceContainerExtensions.AddService``1(T:System.ComponentModel.Design.IServiceContainer,``0)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MServiceContainerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MServiceContainerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Moles.MServiceNotFoundException">
            <summary>Mole type of <see cref="T:Atom.ServiceNotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MServiceNotFoundException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MServiceNotFoundException.#ctor(Atom.ServiceNotFoundException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MServiceNotFoundException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MServiceNotFoundException.Bind(System.Runtime.InteropServices._Exception)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MServiceNotFoundException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.ServiceNotFoundException"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorString">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorStringType">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorStringTypeException">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.String,T:System.Type,T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ConstructorType">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.#ctor(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.GetMessageType">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.GetMessage(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.ServiceTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.ServiceNotFoundException.ServiceType"/>.</para>
                        Gets the type of the service which could not be found - if set.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MServiceNotFoundException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the mole of <see cref="M:Atom.ServiceNotFoundException.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceNotFoundException.AllInstances.ServiceTypeGet">
            <summary><para>Sets the mole of <see cref="P:Atom.ServiceNotFoundException.ServiceType"/>.</para>
                        Gets the type of the service which could not be found - if set.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MServiceProviderExtensions">
            <summary>Mole type of <see cref="T:Atom.ServiceProviderExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MServiceProviderExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MServiceProviderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MServiceProviderExtensions.GetServiceIServiceProvider``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.IServiceProvider,``0})">
            <summary>Sets the mole of <see cref="M:Atom.ServiceProviderExtensions.GetService``1(T:System.IServiceProvider)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MServiceProviderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.Filters.SeverityLogFilter"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.#ctor(Atom.Diagnostics.Filters.SeverityLogFilter)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.Bind(Atom.Diagnostics.Filters.ILogFilter)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllowLogSeverities">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Allow(T:Atom.Diagnostics.LogSeverities)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllowedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.Filters.SeverityLogFilter.Allowed"/>.</para>
                        Gets or sets the <see cref="T:Atom.Diagnostics.LogSeverities"/> that aren&apos;t filtered by this SeverityLogFilter.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllowedSetLogSeverities">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.Filters.SeverityLogFilter.Allowed"/>.</para>
                        Gets or sets the <see cref="T:Atom.Diagnostics.LogSeverities"/> that aren&apos;t filtered by this SeverityLogFilter.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.DisallowLogSeverities">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Disallow(T:Atom.Diagnostics.LogSeverities)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.FiltersLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Filters(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances.AllowLogSeverities">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Allow(T:Atom.Diagnostics.LogSeverities)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances.AllowedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.Filters.SeverityLogFilter.Allowed"/>.</para>
                        Gets or sets the <see cref="T:Atom.Diagnostics.LogSeverities"/> that aren&apos;t filtered by this SeverityLogFilter.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances.AllowedSetLogSeverities">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.Filters.SeverityLogFilter.Allowed"/>.</para>
                        Gets or sets the <see cref="T:Atom.Diagnostics.LogSeverities"/> that aren&apos;t filtered by this SeverityLogFilter.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances.DisallowLogSeverities">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Disallow(T:Atom.Diagnostics.LogSeverities)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Filters.Moles.MSeverityLogFilter.AllInstances.FiltersLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.Filters.SeverityLogFilter.Filters(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MSortableList`1">
            <summary>Mole type of <see cref="T:Atom.Collections.SortableList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.#ctor(Atom.Collections.SortableList{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.IEquatable{Atom.Collections.SortableList{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Moles.MSortableList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AddRangeICollectionOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.AddRange(System.Collections.Generic.ICollection`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllowDuplicatesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.AllowDuplicates"/>.</para>
                        Gets or sets a value indicating whether to allow duplicate items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllowDuplicatesSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.AllowDuplicates"/>.</para>
                        Gets or sets a value indicating whether to allow duplicate items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.CapacityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Capacity"/>.</para>
                        Gets or sets the total number of elements the internal
                        data structure can hold without resizing.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.CapacitySetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Capacity"/>.</para>
                        Gets or sets the total number of elements the internal
                        data structure can hold without resizing.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Clear"/>.</para>
                        Removes all elements from this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.Clone">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Clone"/>.</para>
                        Returns a clone of this SortableList{T} instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.SortableList`1"/> class.
                        Since no IComparer is provided here, added <typeparamref name="T"/> must implement the IComparer interface.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ConstructorIComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.#ctor(System.Collections.Generic.IComparer`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ConstructorIComparerOfTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.#ctor(System.Collections.Generic.IComparer`1{`1},T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Count"/>.</para>
                        Gets the amount of items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.EqualsSortableListOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Equals(Atom.Collections.SortableList`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates over through this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.GetHashCode">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.GetHashCode"/>.</para>
                        Returns the hash-code of this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IndexOfMaximumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IndexOfMaximum"/>.</para>
                        Gets the index of the object of the list whose value is maximum.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IndexOfMinimumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IndexOfMinimum"/>.</para>
                        Gets the index of the object of the list whose value is minimum.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IndexOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IndexOfTIEqualityComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1,System.Collections.Generic.IEqualityComparer`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IndexOfTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.InsertRangeInt32ICollectionOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.InsertRange(T:System.Int32,System.Collections.Generic.ICollection`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsReadOnly"/>.</para>
                        Gets a value indicating whether from this collection can only be readen.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IsSortedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsSorted"/>.</para>
                        Gets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> is currently sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.IsSortedSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsSorted"/>.</para>
                        Gets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> is currently sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.KeepSortedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.KeepSorted"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> should
                        keep itself sorted all the time.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.KeepSortedSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.KeepSorted"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> should
                        keep itself sorted all the time.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.LimitOccurrencesOfTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.LimitOccurrencesOf(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.MaximumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Maximum"/>.</para>
                        Gets the maximum item in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.MinimumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Minimum"/>.</para>
                        Gets the minimum item in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.RemoveDuplicates">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.RemoveDuplicates"/>.</para>
                        Removes all duplicate items from this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.Sort">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Sort"/>.</para>
                        Sorts this <see cref="T:Atom.Collections.SortableList`1"/>.
                        Does nothing if already sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.SystemCollectionsGenericICollectionTAddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.ToString">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.SortableList`1"/> instance.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.MSortableList`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.AddRangeICollectionOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.AddRange(System.Collections.Generic.ICollection`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.AddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.AllowDuplicatesGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.AllowDuplicates"/>.</para>
                        Gets or sets a value indicating whether to allow duplicate items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.AllowDuplicatesSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.AllowDuplicates"/>.</para>
                        Gets or sets a value indicating whether to allow duplicate items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.CapacityGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Capacity"/>.</para>
                        Gets or sets the total number of elements the internal
                        data structure can hold without resizing.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.CapacitySetInt32">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Capacity"/>.</para>
                        Gets or sets the total number of elements the internal
                        data structure can hold without resizing.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.Clear">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Clear"/>.</para>
                        Removes all elements from this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.Clone">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Clone"/>.</para>
                        Returns a clone of this SortableList{T} instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.ContainsT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.CopyToTArrayInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.CountGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Count"/>.</para>
                        Gets the amount of items in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.EqualsSortableListOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Equals(Atom.Collections.SortableList`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.GetEnumerator">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.GetEnumerator"/>.</para>
                        Returns an enumerator that iterates over through this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.GetHashCode01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.GetHashCode"/>.</para>
                        Returns the hash-code of this instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IndexOfMaximumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IndexOfMaximum"/>.</para>
                        Gets the index of the object of the list whose value is maximum.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IndexOfMinimumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IndexOfMinimum"/>.</para>
                        Gets the index of the object of the list whose value is minimum.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IndexOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IndexOfTIEqualityComparerOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1,System.Collections.Generic.IEqualityComparer`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IndexOfTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.IndexOf(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.InsertInt32T">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.InsertRangeInt32ICollectionOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.InsertRange(T:System.Int32,System.Collections.Generic.ICollection`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IsReadOnlyGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsReadOnly"/>.</para>
                        Gets a value indicating whether from this collection can only be readen.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IsSortedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsSorted"/>.</para>
                        Gets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> is currently sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.IsSortedSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.IsSorted"/>.</para>
                        Gets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> is currently sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.ItemSetInt32T">
            <summary>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.KeepSortedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.KeepSorted"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> should
                        keep itself sorted all the time.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.KeepSortedSetBoolean">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.KeepSorted"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Collections.SortableList`1"/> should
                        keep itself sorted all the time.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.LimitOccurrencesOfTInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.LimitOccurrencesOf(`1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.MaximumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Maximum"/>.</para>
                        Gets the maximum item in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.MinimumGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Collections.SortableList`1.Minimum"/>.</para>
                        Gets the minimum item in this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.RemoveAtInt32">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.RemoveDuplicates">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.RemoveDuplicates"/>.</para>
                        Removes all duplicate items from this <see cref="T:Atom.Collections.SortableList`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.RemoveT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.Sort">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.Sort"/>.</para>
                        Sorts this <see cref="T:Atom.Collections.SortableList`1"/>.
                        Does nothing if already sorted.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.SystemCollectionsGenericICollectionTAddT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.MSortableList`1.AllInstances.ToString01">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.SortableList`1.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.SortableList`1"/> instance.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MStorageUtilities">
            <summary>Mole type of <see cref="T:Atom.Storage.StorageUtilities"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MStorageUtilities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MStorageUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MStorageUtilities.LoadFromFileStringIObjectReaderOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,Atom.Storage.IObjectReader{``0},``0})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.StorageUtilities.LoadFromFile``1(T:System.String,Atom.Storage.IObjectReader`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.MStorageUtilities.SafeSaveToFileStringTIObjectWriterOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.String,``0,Atom.Storage.IObjectWriter{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.StorageUtilities.SafeSaveToFile``1(T:System.String,``0,Atom.Storage.IObjectWriter`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.MStorageUtilities.SaveToFileStringTIObjectWriterOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.String,``0,Atom.Storage.IObjectWriter{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.StorageUtilities.SaveToFile``1(T:System.String,``0,Atom.Storage.IObjectWriter`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MStorageUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Storage.Moles.MStorageUtilities.CopyToFileStreamString">
            <summary>Sets the mole of <see cref="M:Atom.Storage.StorageUtilities.CopyToFile(T:System.IO.Stream,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MStringExtensions">
            <summary>Mole type of <see cref="T:Atom.StringExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MStringExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MStringExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MStringExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MStringExtensions.ContainsStringStringStringComparison">
            <summary>Sets the mole of <see cref="M:Atom.StringExtensions.Contains(T:System.String,T:System.String,T:System.StringComparison)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MStringUtilities">
            <summary>Mole type of <see cref="T:Atom.StringUtilities"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertFromValuesITypeDescriptorContextCultureInfoTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,``0[],System.String})">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertFromValues``1(T:System.ComponentModel.ITypeDescriptorContext,T:System.Globalization.CultureInfo,``0[])"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertFromValuesITypeDescriptorContextCultureInfoTArrayString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,``0[],System.String,System.String})">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertFromValues``1(T:System.ComponentModel.ITypeDescriptorContext,T:System.Globalization.CultureInfo,``0[],T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertFromValuesTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.String})">
            <summary><para>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertFromValues``1(``0[])"/>.</para>
                        Converts the given values into a string.
                        </summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertToValuesITypeDescriptorContextCultureInfoStringInt32String``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String,System.Int32,System.String,``0[]})">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertToValues``1(T:System.ComponentModel.ITypeDescriptorContext,T:System.Globalization.CultureInfo,T:System.String,T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertToValuesITypeDescriptorContextCultureInfoStringInt32StringString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String,System.Int32,System.String,System.String,``0[]})">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertToValues``1(T:System.ComponentModel.ITypeDescriptorContext,T:System.Globalization.CultureInfo,T:System.String,T:System.Int32,T:System.String,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.MStringUtilities.ConvertToValuesStringInt32String``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,System.Int32,System.String,``0[]})">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ConvertToValues``1(T:System.String,T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.DecrementTrailingIntegerString">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.DecrementTrailingInteger(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.ExtractTrailingIntegerString">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.ExtractTrailingInteger(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.IncrementTrailingIntegerString">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.IncrementTrailingInteger(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.ReverseString">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.Reverse(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities.TransformTrailingIntegerStringFuncOfInt32String">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.TransformTrailingInteger(T:System.String,System.Func`2{T:System.Int32,T:System.String})"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities._DecrementTrailingIntegerb__2Int32">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.&lt;DecrementTrailingInteger&gt;b__2(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MStringUtilities._IncrementTrailingIntegerb__0Int32">
            <summary>Sets the mole of <see cref="M:Atom.StringUtilities.&lt;IncrementTrailingInteger&gt;b__0(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MSwap">
            <summary>Mole type of <see cref="T:Atom.Swap"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MSwap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MSwap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MSwap.ThemTRefTRef``1(Microsoft.Moles.Framework.MolesDelegates.RefRefAction{``0,``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.Swap.Them``1(``0@,``0@)"/>.</para>
                        Swaps the the specified items.
                        </summary>
        </member>
        <member name="P:Atom.Moles.MSwap.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MTextWriterLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.TextWriterLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTextWriterLog.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTextWriterLog.#ctor(Atom.Diagnostics.TextWriterLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTextWriterLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTextWriterLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTextWriterLog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.ConstructorTextWriter">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.#ctor(T:System.IO.TextWriter)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.Dispose">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose"/>.</para>
                        Releases all managed resources of this <see cref="T:Atom.Diagnostics.TextWriterLog"/>. Further calls
                        to methods of this object will result in an exception.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.DisposeBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.WriterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.TextWriterLog.Writer"/>.</para>
                        Gets the TextWriter into which the messages written to this TextWriterLog are re-directed.
                        </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances.Dispose">
            <summary><para>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose"/>.</para>
                        Releases all managed resources of this <see cref="T:Atom.Diagnostics.TextWriterLog"/>. Further calls
                        to methods of this object will result in an exception.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances.DisposeBoolean">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTextWriterLog.AllInstances.WriterGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Diagnostics.TextWriterLog.Writer"/>.</para>
                        Gets the TextWriter into which the messages written to this TextWriterLog are re-directed.
                        </summary>
        </member>
        <member name="T:Atom.Moles.MThrowHelper">
            <summary>Mole type of <see cref="T:Atom.ThrowHelper"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MThrowHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.MThrowHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MThrowHelper.IfComponentNullTComponent``1(Microsoft.Moles.Framework.MolesDelegates.Action{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.ThrowHelper.IfComponentNull``1(``0)"/>.</para>
                        Throws an exception if the specifies Component is null.
                        </summary>
        </member>
        <member name="M:Atom.Moles.MThrowHelper.IfServiceNullTService``1(Microsoft.Moles.Framework.MolesDelegates.Action{``0})">
            <summary><para>Sets the mole of <see cref="M:Atom.ThrowHelper.IfServiceNull``1(``0)"/>.</para>
                        Throws an <see cref="T:Atom.ServiceNotFoundException"/> if the specified <paramref name="service"/> is null.
                        </summary>
        </member>
        <member name="M:Atom.Moles.MThrowHelper.IfServiceNullTServiceString``1(Microsoft.Moles.Framework.MolesDelegates.Action{``0,System.String})">
            <summary>Sets the mole of <see cref="M:Atom.ThrowHelper.IfServiceNull``1(``0,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MThrowHelper.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MThrowHelper.InvalidVersionInt32Int32Int32String">
            <summary>Sets the mole of <see cref="M:Atom.ThrowHelper.InvalidVersion(T:System.Int32,T:System.Int32,T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MThrowHelper.InvalidVersionInt32Int32Int32Type">
            <summary>Sets the mole of <see cref="M:Atom.ThrowHelper.InvalidVersion(T:System.Int32,T:System.Int32,T:System.Int32,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MThrowHelper.InvalidVersionInt32Int32String">
            <summary>Sets the mole of <see cref="M:Atom.ThrowHelper.InvalidVersion(T:System.Int32,T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MThrowHelper.InvalidVersionInt32Int32Type">
            <summary>Sets the mole of <see cref="M:Atom.ThrowHelper.InvalidVersion(T:System.Int32,T:System.Int32,T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Threading.Moles.MTimeout">
            <summary>Mole type of <see cref="T:Atom.Threading.Timeout"/>
            .</summary>
        </member>
        <member name="M:Atom.Threading.Moles.MTimeout.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Threading.Moles.MTimeout.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Threading.Moles.MTimeout.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Threading.Moles.MTimeout.InvokeTimeSpanActionAction">
            <summary>Sets the mole of <see cref="M:Atom.Threading.Timeout.Invoke(T:System.TimeSpan,T:System.Action,T:System.Action)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MToggleEditor">
            <summary>Mole type of <see cref="T:Atom.Design.ToggleEditor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.MToggleEditor.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Design.Moles.MToggleEditor.#ctor(Atom.Design.ToggleEditor)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.MToggleEditor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Design.ToggleEditor.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ToggleEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.ToggleEditor.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Design.Moles.MToggleEditor.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.AllInstances.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the mole of <see cref="M:Atom.Design.ToggleEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.MToggleEditor.AllInstances.GetEditStyleITypeDescriptorContext">
            <summary>Sets the mole of <see cref="M:Atom.Design.ToggleEditor.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MTraceLog">
            <summary>Mole type of <see cref="T:Atom.Diagnostics.TraceLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTraceLog.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTraceLog.#ctor(Atom.Diagnostics.TraceLog)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTraceLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.MTraceLog.Bind(Atom.Diagnostics.ILog)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TraceLog.#ctor"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.MTraceLog.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.AllInstances.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.MTraceLog.AllInstances.ActuallyWriteLogSeveritiesString">
            <summary>Sets the mole of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.TrackingVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.#ctor(Atom.Patterns.Visitor.TrackingVisitor{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.Bind(Atom.Patterns.Visitor.IVisitor{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Patterns.Visitor.TrackingVisitor`1.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Patterns.Visitor.TrackingVisitor`1"/> class.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.ConstructorInt32">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.TrackingVisitor`1.#ctor(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.TrackingVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this instance is done performing its work.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.TrackingListGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.TrackingVisitor`1.TrackingList"/>.</para>
                        Gets the reference of the list that contains the objects
                        this <see cref="T:Atom.Patterns.Visitor.TrackingVisitor`1"/> has visisted.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.TrackingVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.AllInstances.HasCompletedGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.TrackingVisitor`1.HasCompleted"/>.</para>
                        Gets a value indicating whether this instance is done performing its work.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.AllInstances.TrackingListGet">
            <summary><para>Sets the mole of <see cref="P:Atom.Patterns.Visitor.TrackingVisitor`1.TrackingList"/>.</para>
                        Gets the reference of the list that contains the objects
                        this <see cref="T:Atom.Patterns.Visitor.TrackingVisitor`1"/> has visisted.
                        </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MTrackingVisitor`1.AllInstances.VisitT">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.TrackingVisitor`1.Visit(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2">
            <summary>Mole type of <see cref="T:Atom.Collections.Comparers.TupleItem1Comparer`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.#ctor(Atom.Collections.Comparers.TupleItem1Comparer{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.Bind(System.Collections.Generic.IComparer{System.Tuple{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.CompareTupleOfTFirstTSecondTupleOfTFirstTSecond">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem1Comparer`2.Compare(System.Tuple`2{`1,`2},System.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem1Comparer`2.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.Comparers.TupleItem1Comparer`2"/> class.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem1Comparer`2.AllInstances.CompareTupleOfTFirstTSecondTupleOfTFirstTSecond">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem1Comparer`2.Compare(System.Tuple`2{`1,`2},System.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2">
            <summary>Mole type of <see cref="T:Atom.Collections.Comparers.TupleItem2Comparer`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.#ctor(Atom.Collections.Comparers.TupleItem2Comparer{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.Bind(System.Collections.Generic.IComparer{System.Tuple{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.CompareTupleOfTFirstTSecondTupleOfTFirstTSecond">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem2Comparer`2.Compare(System.Tuple`2{`1,`2},System.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.Constructor">
            <summary><para>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem2Comparer`2.#ctor"/>.</para>
                        Initializes a new instance of the <see cref="T:Atom.Collections.Comparers.TupleItem2Comparer`2"/> class.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Comparers.Moles.MTupleItem2Comparer`2.AllInstances.CompareTupleOfTFirstTSecondTupleOfTFirstTSecond">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Comparers.TupleItem2Comparer`2.Compare(System.Tuple`2{`1,`2},System.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MTypeActivator">
            <summary>Mole type of <see cref="T:Atom.TypeActivator"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MTypeActivator.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MTypeActivator.#ctor(Atom.TypeActivator)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MTypeActivator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MTypeActivator.Bind(Atom.ITypeActivator)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MTypeActivator.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MTypeActivator.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.TypeActivator.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MTypeActivator.CreateInstanceString">
            <summary>Sets the mole of <see cref="M:Atom.TypeActivator.CreateInstance(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MTypeActivator.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Moles.MTypeActivator.AllInstances.CreateInstanceString">
            <summary>Sets the mole of <see cref="M:Atom.TypeActivator.CreateInstance(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MTypeStringConverter">
            <summary>Mole type of <see cref="T:Atom.TypeStringConverter"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MTypeStringConverter.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Moles.MTypeStringConverter.#ctor(Atom.TypeStringConverter)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MTypeStringConverter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MTypeStringConverter.Bind(Atom.IStringConverter)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.TypeStringConverter.#ctor"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.ConvertFromStringStringType">
            <summary>Sets the mole of <see cref="M:Atom.TypeStringConverter.ConvertFromString(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.ConvertToStringObject">
            <summary>Sets the mole of <see cref="M:Atom.TypeStringConverter.ConvertToString(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MTypeStringConverter.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.AllInstances.ConvertFromStringStringType">
            <summary>Sets the mole of <see cref="M:Atom.TypeStringConverter.ConvertFromString(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.MTypeStringConverter.AllInstances.ConvertToStringObject">
            <summary>Sets the mole of <see cref="M:Atom.TypeStringConverter.ConvertToString(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MUnmanagedDisposable">
            <summary>Mole type of <see cref="T:Atom.UnmanagedDisposable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.MUnmanagedDisposable.#ctor(Atom.UnmanagedDisposable)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Moles.MUnmanagedDisposable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Moles.MUnmanagedDisposable.Bind(Atom.IIsDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Moles.MUnmanagedDisposable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Moles.MUnmanagedDisposable.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Moles.MUnmanagedDisposable.Constructor">
            <summary>Sets the mole of <see cref="M:Atom.UnmanagedDisposable.#ctor"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.MUnmanagedDisposable.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.MVisitorExtensions">
            <summary>Mole type of <see cref="T:Atom.Patterns.Visitor.VisitorExtensions"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MVisitorExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MVisitorExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.MVisitorExtensions.VisitIEnumerableOfTIVisitorOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IEnumerable{``0},Atom.Patterns.Visitor.IVisitor{``0}})">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.VisitorExtensions.Visit``1(System.Collections.Generic.IEnumerable`1{``0},Atom.Patterns.Visitor.IVisitor`1{``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MVisitorExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.MVisitorExtensions.VisitIEnumerableIVisitorOfObject">
            <summary>Sets the mole of <see cref="M:Atom.Patterns.Visitor.VisitorExtensions.Visit(T:System.Collections.IEnumerable,Atom.Patterns.Visitor.IVisitor`1{T:System.Object})"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MWrappingPool`1">
            <summary>Mole type of <see cref="T:Atom.Collections.Pooling.WrappingPool`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MWrappingPool`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MWrappingPool`1.#ctor(Atom.Collections.Pooling.WrappingPool{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MWrappingPool`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MWrappingPool`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.MWrappingPool`1.Bind(System.Collections.Generic.IEnumerable{Atom.Collections.Pooling.IPooledObjectWrapper{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MWrappingPool`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MWrappingPool`1.ConstructorInt32PooledObjectCreatorOfIPooledObjectWrapperOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.WrappingPool`1.#ctor(T:System.Int32,Atom.Collections.Pooling.PooledObjectCreator`1{Atom.Collections.Pooling.IPooledObjectWrapper`1{`1}})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MWrappingPool`1.OnCreatedPoolNodeOfIPooledObjectWrapperOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.WrappingPool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{Atom.Collections.Pooling.IPooledObjectWrapper`1{`1}})"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.MWrappingPool`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.MWrappingPool`1.AllInstances.OnCreatedPoolNodeOfIPooledObjectWrapperOfT">
            <summary>Sets the mole of <see cref="M:Atom.Collections.Pooling.WrappingPool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{Atom.Collections.Pooling.IPooledObjectWrapper`1{`1}})"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.MXmlUtilities">
            <summary>Mole type of <see cref="T:Atom.Storage.XmlUtilities"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MXmlUtilities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MXmlUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:Atom.Storage.Moles.MXmlUtilities.DeserializeString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,``0})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.XmlUtilities.Deserialize``1(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.MXmlUtilities.SerializeStringT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.String,``0})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.XmlUtilities.Serialize``1(T:System.String,``0)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.MXmlUtilities.TryDeserializeStringFuncOfExceptionT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,System.Func{System.Exception,``0},``0})">
            <summary>Sets the mole of <see cref="M:Atom.Storage.XmlUtilities.TryDeserialize``1(T:System.String,System.Func`2{T:System.Exception,``0})"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.MXmlUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SAssociation`2">
            <summary>Stub type of <see cref="T:Atom.Collections.Association`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SAssociation`2.#ctor(`0,`1)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SAssociation`2.GetHashCode">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.Association`2.GetHashCode"/>.</para>
                        Returns the hash code of the Association&lt;TKey, TValue&gt;.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SAssociation`2.GetHashCode01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.Association`2.GetHashCode"/>.</para>
                        Returns the hash code of the Association&lt;TKey, TValue&gt;.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SAssociation`2.InitializeStub">
            <summary>Initializes a new instance of type SAssociation</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SAssociation`2.ToString">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.Association`2.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SAssociation`2.ToString01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.Association`2.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.Association`2"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SAssociation`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SAssociation`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SBaseItemCreationEditor">
            <summary>Stub type of <see cref="T:Atom.Design.BaseItemCreationEditor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.CreateObject(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.CreateObject(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.CreateObjectType">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.CreateObject(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.CreateTypeWrapper(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.CreateTypeWrapperType">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.GetEditStyleITypeDescriptorContext">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.GetFinalValue(Atom.Design.NameableObjectWrapper{System.Type})">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.GetFinalValueNameableObjectWrapperOfType">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.GetItemFromValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.GetItemFromValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.GetTypes">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetTypes"/>.</para>
                        Gets the types that the user can select in this BaseTypeSelectionEditor.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.GetTypes01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetTypes"/>.</para>
                        Gets the types that the user can select in this BaseTypeSelectionEditor.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.InitializeStub">
            <summary>Initializes a new instance of type SBaseItemCreationEditor</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemCreationEditor.SetupCreatedObject(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.SetupCreatedObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemCreationEditor.SetupCreatedObjectObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemCreationEditor.SetupCreatedObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseItemCreationEditor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseItemCreationEditor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SBaseItemSelectionEditor`1">
            <summary>Stub type of <see cref="T:Atom.Design.BaseItemSelectionEditor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemSelectionEditor`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetEditStyleITypeDescriptorContext">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetFinalValue(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetFinalValueTItem">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetItemFromValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetItemFromValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetSelectableItems">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetSelectableItems"/>.</para>
                        Gets the items that can be selected in this BaseItemSelectionEditor{TItem}.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseItemSelectionEditor`1.GetSelectableItems01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetSelectableItems"/>.</para>
                        Gets the items that can be selected in this BaseItemSelectionEditor{TItem}.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseItemSelectionEditor`1.InitializeStub">
            <summary>Initializes a new instance of type SBaseItemSelectionEditor</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseItemSelectionEditor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseItemSelectionEditor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.SBaseLog">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.BaseLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.ActuallyWrite(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.ActuallyWriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.DefaultSeverityGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.InitializeStub">
            <summary>Initializes a new instance of type SBaseLog</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.IsNotLogged(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.IsNotLoggedLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.Write(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.WriteLine(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SBaseLog.WriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.WriteLine01">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.WriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.WriteLineString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.WriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SBaseLog.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SBaseLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SBaseLog.DefaultSeverity">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SBaseLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SBaseObjectPropertyWrapper">
            <summary>Stub type of <see cref="T:Atom.Design.BaseObjectPropertyWrapper"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper.Clone">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.Clone"/>.</para>
                        Returns a clone of this <see cref="T:Atom.Design.IObjectPropertyWrapper"/>.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseObjectPropertyWrapper.Clone01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.Clone"/>.</para>
                        Returns a clone of this <see cref="T:Atom.Design.IObjectPropertyWrapper"/>.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper.InitializeStub">
            <summary>Initializes a new instance of type SBaseObjectPropertyWrapper</summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseObjectPropertyWrapper.WrappedTypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper.WrappedType">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.BaseObjectPropertyWrapper.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1">
            <summary>Stub type of <see cref="T:Atom.Design.BaseObjectPropertyWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.Clone">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.Clone"/>.</para>
                        Returns a clone of this <see cref="T:Atom.Design.IObjectPropertyWrapper"/>.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.Clone01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseObjectPropertyWrapper.Clone"/>.</para>
                        Returns a clone of this <see cref="T:Atom.Design.IObjectPropertyWrapper"/>.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.InitializeStub">
            <summary>Initializes a new instance of type SBaseObjectPropertyWrapper01</summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.WrappedTypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseObjectPropertyWrapper01`1.WrappedType">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.BaseObjectPropertyWrapper`1.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SBaseObjectReaderWriter`1">
            <summary>Stub type of <see cref="T:Atom.Storage.BaseObjectReaderWriter`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBaseObjectReaderWriter`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBaseObjectReaderWriter`1.Deserialize(`0,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SBaseObjectReaderWriter`1.DeserializeTObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBaseObjectReaderWriter`1.InitializeStub">
            <summary>Initializes a new instance of type SBaseObjectReaderWriter</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBaseObjectReaderWriter`1.Serialize(`0,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SBaseObjectReaderWriter`1.SerializeTObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.BaseObjectReaderWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBaseObjectReaderWriter`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBaseObjectReaderWriter`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SBaseTypeSelectionEditor">
            <summary>Stub type of <see cref="T:Atom.Design.BaseTypeSelectionEditor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.CreateTypeWrapper(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.CreateTypeWrapperType">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.CreateTypeWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.GetEditStyleITypeDescriptorContext">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.GetFinalValue(Atom.Design.NameableObjectWrapper{System.Type})">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.GetFinalValueNameableObjectWrapperOfType">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseItemSelectionEditor`1.GetFinalValue(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.GetItemFromValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.GetItemFromValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetItemFromValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.GetTypes">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetTypes"/>.</para>
                        Gets the types that the user can select in this BaseTypeSelectionEditor.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SBaseTypeSelectionEditor.GetTypes01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.BaseTypeSelectionEditor.GetTypes"/>.</para>
                        Gets the types that the user can select in this BaseTypeSelectionEditor.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SBaseTypeSelectionEditor.InitializeStub">
            <summary>Initializes a new instance of type SBaseTypeSelectionEditor</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseTypeSelectionEditor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SBaseTypeSelectionEditor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Storage.Moles.SBinaryDeserializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.BinaryDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinaryDeserializationContext.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinaryDeserializationContext.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinaryDeserializationContext.InitializeStub">
            <summary>Initializes a new instance of type SBinaryDeserializationContext</summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBinaryDeserializationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBinaryDeserializationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Storage.Moles.SBinarySerializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.BinarySerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinarySerializationContext.#ctor(System.IO.BinaryWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinarySerializationContext.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SBinarySerializationContext.InitializeStub">
            <summary>Initializes a new instance of type SBinarySerializationContext</summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBinarySerializationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Storage.Moles.SBinarySerializationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Components.Moles.SComponent">
            <summary>Stub type of <see cref="T:Atom.Components.Component"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate SComponent.IsEnabled as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.Initialize">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.Component.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.Initialize01">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.Component.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.InitializeBindings">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.Component.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.InitializeBindings01">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.Component.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.InitializeStub">
            <summary>Initializes a new instance of type SComponent</summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.IsEnabledGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.IsEnabledSetBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.Components.Component.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.Components.Component.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponent.Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.Components.Component.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SComponent.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.Components.Component.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SComponent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Components.Moles.SComponent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Components.Moles.SComponent.IsEnabled">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.Component.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this <see cref="T:Atom.Components.Component"/> is enabled or disabled.
                        </summary>
        </member>
        <member name="T:Atom.Components.Moles.SComponentNotFoundException">
            <summary>Stub type of <see cref="T:Atom.Components.ComponentNotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SComponentNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type SComponentNotFoundException</summary>
        </member>
        <member name="P:Atom.Components.Moles.SComponentNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Components.Moles.SComponentNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Configuration.Moles.SConfig">
            <summary>Stub type of <see cref="T:Atom.Configuration.Config"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SConfig.#ctor(Atom.Configuration.IConfigStore)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SConfig.#ctor(Atom.Configuration.IConfigStore,Atom.Configuration.IConfigPropertySearcher,Atom.IStringConverter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SConfig.InitializeStub">
            <summary>Initializes a new instance of type SConfig</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.SConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Configuration.Moles.SConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.SConsoleLog">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.ConsoleLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.ActuallyWrite(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.ActuallyWriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.DefaultSeverityGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.InitializeStub">
            <summary>Initializes a new instance of type SConsoleLog</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.IsNotLogged(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.IsNotLoggedLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.Write(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.WriteLine"/>.</para>
                        Writes a new empty line to this ConsoleLog.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.WriteLine(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SConsoleLog.WriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.WriteLine01">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.ConsoleLog.WriteLine"/>.</para>
                        Writes a new empty line to this ConsoleLog.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.WriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.WriteLineString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.WriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SConsoleLog.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SConsoleLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SConsoleLog.DefaultSeverity">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SConsoleLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Components.Moles.SEntity">
            <summary>Stub type of <see cref="T:Atom.Components.Entity"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.#ctor(Atom.Components.IEntityComponentCollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.InitializeStub">
            <summary>Initializes a new instance of type SEntity</summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.Components.Entity.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SEntity.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.Components.Entity.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SEntity.Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.Components.Entity.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SEntity.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.Components.Entity.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Components.Moles.SEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SExistingItemCollectionEditor`1">
            <summary>Stub type of <see cref="T:Atom.Design.ExistingItemCollectionEditor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.CreateSelectionDialog">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.CreateSelectionDialog"/>.</para>
                        Creates the <see cref="T:Atom.Design.IItemSelectionDialog`1"/> this ExistingItemCollectionEditor{TItem}
                        uses internally. Must be overriden by users of this class.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SExistingItemCollectionEditor`1.CreateSelectionDialog01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.CreateSelectionDialog"/>.</para>
                        Creates the <see cref="T:Atom.Design.IItemSelectionDialog`1"/> this ExistingItemCollectionEditor{TItem}
                        uses internally. Must be overriden by users of this class.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SExistingItemCollectionEditor`1.EditValueITypeDescriptorContextIServiceProviderObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.EditValue(T:System.ComponentModel.ITypeDescriptorContext,T:System.IServiceProvider,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SExistingItemCollectionEditor`1.GetEditStyleITypeDescriptorContext">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetEditStyle(T:System.ComponentModel.ITypeDescriptorContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.GetItems(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetItems(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SExistingItemCollectionEditor`1.GetItemsObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.GetItems(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.InitializeStub">
            <summary>Initializes a new instance of type SExistingItemCollectionEditor</summary>
        </member>
        <member name="M:Atom.Design.Moles.SExistingItemCollectionEditor`1.SetItems(System.Object,`0[])">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.SetItems(T:System.Object,`1[])"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SExistingItemCollectionEditor`1.SetItemsObjectTItemArray">
            <summary>Sets the stub of <see cref="M:Atom.Design.ExistingItemCollectionEditor`1.SetItems(T:System.Object,`1[])"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Moles.SExistingItemCollectionEditor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SExistingItemCollectionEditor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SFastMultiMap`2">
            <summary>Stub type of <see cref="T:Atom.Collections.FastMultiMap`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SFastMultiMap`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SFastMultiMap`2.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SFastMultiMap`2.InitializeStub">
            <summary>Initializes a new instance of type SFastMultiMap</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SFastMultiMap`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SFastMultiMap`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SHat`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Hat`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHat`1.#ctor(Atom.Math.IRand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHat`1.#ctor(Atom.Math.IRand,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHat`1.InitializeStub">
            <summary>Initializes a new instance of type SHat</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SHat`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SHat`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SHeap`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Heap`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHeap`1.#ctor(Atom.Collections.HeapType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHeap`1.#ctor(Atom.Collections.HeapType,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHeap`1.#ctor(Atom.Collections.HeapType,System.Collections.Generic.IComparer{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHeap`1.#ctor(Atom.Collections.HeapType,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SHeap`1.InitializeStub">
            <summary>Initializes a new instance of type SHeap</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SHeap`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SHeap`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIBinaryDeserializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IBinaryDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.#ctor">
            <summary>Initializes a new instance of type SIBinaryDeserializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinaryDeserializationContext.ReaderGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this IBinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIBinaryDeserializationContext.a::Atom#Storage#IBinaryDeserializationContext#Reader">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this IBinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIBinarySerializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IBinarySerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.#ctor">
            <summary>Initializes a new instance of type SIBinarySerializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Char)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int64)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Single)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Byte)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Double)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteBoolean">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteByte">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteChar">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteDouble">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteInt64">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteSingle">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIBinarySerializationContext.WriterGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this IBinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIBinarySerializationContext.a::Atom#Storage#IBinarySerializationContext#Writer">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this IBinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="T:Atom.Components.Moles.SIComponent">
            <summary>Stub type of <see cref="T:Atom.Components.IComponent"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.#ctor">
            <summary>Initializes a new instance of type SIComponent</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.a::Atom#Components#IComponent#Initialize">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IComponent.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.a::Atom#Components#IComponent#InitializeBindings">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IComponent.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.a::Atom#IPreUpdateable#PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.a::Atom#IUpdateable#Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.AttachBackingFieldToIsEnabled">
            <summary>Attaches delegates to emulate SIComponent.IsEnabled as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIComponent.AttachBackingFieldToOwner">
            <summary>Attaches delegates to emulate SIComponent.Owner as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.Initialize">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IComponent.Initialize"/>.</para>
                        Called when this IComponent has been successfully attached to an <see cref="T:Atom.Components.IEntity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.InitializeBindings">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IComponent.InitializeBindings"/>.</para>
                        Called when an IComponent has been removed or added to the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        Override this method to receive IComponents this IComponent depends on.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.IsEnabledGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this IComponent is enabled or disabled.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.IsEnabledSetBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this IComponent is enabled or disabled.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.OwnerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.OwnerSetIEntity">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIComponent.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIComponent.a::Atom#Components#IComponent#IsEnabled">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.IsEnabled"/>.</para>
                        Gets or sets a value indicating whether this IComponent is enabled or disabled.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIComponent.a::Atom#Components#IComponent#Owner">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IComponent.Owner"/>.</para>
                        Gets or sets the <see cref="T:Atom.Components.IEntity"/> that owns this IComponent.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.SIConfig">
            <summary>Stub type of <see cref="T:Atom.Configuration.IConfig"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfig.#ctor">
            <summary>Initializes a new instance of type SIConfig</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfig.a::Atom#Configuration#IConfig#Load">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.Load"/>.</para>
                        Loads the data stored in the <see cref="T:Atom.Configuration.IConfigStore"/> into this <see cref="T:Atom.Configuration.Config"/>.
                        </summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfig.a::Atom#Configuration#IConfig#LoadDefaults">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.LoadDefaults"/>.</para>
                        Loads the default values of the config properties.
                        </summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfig.a::Atom#Configuration#IConfig#Save">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.Save"/>.</para>
                        Saves this Config to the <see cref="T:Atom.Configuration.IConfigStore"/>.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfig.Load">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.Load"/>.</para>
                        Loads the data stored in the <see cref="T:Atom.Configuration.IConfigStore"/> into this <see cref="T:Atom.Configuration.Config"/>.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfig.LoadDefaults">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.LoadDefaults"/>.</para>
                        Loads the default values of the config properties.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfig.Save">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfig.Save"/>.</para>
                        Saves this Config to the <see cref="T:Atom.Configuration.IConfigStore"/>.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.SIConfigPropertyAttribute">
            <summary>Stub type of <see cref="T:Atom.Configuration.IConfigPropertyAttribute"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertyAttribute.#ctor">
            <summary>Initializes a new instance of type SIConfigPropertyAttribute</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertyAttribute.AttachBackingFieldToComment">
            <summary>Attaches delegates to emulate SIConfigPropertyAttribute.Comment as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertyAttribute.AttachBackingFieldToDefaultValue">
            <summary>Attaches delegates to emulate SIConfigPropertyAttribute.DefaultValue as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertyAttribute.AttachBackingFieldToStorageName">
            <summary>Attaches delegates to emulate SIConfigPropertyAttribute.StorageName as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.CommentGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.CommentSetString">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.DefaultValueGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.DefaultValueSetObject">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.StorageNameGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertyAttribute.StorageNameSetString">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.SIConfigPropertyAttribute.a::Atom#Configuration#IConfigPropertyAttribute#Comment">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.Comment"/>.</para>
                        Gets or sets the (optional) comment that is associated with the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.SIConfigPropertyAttribute.a::Atom#Configuration#IConfigPropertyAttribute#DefaultValue">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.DefaultValue"/>.</para>
                        Gets or sets the default value of the property.
                        </summary>
        </member>
        <member name="P:Atom.Configuration.Moles.SIConfigPropertyAttribute.a::Atom#Configuration#IConfigPropertyAttribute#StorageName">
            <summary><para>Sets the stub of <see cref="P:Atom.Configuration.IConfigPropertyAttribute.StorageName"/>.</para>
                        Gets or sets the (optional) name under which the property is stored.
                        </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.SIConfigPropertySearcher">
            <summary>Stub type of <see cref="T:Atom.Configuration.IConfigPropertySearcher"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertySearcher.#ctor">
            <summary>Initializes a new instance of type SIConfigPropertySearcher</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigPropertySearcher.a::Atom#Configuration#IConfigPropertySearcher#Search(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Configuration.IConfigPropertySearcher.Search(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigPropertySearcher.SearchType">
            <summary>Sets the stub of <see cref="M:Atom.Configuration.IConfigPropertySearcher.Search(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Configuration.Moles.SIConfigStore">
            <summary>Stub type of <see cref="T:Atom.Configuration.IConfigStore"/>
            .</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigStore.#ctor">
            <summary>Initializes a new instance of type SIConfigStore</summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigStore.a::Atom#Configuration#IConfigStore#Load">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfigStore.Load"/>.</para>
                        Gets the properties that have been saved, by loading them from this IConfigStore.
                        </summary>
        </member>
        <member name="M:Atom.Configuration.Moles.SIConfigStore.a::Atom#Configuration#IConfigStore#Save(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String,Atom.Configuration.IConfigPropertyAttribute}})">
            <summary>Sets the stub of <see cref="M:Atom.Configuration.IConfigStore.Save(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigStore.Load">
            <summary><para>Sets the stub of <see cref="M:Atom.Configuration.IConfigStore.Load"/>.</para>
                        Gets the properties that have been saved, by loading them from this IConfigStore.
                        </summary>
        </member>
        <member name="F:Atom.Configuration.Moles.SIConfigStore.SaveIEnumerableOfTupleOfStringStringIConfigPropertyAttribute">
            <summary>Sets the stub of <see cref="M:Atom.Configuration.IConfigStore.Save(System.Collections.Generic.IEnumerable`1{System.Tuple`3{T:System.String,T:System.String,T:Atom.Configuration.IConfigPropertyAttribute}})"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SIConverter`2">
            <summary>Stub type of <see cref="T:Atom.IConverter`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIConverter`2.#ctor">
            <summary>Initializes a new instance of type SIConverter</summary>
        </member>
        <member name="M:Atom.Moles.SIConverter`2.a::Atom#IConverter{Source@Target}#ConvertFrom(`1)">
            <summary>Sets the stub of <see cref="M:Atom.IConverter`2.ConvertFrom(`2)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.SIConverter`2.a::Atom#IConverter{Source@Target}#ConvertTo(`0)">
            <summary>Sets the stub of <see cref="M:Atom.IConverter`2.ConvertTo(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIConverter`2.ConvertFromTarget">
            <summary>Sets the stub of <see cref="M:Atom.IConverter`2.ConvertFrom(`2)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIConverter`2.ConvertToSource">
            <summary>Sets the stub of <see cref="M:Atom.IConverter`2.ConvertTo(`1)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SICultureSensitiveToStringProvider">
            <summary>Stub type of <see cref="T:Atom.ICultureSensitiveToStringProvider"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SICultureSensitiveToStringProvider.#ctor">
            <summary>Initializes a new instance of type SICultureSensitiveToStringProvider</summary>
        </member>
        <member name="M:Atom.Moles.SICultureSensitiveToStringProvider.a::Atom#ICultureSensitiveToStringProvider#ToString(System.IFormatProvider)">
            <summary>Sets the stub of <see cref="M:Atom.ICultureSensitiveToStringProvider.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SICultureSensitiveToStringProvider.ToStringIFormatProvider">
            <summary>Sets the stub of <see cref="M:Atom.ICultureSensitiveToStringProvider.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIDeserializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.#ctor">
            <summary>Initializes a new instance of type SIDeserializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIDeserializationContext.ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIDrawContext">
            <summary>Stub type of <see cref="T:Atom.IDrawContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIDrawContext.#ctor">
            <summary>Initializes a new instance of type SIDrawContext</summary>
        </member>
        <member name="T:Atom.Moles.SIDrawable">
            <summary>Stub type of <see cref="T:Atom.IDrawable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIDrawable.#ctor">
            <summary>Initializes a new instance of type SIDrawable</summary>
        </member>
        <member name="M:Atom.Moles.SIDrawable.a::Atom#IDrawable#Draw(Atom.IDrawContext)">
            <summary>Sets the stub of <see cref="M:Atom.IDrawable.Draw(T:Atom.IDrawContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIDrawable.DrawIDrawContext">
            <summary>Sets the stub of <see cref="M:Atom.IDrawable.Draw(T:Atom.IDrawContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Components.Moles.SIEntity">
            <summary>Stub type of <see cref="T:Atom.Components.IEntity"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntity.#ctor">
            <summary>Initializes a new instance of type SIEntity</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntity.a::Atom#IPreUpdateable#PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntity.a::Atom#IUpdateable#Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntity.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate SIEntity.Name as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.ComponentsGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntity.Components"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntityComponentCollection"/> that contains the <see cref="T:Atom.Components.IComponent"/>s
                        this IEntity is composed of.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.NameGet">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.NameGet01">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.NameSetString">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntity.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntity.a::Atom#Components#IEntity#Components">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntity.Components"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntityComponentCollection"/> that contains the <see cref="T:Atom.Components.IComponent"/>s
                        this IEntity is composed of.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntity.a::Atom#IReadOnlyNameable#Name">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntity.a::Atom#INameable#Name">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="T:Atom.Components.Moles.SIEntityComponentCollection">
            <summary>Stub type of <see cref="T:Atom.Components.IEntityComponentCollection"/>
            .</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.#ctor">
            <summary>Initializes a new instance of type SIEntityComponentCollection</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.AddIComponent">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Add(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.AddRangeIEnumerableOfIComponent">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.AddRange(System.Collections.Generic.IEnumerable`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.AddedEvent">
            <summary>Event Added</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Add(Atom.Components.IComponent)">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Add(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#AddRange(System.Collections.Generic.IEnumerable{Atom.Components.IComponent})">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.AddRange(System.Collections.Generic.IEnumerable`1{T:Atom.Components.IComponent})"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#BeginSetup">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.BeginSetup"/>.</para>
                        Begins the region in which <see cref="T:Atom.Components.IComponent"/>s are added to this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Clear">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Clear"/>.</para>
                        Removes all IComponents from this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Contains``1">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Contains``1"/>.</para>
                        Determines whether this IEntityComponentCollection contains
                        a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Contains(Atom.Components.IComponent)">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Contains(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Contains(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Contains(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#EndSetup">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.EndSetup"/>.</para>
                        Ends the setup process initiated by BeginSetup.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Find``1">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Find``1"/>.</para>
                        Finds the first occurence of an <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#FindAll``1">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.FindAll``1"/>.</para>
                        Finds all <see cref="T:Atom.Components.IComponent"/>s that are of type <typeparamref name="T"/> or implement it.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Get``1">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Get``1"/>.</para>
                        Tries to get the <see cref="T:Atom.Components.IComponent"/> of the specified Type.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Remove``1">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Remove``1"/>.</para>
                        Removes the first occurence of a <see cref="T:Atom.Components.IComponent"/> of type <typeparamref name="T"/>.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Remove(Atom.Components.IComponent)">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Remove(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#IPreUpdateable#PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#IUpdateable#Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.AttachBackingFieldToBindingNotificationEnabled">
            <summary>Attaches delegates to emulate SIEntityComponentCollection.BindingNotificationEnabled as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.AttachBackingFieldToIsReadOnly">
            <summary>Attaches delegates to emulate SIEntityComponentCollection.IsReadOnly as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.BeginSetup">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.BeginSetup"/>.</para>
                        Begins the region in which <see cref="T:Atom.Components.IComponent"/>s are added to this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.BindingNotificationEnabledGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.BindingNotificationEnabledSetBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.Clear">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Clear"/>.</para>
                        Removes all IComponents from this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.Contains``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of Contains()</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.ContainsIComponent">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Contains(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.ContainsType">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Contains(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.CountGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Components.IComponent"/>s in this <see cref="T:Atom.Components.IEntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.EndSetup">
            <summary><para>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.EndSetup"/>.</para>
                        Ends the setup process initiated by BeginSetup.
                        </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.Find``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary>Sets stubs of Find()</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.FindAll``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IList{``0}})">
            <summary>Sets stubs of FindAll()</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.Get``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0})">
            <summary>Sets stubs of Get()</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.IsReadOnlyGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.IsReadOnlySetBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.ItemGetType">
            <summary>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Item(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.OwnerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntity"/> that owns this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.Remove``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of Remove()</summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.RemoveIComponent">
            <summary>Sets the stub of <see cref="M:Atom.Components.IEntityComponentCollection.Remove(T:Atom.Components.IComponent)"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.RemovedEvent">
            <summary>Event Removed</summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.global::System#Collections#Generic#IEnumerable{Atom#Components#IComponent}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Atom.Components.Moles.SIEntityComponentCollection.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Components.Moles.SIEntityComponentCollection.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#BindingNotificationEnabled">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.BindingNotificationEnabled"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection
                        notifies its <see cref="T:Atom.Components.IComponent"/>s by calling <see cref="M:Atom.Components.IComponent.InitializeBindings"/>
                        when an <see cref="T:Atom.Components.IComponent"/> gets added or removed.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Count">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Count"/>.</para>
                        Gets the number of <see cref="T:Atom.Components.IComponent"/>s in this <see cref="T:Atom.Components.IEntityComponentCollection"/>.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#IsReadOnly">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.IsReadOnly"/>.</para>
                        Gets or sets a value indicating whether this IEntityComponentCollection is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntityComponentCollection.Atom#Components#IEntityComponentCollection#Item(System.Type)">
            <summary>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Item(T:System.Type)"/>
            </summary>
        </member>
        <member name="P:Atom.Components.Moles.SIEntityComponentCollection.a::Atom#Components#IEntityComponentCollection#Owner">
            <summary><para>Sets the stub of <see cref="P:Atom.Components.IEntityComponentCollection.Owner"/>.</para>
                        Gets the <see cref="T:Atom.Components.IEntity"/> that owns this IEntityComponentCollection.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.SIHeap`1">
            <summary>Stub type of <see cref="T:Atom.Collections.IHeap`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.#ctor">
            <summary>Initializes a new instance of type SIHeap</summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.AddT">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Add(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.a::Atom#Collections#IHeap{T}#Pop">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.IHeap`1.Pop"/>.</para>
                        Removes and returns the item at the root of this Heap{T}.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.Clear">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.ComparerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.Comparer"/>.</para>
                        Gets the IComparer{T} that is used to compare the objects stored in this IHeap{T}.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.ContainsT">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.CopyToTArrayInt32">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.CountGet">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.HeapTypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.HeapType"/>.</para>
                        Gets the <see cref="P:Atom.Collections.IHeap`1.HeapType"/> of this IHeap{T}.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.IsReadOnlyGet">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.Pop">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.IHeap`1.Pop"/>.</para>
                        Removes and returns the item at the root of this Heap{T}.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.RemoveT">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIHeap`1.RootGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.Root"/>.</para>
                        Gets the item at the root of this IHeap{T}.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Add(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#Clear">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIHeap`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIHeap`1.a::Atom#Collections#IHeap{T}#Comparer">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.Comparer"/>.</para>
                        Gets the IComparer{T} that is used to compare the objects stored in this IHeap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#Count">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIHeap`1.a::Atom#Collections#IHeap{T}#HeapType">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.HeapType"/>.</para>
                        Gets the <see cref="P:Atom.Collections.IHeap`1.HeapType"/> of this IHeap{T}.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIHeap`1.global::System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIHeap`1.a::Atom#Collections#IHeap{T}#Root">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.IHeap`1.Root"/>.</para>
                        Gets the item at the root of this IHeap{T}.
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIIsDisposable">
            <summary>Stub type of <see cref="T:Atom.IIsDisposable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIIsDisposable.#ctor">
            <summary>Initializes a new instance of type SIIsDisposable</summary>
        </member>
        <member name="F:Atom.Moles.SIIsDisposable.Dispose">
            <summary>Sets the stub of <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIIsDisposable.IsDisposedGet">
            <summary><para>Sets the stub of <see cref="P:Atom.IIsDisposable.IsDisposed"/>.</para>
                        Gets a value indicating whether this <see cref="T:System.IDisposable"/> object
                        has been disposed.
                        </summary>
        </member>
        <member name="M:Atom.Moles.SIIsDisposable.global::System#IDisposable#Dispose">
            <summary>Sets the stub of <see cref="M:System.IDisposable.Dispose"/>
            </summary>
        </member>
        <member name="P:Atom.Moles.SIIsDisposable.a::Atom#IIsDisposable#IsDisposed">
            <summary><para>Sets the stub of <see cref="P:Atom.IIsDisposable.IsDisposed"/>.</para>
                        Gets a value indicating whether this <see cref="T:System.IDisposable"/> object
                        has been disposed.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.SIItemSelectionDialog`1">
            <summary>Stub type of <see cref="T:Atom.Design.IItemSelectionDialog`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialog`1.#ctor">
            <summary>Initializes a new instance of type SIItemSelectionDialog</summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.AllowMultipleSelectionGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.AllowMultipleSelection"/>.</para>
                        Gets or sets a value indicating whether the user should
                        be allowed to select multiple items.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.AllowMultipleSelectionSetBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.AllowMultipleSelection"/>.</para>
                        Gets or sets a value indicating whether the user should
                        be allowed to select multiple items.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialog`1.a::Atom#Design#IItemSelectionDialog{TItem}#ShowDialog">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.IItemSelectionDialog`1.ShowDialog"/>.</para>
                        Shows this IItemSelectionDialog{TItem}
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialog`1.AttachBackingFieldToAllowMultipleSelection">
            <summary>Attaches delegates to emulate SIItemSelectionDialog.AllowMultipleSelection as a property with a backing field</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialog`1.AttachBackingFieldToSelectedItem">
            <summary>Attaches delegates to emulate SIItemSelectionDialog.SelectedItem as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.SelectedItemGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.SelectedItem"/>.</para>
                        Gets or sets the item that the user has selected.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.SelectedItemSetTItem">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.SelectedItem"/>.</para>
                        Gets or sets the item that the user has selected.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.SelectedItemsGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.SelectedItems"/>.</para>
                        Gets the items that the user has selected.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIItemSelectionDialog`1.ShowDialog">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.IItemSelectionDialog`1.ShowDialog"/>.</para>
                        Shows this IItemSelectionDialog{TItem}
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SIItemSelectionDialog`1.a::Atom#Design#IItemSelectionDialog{TItem}#AllowMultipleSelection">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.AllowMultipleSelection"/>.</para>
                        Gets or sets a value indicating whether the user should
                        be allowed to select multiple items.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SIItemSelectionDialog`1.a::Atom#Design#IItemSelectionDialog{TItem}#SelectedItem">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.SelectedItem"/>.</para>
                        Gets or sets the item that the user has selected.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SIItemSelectionDialog`1.a::Atom#Design#IItemSelectionDialog{TItem}#SelectedItems">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IItemSelectionDialog`1.SelectedItems"/>.</para>
                        Gets the items that the user has selected.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.SIItemSelectionDialogFactory">
            <summary>Stub type of <see cref="T:Atom.Design.IItemSelectionDialogFactory"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialogFactory.#ctor">
            <summary>Initializes a new instance of type SIItemSelectionDialogFactory</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialogFactory.a::Atom#Design#IItemSelectionDialogFactory#Build``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Sets the stub of <see cref="M:Atom.Design.IItemSelectionDialogFactory.Build``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIItemSelectionDialogFactory.BuildIEnumerableOfTItem``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},Atom.Design.IItemSelectionDialog{``0}})">
            <summary>Sets stubs of Build(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.SILog">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.ILog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.#ctor">
            <summary>Initializes a new instance of type SILog</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#Write(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.ILog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#WriteLine(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#WriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.DefaultSeverityGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.ILog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.ILog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.WriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.WriteLineString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.WriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILog.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.ILog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SILog.a::Atom#Diagnostics#ILog#DefaultSeverity">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.ILog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="T:Atom.Diagnostics.Filters.Moles.SILogFilter">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.Filters.ILogFilter"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.SILogFilter.#ctor">
            <summary>Initializes a new instance of type SILogFilter</summary>
        </member>
        <member name="M:Atom.Diagnostics.Filters.Moles.SILogFilter.a::Atom#Diagnostics#Filters#ILogFilter#Filters(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.Filters.ILogFilter.Filters(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Filters.Moles.SILogFilter.FiltersLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.Filters.ILogFilter.Filters(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.SILogProvider">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.ILogProvider"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.SILogProvider.#ctor">
            <summary>Initializes a new instance of type SILogProvider</summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.SILogProvider.LogGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.ILogProvider.Log"/>.</para>
                        Gets the <see cref="T:Atom.Diagnostics.ILog"/> object.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.SILogProvider.a::Atom#Diagnostics#ILogProvider#Log">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.ILogProvider.Log"/>.</para>
                        Gets the <see cref="T:Atom.Diagnostics.ILog"/> object.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Moles.SIMultiMap`2">
            <summary>Stub type of <see cref="T:Atom.Collections.IMultiMap`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMultiMap`2.#ctor">
            <summary>Initializes a new instance of type SIMultiMap</summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMultiMap`2.AddTKeyTElement">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMultiMap`2.a::Atom#Collections#IMultiMap{TKey@TElement}#Add(`0,`1)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMultiMap`2.a::Atom#Collections#IMultiMap{TKey@TElement}#Contains(`0,`1)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMultiMap`2.a::Atom#Collections#IMultiMap{TKey@TElement}#Remove(`0,`1)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMultiMap`2.a::Atom#Collections#IMultiMap{TKey@TElement}#TryGet(`0,System.Collections.Generic.IEnumerable{`1}@)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMultiMap`2.ContainsTKeyTElement">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Contains(`1,`2)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMultiMap`2.RemoveTKeyTElement">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.Remove(`1,`2)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMultiMap`2.TryGetTKeyIEnumerableOfTElementOut">
            <summary>Sets the stub of <see cref="M:Atom.Collections.IMultiMap`2.TryGet(`1,System.Collections.Generic.IEnumerable`1{`2}@)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.SIMutableGrouping`2">
            <summary>Stub type of <see cref="T:Atom.Collections.IMutableGrouping`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.#ctor">
            <summary>Initializes a new instance of type SIMutableGrouping</summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.AddTElement">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Add(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.Clear">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.ContainsTElement">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.CopyToTElementArrayInt32">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.CountGet">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.IsReadOnlyGet">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.KeyGet">
            <summary>Sets the stub of <see cref="P:System.Linq.IGrouping`2.Key"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SIMutableGrouping`2.RemoveTElement">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#Add(`1)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Add(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#Clear">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#Contains(`1)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Contains(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#CopyTo(`1[],System.Int32)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`1[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#Remove(`1)">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.ICollection`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#Count">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.Count"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Collections#Generic#ICollection{TElement}#IsReadOnly">
            <summary>Sets the stub of <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SIMutableGrouping`2.global::System#Linq#IGrouping{TKey@TElement}#Key">
            <summary>Sets the stub of <see cref="P:System.Linq.IGrouping`2.Key"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SINameable">
            <summary>Stub type of <see cref="T:Atom.INameable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SINameable.#ctor">
            <summary>Initializes a new instance of type SINameable</summary>
        </member>
        <member name="M:Atom.Moles.SINameable.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate SINameable.Name as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Moles.SINameable.NameGet">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SINameable.NameGet01">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SINameable.NameSetString">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="P:Atom.Moles.SINameable.a::Atom#IReadOnlyNameable#Name">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="P:Atom.Moles.SINameable.a::Atom#INameable#Name">
            <summary><para>Sets the stub of <see cref="P:Atom.INameable.Name"/>.</para>
                        Gets or sets the name of the named object.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.SIObjectPropertyWrapper">
            <summary>Stub type of <see cref="T:Atom.Design.IObjectPropertyWrapper"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapper.#ctor">
            <summary>Initializes a new instance of type SIObjectPropertyWrapper</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapper.AttachBackingFieldToWrappedObject">
            <summary>Attaches delegates to emulate SIObjectPropertyWrapper.WrappedObject as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapper.Clone">
            <summary>Sets the stub of <see cref="M:System.ICloneable.Clone"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapper.PropertyChangedEvent">
            <summary>Event PropertyChanged</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapper.global::System#ICloneable#Clone">
            <summary>Sets the stub of <see cref="M:System.ICloneable.Clone"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapper.WrappedObjectGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapper.WrappedObjectSetObject">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapper.WrappedTypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IObjectPropertyWrapper.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SIObjectPropertyWrapper.a::Atom#Design#IObjectPropertyWrapper#WrappedObject">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IObjectPropertyWrapper.WrappedObject"/>.</para>
                        Gets or sets the object this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Design.Moles.SIObjectPropertyWrapper.a::Atom#Design#IObjectPropertyWrapper#WrappedType">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.IObjectPropertyWrapper.WrappedType"/>.</para>
                        Gets the <see cref="T:System.Type"/> this <see cref="T:Atom.Design.IObjectPropertyWrapper"/> wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Design.Moles.SIObjectPropertyWrapperFactory">
            <summary>Stub type of <see cref="T:Atom.Design.IObjectPropertyWrapperFactory"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.#ctor">
            <summary>Initializes a new instance of type SIObjectPropertyWrapperFactory</summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.a::Atom#Design#IObjectPropertyWrapperFactory#GetObjectTypes">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.GetObjectTypes"/>.</para>
                        Gets the types of the objects this IObjectPropertyWrapperFactory
                        provides an <see cref="T:Atom.Design.IObjectPropertyWrapper"/> for.
                        </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.a::Atom#Design#IObjectPropertyWrapperFactory#ReceiveWrapper(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.ReceiveWrapper(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.a::Atom#Design#IObjectPropertyWrapperFactory#ReceiveWrapperOrObject(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.ReceiveWrapperOrObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.a::Atom#Design#IObjectPropertyWrapperFactory#RegisterWrapper(Atom.Design.IObjectPropertyWrapper)">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.RegisterWrapper(T:Atom.Design.IObjectPropertyWrapper)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Moles.SIObjectPropertyWrapperFactory.a::Atom#Design#IObjectPropertyWrapperFactory#UnregisterWrapper(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.UnregisterWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapperFactory.GetObjectTypes">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.GetObjectTypes"/>.</para>
                        Gets the types of the objects this IObjectPropertyWrapperFactory
                        provides an <see cref="T:Atom.Design.IObjectPropertyWrapper"/> for.
                        </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapperFactory.ReceiveWrapperObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.ReceiveWrapper(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapperFactory.ReceiveWrapperOrObjectObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.ReceiveWrapperOrObject(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapperFactory.RegisterWrapperIObjectPropertyWrapper">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.RegisterWrapper(T:Atom.Design.IObjectPropertyWrapper)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Moles.SIObjectPropertyWrapperFactory.UnregisterWrapperType">
            <summary>Sets the stub of <see cref="M:Atom.Design.IObjectPropertyWrapperFactory.UnregisterWrapper(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SIObjectProviderContainer">
            <summary>Stub type of <see cref="T:Atom.IObjectProviderContainer"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIObjectProviderContainer.#ctor">
            <summary>Initializes a new instance of type SIObjectProviderContainer</summary>
        </member>
        <member name="M:Atom.Moles.SIObjectProviderContainer.a::Atom#IObjectProviderContainer#TryGetObjectProvider(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.IObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIObjectProviderContainer.TryGetObjectProviderType">
            <summary>Sets the stub of <see cref="M:Atom.IObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar">
            <summary>Stub type of <see cref="T:Atom.Patterns.Provider.IObjectProviderContainerRegistrar"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar.#ctor">
            <summary>Initializes a new instance of type SIObjectProviderContainerRegistrar</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar.a::Atom#IObjectProviderContainer#TryGetObjectProvider(System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.IObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar.a::Atom#Patterns#Provider#IObjectProviderContainerRegistrar#Register``1(Atom.IObjectProvider{``0})">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Provider.IObjectProviderContainerRegistrar.Register``1(Atom.IObjectProvider`1{``0})"/>
            </summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar.RegisterIObjectProviderOfTObject``1(Microsoft.Moles.Framework.MolesDelegates.Action{Atom.IObjectProvider{``0}})">
            <summary>Sets stubs of Register(IObjectProvider`1&lt;!!0&gt; provider)</summary>
        </member>
        <member name="F:Atom.Patterns.Provider.Moles.SIObjectProviderContainerRegistrar.TryGetObjectProviderType">
            <summary>Sets the stub of <see cref="M:Atom.IObjectProviderContainer.TryGetObjectProvider(T:System.Type)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectReader">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectReader"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReader.#ctor">
            <summary>Initializes a new instance of type SIObjectReader</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReader.a::Atom#Storage#IObjectReader#Deserialize(System.Object,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReader.DeserializeObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReader.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReader.a::Atom#Storage#IObjectReader#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectReader01`1">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectReader`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReader01`1.#ctor">
            <summary>Initializes a new instance of type SIObjectReader01</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReader01`1.a::Atom#Storage#IObjectReader#Deserialize(System.Object,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReader01`1.a::Atom#Storage#IObjectReader{TObject}#Deserialize(`0,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReader01`1.DeserializeObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReader01`1.DeserializeTObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReader01`1.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReader01`1.a::Atom#Storage#IObjectReader#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectReaderWriter">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectReaderWriter"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter.#ctor">
            <summary>Initializes a new instance of type SIObjectReaderWriter</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter.a::Atom#Storage#IObjectReader#Deserialize(System.Object,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter.a::Atom#Storage#IObjectWriter#Serialize(System.Object,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter.DeserializeObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter.SerializeObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter.TypeGet01">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReaderWriter.a::Atom#Storage#IObjectReader#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReaderWriter.a::Atom#Storage#IObjectWriter#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectReaderWriter01`1">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectReaderWriter`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter01`1.#ctor">
            <summary>Initializes a new instance of type SIObjectReaderWriter01</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectReader#Deserialize(System.Object,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectReader{TObject}#Deserialize(`0,Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectWriter#Serialize(System.Object,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectWriter{TObject}#Serialize(`0,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.DeserializeObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader.Deserialize(T:System.Object,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.DeserializeTObjectIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectReader`1.Deserialize(`1,T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.SerializeObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.SerializeTObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectReaderWriter01`1.TypeGet01">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectReader#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectReader.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectReader.Type"/> this IObjectReader deserializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectReaderWriter01`1.a::Atom#Storage#IObjectWriter#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectWriter">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectWriter"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectWriter.#ctor">
            <summary>Initializes a new instance of type SIObjectWriter</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectWriter.a::Atom#Storage#IObjectWriter#Serialize(System.Object,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectWriter.SerializeObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectWriter.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectWriter.a::Atom#Storage#IObjectWriter#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIObjectWriter01`1">
            <summary>Stub type of <see cref="T:Atom.Storage.IObjectWriter`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectWriter01`1.#ctor">
            <summary>Initializes a new instance of type SIObjectWriter01</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectWriter01`1.a::Atom#Storage#IObjectWriter#Serialize(System.Object,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIObjectWriter01`1.a::Atom#Storage#IObjectWriter{TObject}#Serialize(`0,Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectWriter01`1.SerializeObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter.Serialize(T:System.Object,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectWriter01`1.SerializeTObjectISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IObjectWriter`1.Serialize(`1,T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIObjectWriter01`1.TypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIObjectWriter01`1.a::Atom#Storage#IObjectWriter#Type">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IObjectWriter.Type"/>.</para>
                        Gets the <see cref="P:Atom.Storage.IObjectWriter.Type"/> this IObjectWriter serializes.
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIOwnedBy">
            <summary>Stub type of <see cref="T:Atom.IOwnedBy"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIOwnedBy.#ctor">
            <summary>Initializes a new instance of type SIOwnedBy</summary>
        </member>
        <member name="M:Atom.Moles.SIOwnedBy.AttachBackingFieldToOwner">
            <summary>Attaches delegates to emulate SIOwnedBy.Owner as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Moles.SIOwnedBy.OwnerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SIOwnedBy.OwnerSetObject">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="P:Atom.Moles.SIOwnedBy.a::Atom#IOwnedBy#Owner">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIOwnedBy01`1">
            <summary>Stub type of <see cref="T:Atom.IOwnedBy`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIOwnedBy01`1.#ctor">
            <summary>Initializes a new instance of type SIOwnedBy01</summary>
        </member>
        <member name="M:Atom.Moles.SIOwnedBy01`1.AttachBackingFieldToOwner">
            <summary>Attaches delegates to emulate SIOwnedBy01.Owner as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Moles.SIOwnedBy01`1.OwnerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy`1.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SIOwnedBy01`1.OwnerSetTOwner">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy`1.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="P:Atom.Moles.SIOwnedBy01`1.a::Atom#IOwnedBy{TOwner}#Owner">
            <summary><para>Sets the stub of <see cref="P:Atom.IOwnedBy`1.Owner"/>.</para>
                        Gets or sets the object that owns this object.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.SIPooledObject`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Pooling.IPooledObject`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SIPooledObject`1.#ctor">
            <summary>Initializes a new instance of type SIPooledObject</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SIPooledObject`1.AttachBackingFieldToPoolNode">
            <summary>Attaches delegates to emulate SIPooledObject.PoolNode as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SIPooledObject`1.PoolNodeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SIPooledObject`1.PoolNodeSetPoolNodeOfT">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SIPooledObject`1.a::Atom#Collections#Pooling#IPooledObject{T}#PoolNode">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Pooling.IPooledObjectWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.#ctor">
            <summary>Initializes a new instance of type SIPooledObjectWrapper</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.AttachBackingFieldToPoolNode">
            <summary>Attaches delegates to emulate SIPooledObjectWrapper.PoolNode as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.PoolNodeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.PoolNodeSetPoolNodeOfIPooledObjectWrapperOfT">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.PooledObjectGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObjectWrapper`1.PooledObject"/>.</para>
                        Gets the Object this PooledObjectWrapper{T} wraps around.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.a::Atom#Collections#Pooling#IPooledObject{Atom#Collections#Pooling#IPooledObjectWrapper{T}}#PoolNode">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObject`1.PoolNode"/>.</para>
                        Gets or sets the <see cref="T:Atom.Collections.Pooling.PoolNode`1"/> this IPooledObject{T} is associated with.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SIPooledObjectWrapper`1.a::Atom#Collections#Pooling#IPooledObjectWrapper{T}#PooledObject">
            <summary><para>Sets the stub of <see cref="P:Atom.Collections.Pooling.IPooledObjectWrapper`1.PooledObject"/>.</para>
                        Gets the Object this PooledObjectWrapper{T} wraps around.
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIPreUpdateable">
            <summary>Stub type of <see cref="T:Atom.IPreUpdateable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIPreUpdateable.#ctor">
            <summary>Initializes a new instance of type SIPreUpdateable</summary>
        </member>
        <member name="M:Atom.Moles.SIPreUpdateable.a::Atom#IPreUpdateable#PreUpdate(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIPreUpdateable.PreUpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IPreUpdateable.PreUpdate(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Math.Moles.SIRand">
            <summary>Stub type of <see cref="T:Atom.Math.IRand"/>
            .</summary>
        </member>
        <member name="M:Atom.Math.Moles.SIRand.#ctor">
            <summary>Initializes a new instance of type SIRand</summary>
        </member>
        <member name="F:Atom.Math.Moles.SIRand.RandomBooleanGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomBoolean"/>.</para>
                        Gets a random boolean state value.
                        </summary>
        </member>
        <member name="F:Atom.Math.Moles.SIRand.RandomDecimalGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomDecimal"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="F:Atom.Math.Moles.SIRand.RandomDoubleGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomDouble"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="F:Atom.Math.Moles.SIRand.RandomIntegerGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomInteger"/>.</para>
                        Gets a random number in the interval [0,0x7fffffff].
                        </summary>
        </member>
        <member name="F:Atom.Math.Moles.SIRand.RandomSingleGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomSingle"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="P:Atom.Math.Moles.SIRand.a::Atom#Math#IRand#RandomBoolean">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomBoolean"/>.</para>
                        Gets a random boolean state value.
                        </summary>
        </member>
        <member name="P:Atom.Math.Moles.SIRand.a::Atom#Math#IRand#RandomDecimal">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomDecimal"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="P:Atom.Math.Moles.SIRand.a::Atom#Math#IRand#RandomDouble">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomDouble"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="P:Atom.Math.Moles.SIRand.a::Atom#Math#IRand#RandomInteger">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomInteger"/>.</para>
                        Gets a random number in the interval [0,0x7fffffff].
                        </summary>
        </member>
        <member name="P:Atom.Math.Moles.SIRand.a::Atom#Math#IRand#RandomSingle">
            <summary><para>Sets the stub of <see cref="P:Atom.Math.IRand.RandomSingle"/>.</para>
                        Gets a random number in the interval [0.0, 1.0].
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIReadOnlyNameable">
            <summary>Stub type of <see cref="T:Atom.IReadOnlyNameable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIReadOnlyNameable.#ctor">
            <summary>Initializes a new instance of type SIReadOnlyNameable</summary>
        </member>
        <member name="F:Atom.Moles.SIReadOnlyNameable.NameGet">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="P:Atom.Moles.SIReadOnlyNameable.a::Atom#IReadOnlyNameable#Name">
            <summary><para>Sets the stub of <see cref="P:Atom.IReadOnlyNameable.Name"/>.</para>
                        Gets the name name of the object.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SISerializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.ISerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.#ctor">
            <summary>Initializes a new instance of type SISerializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Byte)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Char)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Double)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int64)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SISerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Single)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteBoolean">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteByte">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteChar">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteDouble">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteInt64">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteSingle">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SISerializationContext.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIStorable">
            <summary>Stub type of <see cref="T:Atom.Storage.IStorable"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorable.#ctor">
            <summary>Initializes a new instance of type SIStorable</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorable.a::Atom#Storage#IStorable#Deserialize(Atom.Storage.IDeserializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorable.Deserialize(T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorable.a::Atom#Storage#IStorable#Serialize(Atom.Storage.ISerializationContext)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorable.Serialize(T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIStorable.DeserializeIDeserializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorable.Deserialize(T:Atom.Storage.IDeserializationContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIStorable.SerializeISerializationContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorable.Serialize(T:Atom.Storage.ISerializationContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIStorageContextFactory`5">
            <summary>Stub type of <see cref="T:Atom.Storage.IStorageContextFactory`5"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorageContextFactory`5.#ctor">
            <summary>Initializes a new instance of type SIStorageContextFactory</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorageContextFactory`5.a::Atom#Storage#IStorageContextFactory{TObject@TSerializationContext@TDeserializationContext@TSerializationBuildContext@TDeserializationBuildContext}#BuildDeserializationContext(`0,`4)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorageContextFactory`5.BuildDeserializationContext(`1,`5)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIStorageContextFactory`5.a::Atom#Storage#IStorageContextFactory{TObject@TSerializationContext@TDeserializationContext@TSerializationBuildContext@TDeserializationBuildContext}#BuildSerializationContext(`0,`3)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorageContextFactory`5.BuildSerializationContext(`1,`4)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIStorageContextFactory`5.BuildDeserializationContextTObjectTDeserializationBuildContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorageContextFactory`5.BuildDeserializationContext(`1,`5)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIStorageContextFactory`5.BuildSerializationContextTObjectTSerializationBuildContext">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IStorageContextFactory`5.BuildSerializationContext(`1,`4)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SIStringConverter">
            <summary>Stub type of <see cref="T:Atom.IStringConverter"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIStringConverter.#ctor">
            <summary>Initializes a new instance of type SIStringConverter</summary>
        </member>
        <member name="M:Atom.Moles.SIStringConverter.a::Atom#IStringConverter#ConvertFromString(System.String,System.Type)">
            <summary>Sets the stub of <see cref="M:Atom.IStringConverter.ConvertFromString(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.SIStringConverter.a::Atom#IStringConverter#ConvertToString(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.IStringConverter.ConvertToString(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIStringConverter.ConvertFromStringStringType">
            <summary>Sets the stub of <see cref="M:Atom.IStringConverter.ConvertFromString(T:System.String,T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIStringConverter.ConvertToStringObject">
            <summary>Sets the stub of <see cref="M:Atom.IStringConverter.ConvertToString(T:System.Object)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SITypeActivator">
            <summary>Stub type of <see cref="T:Atom.ITypeActivator"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SITypeActivator.#ctor">
            <summary>Initializes a new instance of type SITypeActivator</summary>
        </member>
        <member name="M:Atom.Moles.SITypeActivator.a::Atom#ITypeActivator#CreateInstance(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.ITypeActivator.CreateInstance(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SITypeActivator.CreateInstanceString">
            <summary>Sets the stub of <see cref="M:Atom.ITypeActivator.CreateInstance(T:System.String)"/>
            </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IUnsignedBinaryDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.#ctor">
            <summary>Initializes a new instance of type SIUnsignedBinaryDeserializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IUnsignedDeserializationContext#ReadUInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IUnsignedDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReadUInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IUnsignedDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.ReaderGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this IBinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIUnsignedBinaryDeserializationContext.a::Atom#Storage#IBinaryDeserializationContext#Reader">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinaryDeserializationContext.Reader"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryReader"/> this IBinarySerializationContext internally
                        uses to read data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIUnsignedBinarySerializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IUnsignedBinarySerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.#ctor">
            <summary>Initializes a new instance of type SIUnsignedBinarySerializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Byte)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Char)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Double)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int64)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Single)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#IUnsignedSerializationContext#WriteUnsigned(System.UInt32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IUnsignedSerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteBoolean">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteByte">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteChar">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteDouble">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteInt64">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteSingle">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriteUnsignedUInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IUnsignedSerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.WriterGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this IBinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="P:Atom.Storage.Moles.SIUnsignedBinarySerializationContext.a::Atom#Storage#IBinarySerializationContext#Writer">
            <summary><para>Sets the stub of <see cref="P:Atom.Storage.IBinarySerializationContext.Writer"/>.</para>
                        Gets the <see cref="T:System.IO.BinaryWriter"/> this IBinarySerializationContext internally
                        uses to write data.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIUnsignedDeserializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IUnsignedDeserializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.#ctor">
            <summary>Initializes a new instance of type SIUnsignedDeserializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IDeserializationContext#ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedDeserializationContext.a::Atom#Storage#IUnsignedDeserializationContext#ReadUInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IUnsignedDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadBoolean">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadBoolean"/>.</para>
                        Reads a Boolean value.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadByte">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadByte"/>.</para>
                        Reads a 8-bit unsigned integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadChar">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadChar"/>.</para>
                        Reads a Unicode character.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadDouble">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadDouble"/>.</para>
                        Reads a double-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadInt16">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt16"/>.</para>
                        Reads a 16-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt32"/>.</para>
                        Reads a 32-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadInt64">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadInt64"/>.</para>
                        Reads a 64-bit signed integer.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadSingle">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadSingle"/>.</para>
                        Reads a single-precision floating-point number.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadString">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IDeserializationContext.ReadString"/>.</para>
                        Reads a series of Unicode characters.
                        </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedDeserializationContext.ReadUInt32">
            <summary><para>Sets the stub of <see cref="M:Atom.Storage.IUnsignedDeserializationContext.ReadUInt32"/>.</para>
                        Reads a 32-bit unsigned integer.
                        </summary>
        </member>
        <member name="T:Atom.Storage.Moles.SIUnsignedSerializationContext">
            <summary>Stub type of <see cref="T:Atom.Storage.IUnsignedSerializationContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.#ctor">
            <summary>Initializes a new instance of type SIUnsignedSerializationContext</summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Byte)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Char)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Double)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Int64)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#ISerializationContext#Write(System.Single)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="M:Atom.Storage.Moles.SIUnsignedSerializationContext.a::Atom#Storage#IUnsignedSerializationContext#WriteUnsigned(System.UInt32)">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IUnsignedSerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteBoolean">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteByte">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Byte)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteChar">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Char)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteDouble">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Double)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteInt64">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Int64)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteSingle">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.Single)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Storage.ISerializationContext.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Storage.Moles.SIUnsignedSerializationContext.WriteUnsignedUInt32">
            <summary>Sets the stub of <see cref="M:Atom.Storage.IUnsignedSerializationContext.WriteUnsigned(T:System.UInt32)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SIUpdateContext">
            <summary>Stub type of <see cref="T:Atom.IUpdateContext"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIUpdateContext.#ctor">
            <summary>Initializes a new instance of type SIUpdateContext</summary>
        </member>
        <member name="F:Atom.Moles.SIUpdateContext.FrameTimeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.IUpdateContext.FrameTime"/>.</para>
                        Gets the time the last frame took to execute (in seconds).
                        </summary>
        </member>
        <member name="P:Atom.Moles.SIUpdateContext.a::Atom#IUpdateContext#FrameTime">
            <summary><para>Sets the stub of <see cref="P:Atom.IUpdateContext.FrameTime"/>.</para>
                        Gets the time the last frame took to execute (in seconds).
                        </summary>
        </member>
        <member name="T:Atom.Moles.SIUpdateable">
            <summary>Stub type of <see cref="T:Atom.IUpdateable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SIUpdateable.#ctor">
            <summary>Initializes a new instance of type SIUpdateable</summary>
        </member>
        <member name="M:Atom.Moles.SIUpdateable.a::Atom#IUpdateable#Update(Atom.IUpdateContext)">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SIUpdateable.UpdateIUpdateContext">
            <summary>Sets the stub of <see cref="M:Atom.IUpdateable.Update(T:Atom.IUpdateContext)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SInvalidExtensionException">
            <summary>Stub type of <see cref="T:Atom.InvalidExtensionException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidExtensionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidExtensionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidExtensionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidExtensionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidExtensionException.InitializeStub">
            <summary>Initializes a new instance of type SInvalidExtensionException</summary>
        </member>
        <member name="P:Atom.Moles.SInvalidExtensionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SInvalidExtensionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Moles.SInvalidVersionException">
            <summary>Stub type of <see cref="T:Atom.InvalidVersionException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidVersionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidVersionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidVersionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SInvalidVersionException.InitializeStub">
            <summary>Initializes a new instance of type SInvalidVersionException</summary>
        </member>
        <member name="P:Atom.Moles.SInvalidVersionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SInvalidVersionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Moles.SManagedDisposable">
            <summary>Stub type of <see cref="T:Atom.ManagedDisposable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SManagedDisposable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SManagedDisposable.Dispose(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SManagedDisposable.DisposeBoolean">
            <summary>Sets the stub of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.SManagedDisposable.DisposeManagedResources">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SManagedDisposable.DisposeManagedResources01">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="M:Atom.Moles.SManagedDisposable.DisposeUnmanagedResources">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SManagedDisposable.DisposeUnmanagedResources01">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="M:Atom.Moles.SManagedDisposable.InitializeStub">
            <summary>Initializes a new instance of type SManagedDisposable</summary>
        </member>
        <member name="P:Atom.Moles.SManagedDisposable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SManagedDisposable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor">
            <summary>Stub type of <see cref="T:Atom.Design.Descriptors.MemberPropertyDescriptor"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.#ctor(System.Reflection.MemberInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(T:System.Object,T:System.EventHandler)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AddValueChangedObjectEventHandler">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(T:System.Object,T:System.EventHandler)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AttachBackingFieldToAttributeArray">
            <summary>Attaches delegates to emulate SMemberPropertyDescriptor.AttributeArray as a property with a backing field</summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AttributeArrayGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AttributeArraySetAttributeArray">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AttributesGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Attributes"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CanResetValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.CanResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CanResetValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.CanResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CategoryGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Category"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ComponentTypeGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.ComponentType"/>.</para>
                        Gets the type of the comonent descriped by the MemberPropertyDescriptor.
                        </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ConverterGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.Converter"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CreateAttributeCollection">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CreateAttributeCollection01">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.DescriptionGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Description"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.DesignTimeOnlyGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.DisplayNameGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.DisplayName"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.EqualsObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.FillAttributes(System.Collections.IList)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.FillAttributes(T:System.Collections.IList)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.FillAttributesIList">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.FillAttributes(T:System.Collections.IList)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(T:System.Object,T:System.Attribute[])"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetChildPropertiesObjectAttributeArray">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(T:System.Object,T:System.Attribute[])"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetEditor(System.Type)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetEditor(T:System.Type)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetEditorType">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetEditor(T:System.Type)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetHashCode">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.GetHashCode"/>.</para>
                        Overriden to return the hash-code of the wrapped member.
                        </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetHashCode01">
            <summary><para>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.GetHashCode"/>.</para>
                        Overriden to return the hash-code of the wrapped member.
                        </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(T:System.Type,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetInvocationTargetTypeObject">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(T:System.Type,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetValue(System.Object)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.GetValueObject">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.InitializeStub">
            <summary>Initializes a new instance of type SMemberPropertyDescriptor</summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsBrowsableGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.IsBrowsable"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsLocalizableGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.IsLocalizable"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsReadOnlyGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the MemberPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.NameGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Name"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.NameHashCodeGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.NameHashCode"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(T:System.Object,T:System.EventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.OnValueChangedObjectEventArgs">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(T:System.Object,T:System.EventArgs)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.PropertyTypeGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.PropertyType"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(T:System.Object,T:System.EventHandler)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.RemoveValueChangedObjectEventHandler">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(T:System.Object,T:System.EventHandler)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ResetValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ResetValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ResetValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.SetValueObjectObject">
            <summary>Sets the stub of <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(T:System.Object,T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ShouldSerializeValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ShouldSerializeValueObject">
            <summary>Sets the stub of <see cref="M:Atom.Design.Descriptors.MemberPropertyDescriptor.ShouldSerializeValue(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.SupportsChangeEventsGet">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.AttributeArray">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.AttributeArray"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Attributes">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Attributes"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Category">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Category"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.ComponentType">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.ComponentType"/>.</para>
                        Gets the type of the comonent descriped by the MemberPropertyDescriptor.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Converter">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.Converter"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Description">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Description"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.DesignTimeOnly">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.DesignTimeOnly"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.DisplayName">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.DisplayName"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsBrowsable">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.IsBrowsable"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsLocalizable">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.IsLocalizable"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.IsReadOnly">
            <summary><para>Sets the stub of <see cref="P:Atom.Design.Descriptors.MemberPropertyDescriptor.IsReadOnly"/>.</para>
                        Gets a value indicating whether the MemberPropertyDescriptor is read-only.
                        </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.Name">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.Name"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.NameHashCode">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.MemberDescriptor.NameHashCode"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.PropertyType">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.PropertyType"/>
            </summary>
        </member>
        <member name="P:Atom.Design.Descriptors.Moles.SMemberPropertyDescriptor.SupportsChangeEvents">
            <summary>Sets the stub of <see cref="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.SMultiMap`2">
            <summary>Stub type of <see cref="T:Atom.Collections.MultiMap`2"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SMultiMap`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SMultiMap`2.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SMultiMap`2.CreateGrouping(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.MultiMap`2.CreateGrouping(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SMultiMap`2.CreateGroupingTKey">
            <summary>Sets the stub of <see cref="M:Atom.Collections.MultiMap`2.CreateGrouping(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SMultiMap`2.InitializeStub">
            <summary>Initializes a new instance of type SMultiMap</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SMultiMap`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SMultiMap`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SNonNullList`1">
            <summary>Stub type of <see cref="T:Atom.Collections.NonNullList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SNonNullList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SNonNullList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SNonNullList`1.GetPredicateFailedErrorMessage(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.NonNullList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SNonNullList`1.GetPredicateFailedErrorMessageT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.NonNullList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SNonNullList`1.InitializeStub">
            <summary>Initializes a new instance of type SNonNullList</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SNonNullList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SNonNullList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Moles.SNotFoundException">
            <summary>Stub type of <see cref="T:Atom.NotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type SNotFoundException</summary>
        </member>
        <member name="P:Atom.Moles.SNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SObjectMatrix`1">
            <summary>Stub type of <see cref="T:Atom.Collections.ObjectMatrix`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.#ctor(Atom.Collections.ObjectMatrix{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.#ctor(`0[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SObjectMatrix`1.EqualsObject">
            <summary>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.GetHashCode">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.GetHashCode"/>.</para>
                        Returns the hash code of this <see cref="T:Atom.Collections.ObjectMatrix`1"/> instance.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SObjectMatrix`1.GetHashCode01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.GetHashCode"/>.</para>
                        Returns the hash code of this <see cref="T:Atom.Collections.ObjectMatrix`1"/> instance.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SObjectMatrix`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.InitializeStub">
            <summary>Initializes a new instance of type SObjectMatrix</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SObjectMatrix`1.ToString">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.ToString"/>.</para>
                        Returns a humen-readable representation of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SObjectMatrix`1.ToString01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.ObjectMatrix`1.ToString"/>.</para>
                        Returns a humen-readable representation of the <see cref="T:Atom.Collections.ObjectMatrix`1"/>.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SObjectMatrix`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SObjectMatrix`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Design.Moles.SObjectPropertyWrapperFactory">
            <summary>Stub type of <see cref="T:Atom.Design.ObjectPropertyWrapperFactory"/>
            .</summary>
        </member>
        <member name="M:Atom.Design.Moles.SObjectPropertyWrapperFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Design.Moles.SObjectPropertyWrapperFactory.InitializeStub">
            <summary>Initializes a new instance of type SObjectPropertyWrapperFactory</summary>
        </member>
        <member name="P:Atom.Design.Moles.SObjectPropertyWrapperFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Design.Moles.SObjectPropertyWrapperFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Patterns.Provider.Moles.SObjectProviderContainer">
            <summary>Stub type of <see cref="T:Atom.Patterns.Provider.ObjectProviderContainer"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SObjectProviderContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Patterns.Provider.Moles.SObjectProviderContainer.InitializeStub">
            <summary>Initializes a new instance of type SObjectProviderContainer</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.SObjectProviderContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Patterns.Provider.Moles.SObjectProviderContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1">
            <summary>Stub type of <see cref="T:Atom.Patterns.Visitor.OrderedVisitor`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.#ctor(Atom.Patterns.Visitor.IVisitor{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.InitializeStub">
            <summary>Initializes a new instance of type SOrderedVisitor</summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitInOrder(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitInOrderT">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitInOrder(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitPostOrder(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitPostOrderT">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPostOrder(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitPreOrder(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.VisitPreOrderT">
            <summary>Sets the stub of <see cref="M:Atom.Patterns.Visitor.OrderedVisitor`1.VisitPreOrder(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Patterns.Visitor.Moles.SOrderedVisitor`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.SPool`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Pooling.Pool`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SPool`1.#ctor(System.Int32,Atom.Collections.Pooling.PooledObjectCreator{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SPool`1.InitializeStub">
            <summary>Initializes a new instance of type SPool</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SPool`1.OnCreated(Atom.Collections.Pooling.PoolNode{`0})">
            <summary>Sets the stub of <see cref="M:Atom.Collections.Pooling.Pool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SPool`1.OnCreatedPoolNodeOfT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.Pooling.Pool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{`1})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SPool`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SPool`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.SPooledObjectWrapper`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Pooling.PooledObjectWrapper`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SPooledObjectWrapper`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SPooledObjectWrapper`1.InitializeStub">
            <summary>Initializes a new instance of type SPooledObjectWrapper</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SPooledObjectWrapper`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SPooledObjectWrapper`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SPreconditionedList`1">
            <summary>Stub type of <see cref="T:Atom.Collections.PreconditionedList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.#ctor(System.Predicate{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.#ctor(System.Predicate{`0},System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.Add(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.AddT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.GetPredicateFailedErrorMessage(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.GetPredicateFailedErrorMessageT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.GetPredicateFailedErrorMessage(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.InitializeStub">
            <summary>Initializes a new instance of type SPreconditionedList</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.Insert(System.Int32,`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.InsertInt32T">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.ItemSetInt32T">
            <summary>Sets the stub of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SPreconditionedList`1.OnPredicateFailed(`0,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.OnPredicateFailed(`1,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SPreconditionedList`1.OnPredicateFailedTString">
            <summary>Sets the stub of <see cref="M:Atom.Collections.PreconditionedList`1.OnPredicateFailed(`1,T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SPreconditionedList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SPreconditionedList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SPreconditionedList`1.Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:Atom.Collections.PreconditionedList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:Atom.Collections.Moles.SRedirectingList`1">
            <summary>Stub type of <see cref="T:Atom.Collections.RedirectingList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.Add(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.AddT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Add(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.Clear">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Clear"/>.</para>
                        Removes all items from the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.Clear01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Clear"/>.</para>
                        Removes all items from the System.Collections.Generic.ICollection{T}.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.InitializeStub">
            <summary>Initializes a new instance of type SRedirectingList</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.Insert(System.Int32,`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.InsertInt32T">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Insert(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.ItemSetInt32T">
            <summary>Sets the stub of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.Remove(`0)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SRedirectingList`1.RemoveAt(System.Int32)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.RemoveAtInt32">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SRedirectingList`1.RemoveT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.RedirectingList`1.Remove(`1)"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SRedirectingList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SRedirectingList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SRedirectingList`1.Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:Atom.Collections.RedirectingList`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:Atom.Moles.SServiceNotFoundException">
            <summary>Stub type of <see cref="T:Atom.ServiceNotFoundException"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.#ctor(System.String,System.Type,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of <see cref="M:Atom.ServiceNotFoundException.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SServiceNotFoundException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of <see cref="M:Atom.ServiceNotFoundException.GetObjectData(T:System.Runtime.Serialization.SerializationInfo,T:System.Runtime.Serialization.StreamingContext)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.SServiceNotFoundException.InitializeStub">
            <summary>Initializes a new instance of type SServiceNotFoundException</summary>
        </member>
        <member name="P:Atom.Moles.SServiceNotFoundException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SServiceNotFoundException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Moles.SSortableList`1">
            <summary>Stub type of <see cref="T:Atom.Collections.SortableList`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.#ctor(System.Collections.Generic.IComparer{`0},System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SSortableList`1.EqualsObject">
            <summary>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.GetHashCode">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.GetHashCode"/>.</para>
                        Returns the hash-code of this instance.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SSortableList`1.GetHashCode01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.GetHashCode"/>.</para>
                        Returns the hash-code of this instance.
                        </summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.InitializeStub">
            <summary>Initializes a new instance of type SSortableList</summary>
        </member>
        <member name="M:Atom.Collections.Moles.SSortableList`1.ToString">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.SortableList`1"/> instance.
                        </summary>
        </member>
        <member name="F:Atom.Collections.Moles.SSortableList`1.ToString01">
            <summary><para>Sets the stub of <see cref="M:Atom.Collections.SortableList`1.ToString"/>.</para>
                        Returns a string representation of this <see cref="T:Atom.Collections.SortableList`1"/> instance.
                        </summary>
        </member>
        <member name="P:Atom.Collections.Moles.SSortableList`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Moles.SSortableList`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.STextWriterLog">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.TextWriterLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.ActuallyWrite(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.ActuallyWriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.DefaultSeverityGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.Dispose(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.DisposeBoolean">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TextWriterLog.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.InitializeStub">
            <summary>Initializes a new instance of type STextWriterLog</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.IsNotLogged(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.IsNotLoggedLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.Write(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.WriteLine(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STextWriterLog.WriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.WriteLine01">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.WriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.WriteLineString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.WriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STextWriterLog.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STextWriterLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STextWriterLog.DefaultSeverity">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STextWriterLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Diagnostics.Moles.STraceLog">
            <summary>Stub type of <see cref="T:Atom.Diagnostics.TraceLog"/>
            .</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.ActuallyWrite(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.ActuallyWriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.ActuallyWriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.ActuallyWriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.TraceLog.ActuallyWrite(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.DefaultSeverityGet">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.InitializeStub">
            <summary>Initializes a new instance of type STraceLog</summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.IsNotLogged(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.IsNotLoggedLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.IsNotLogged(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.Write(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.Write(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.WriteLine">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.WriteLine(System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="M:Atom.Diagnostics.Moles.STraceLog.WriteLine(Atom.Diagnostics.LogSeverities,System.String)">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.WriteLine01">
            <summary><para>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine"/>.</para>
                        Writes a new empty line to this ILog with the <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.
                        </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.WriteLineLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.WriteLineString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.WriteLine(T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.WriteLogSeveritiesString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:Atom.Diagnostics.LogSeverities,T:System.String)"/>
            </summary>
        </member>
        <member name="F:Atom.Diagnostics.Moles.STraceLog.WriteString">
            <summary>Sets the stub of <see cref="M:Atom.Diagnostics.BaseLog.Write(T:System.String)"/>
            </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STraceLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STraceLog.DefaultSeverity">
            <summary><para>Sets the stub of <see cref="P:Atom.Diagnostics.BaseLog.DefaultSeverity"/>.</para>
                        Gets the default <see cref="T:Atom.Diagnostics.LogSeverities"/> messages are logged as.
                        </summary>
        </member>
        <member name="P:Atom.Diagnostics.Moles.STraceLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Moles.STypeStringConverter">
            <summary>Stub type of <see cref="T:Atom.TypeStringConverter"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.STypeStringConverter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.STypeStringConverter.InitializeStub">
            <summary>Initializes a new instance of type STypeStringConverter</summary>
        </member>
        <member name="P:Atom.Moles.STypeStringConverter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.STypeStringConverter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Moles.SUnmanagedDisposable">
            <summary>Stub type of <see cref="T:Atom.UnmanagedDisposable"/>
            .</summary>
        </member>
        <member name="M:Atom.Moles.SUnmanagedDisposable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Moles.SUnmanagedDisposable.Dispose(System.Boolean)">
            <summary>Sets the stub of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:Atom.Moles.SUnmanagedDisposable.DisposeBoolean">
            <summary>Sets the stub of <see cref="M:Atom.ManagedDisposable.Dispose(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Atom.Moles.SUnmanagedDisposable.DisposeManagedResources">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SUnmanagedDisposable.DisposeManagedResources01">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeManagedResources"/>.</para>
                        Releases all managed resources.
                        </summary>
        </member>
        <member name="M:Atom.Moles.SUnmanagedDisposable.DisposeUnmanagedResources">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="F:Atom.Moles.SUnmanagedDisposable.DisposeUnmanagedResources01">
            <summary><para>Sets the stub of <see cref="M:Atom.ManagedDisposable.DisposeUnmanagedResources"/>.</para>
                        Releases all unmanaged resources. Umanaged resources are disposed before managed resources.
                        </summary>
        </member>
        <member name="M:Atom.Moles.SUnmanagedDisposable.InitializeStub">
            <summary>Initializes a new instance of type SUnmanagedDisposable</summary>
        </member>
        <member name="P:Atom.Moles.SUnmanagedDisposable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Moles.SUnmanagedDisposable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:Atom.Collections.Pooling.Moles.SWrappingPool`1">
            <summary>Stub type of <see cref="T:Atom.Collections.Pooling.WrappingPool`1"/>
            .</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SWrappingPool`1.#ctor(System.Int32,Atom.Collections.Pooling.PooledObjectCreator{Atom.Collections.Pooling.IPooledObjectWrapper{`0}})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SWrappingPool`1.InitializeStub">
            <summary>Initializes a new instance of type SWrappingPool</summary>
        </member>
        <member name="M:Atom.Collections.Pooling.Moles.SWrappingPool`1.OnCreated(Atom.Collections.Pooling.PoolNode{Atom.Collections.Pooling.IPooledObjectWrapper{`0}})">
            <summary>Sets the stub of <see cref="M:Atom.Collections.Pooling.WrappingPool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{Atom.Collections.Pooling.IPooledObjectWrapper`1{`1}})"/>
            </summary>
        </member>
        <member name="F:Atom.Collections.Pooling.Moles.SWrappingPool`1.OnCreatedPoolNodeOfIPooledObjectWrapperOfT">
            <summary>Sets the stub of <see cref="M:Atom.Collections.Pooling.WrappingPool`1.OnCreated(Atom.Collections.Pooling.PoolNode`1{Atom.Collections.Pooling.IPooledObjectWrapper`1{`1}})"/>
            </summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SWrappingPool`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Atom.Collections.Pooling.Moles.SWrappingPool`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
    </members>
</doc>
