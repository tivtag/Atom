//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atom.Math.Graph {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GraphErrorStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GraphErrorStrings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Atom.Math.Graph.GraphErrorStrings", typeof(GraphErrorStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Such an Edge already exists ähnelt.
        /// </summary>
        internal static string EdgeAlreadyExists {
            get {
                return ResourceManager.GetString("EdgeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There already exists an edge from Vertex &apos;{0}&apos; to Vertex &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string EdgeAlreadyExistsFromXToY {
            get {
                return ResourceManager.GetString("EdgeAlreadyExistsFromXToY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The data stored in an Edge of the Graph is null. This is invalid for this operation. ähnelt.
        /// </summary>
        internal static string EdgeDataIsNull {
            get {
                return ResourceManager.GetString("EdgeDataIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edge &lt;-&gt; Graph - IsDirected mismatch. A directed graph can only contain directed edges and visa versa. ähnelt.
        /// </summary>
        internal static string EdgeGraphDirectedMismatch {
            get {
                return ResourceManager.GetString("EdgeGraphDirectedMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation requires the Graphs to be both directed or undirected. ähnelt.
        /// </summary>
        internal static string GraphDirectionMismatch {
            get {
                return ResourceManager.GetString("GraphDirectionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This Graph doesn&apos;t allow Edges that start and end at the same Vertex.  (Self Loops) ähnelt.
        /// </summary>
        internal static string GraphDoesntAllowSelfLoopAdded {
            get {
                return ResourceManager.GetString("GraphDoesntAllowSelfLoopAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Graph contains cycles. This is invalid for this operation. ähnelt.
        /// </summary>
        internal static string GraphHasCycles {
            get {
                return ResourceManager.GetString("GraphHasCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Graph is empty. This is invalid for this operation. ähnelt.
        /// </summary>
        internal static string GraphIsEmpty {
            get {
                return ResourceManager.GetString("GraphIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No matching Vertex has been found in the Graph. ähnelt.
        /// </summary>
        internal static string NoMatchingVertexFoundInGraph {
            get {
                return ResourceManager.GetString("NoMatchingVertexFoundInGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation is only valid on a directed Graph. ähnelt.
        /// </summary>
        internal static string OperationOnlyValidonDirectedGraph {
            get {
                return ResourceManager.GetString("OperationOnlyValidonDirectedGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This operation is only valid on simple graphs that contain no self-loops or multiple edges. ähnelt.
        /// </summary>
        internal static string OperationOnlyValidOnSimpleGraphs {
            get {
                return ResourceManager.GetString("OperationOnlyValidOnSimpleGraphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Vertex already exists in the Graph. ähnelt.
        /// </summary>
        internal static string VertexAlreadyExistsInGraph {
            get {
                return ResourceManager.GetString("VertexAlreadyExistsInGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Vertex could not be found. ähnelt.
        /// </summary>
        internal static string VertexCouldNotBeFound {
            get {
                return ResourceManager.GetString("VertexCouldNotBeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The vertex-count is zero. ähnelt.
        /// </summary>
        internal static string VertexCountIsZero {
            get {
                return ResourceManager.GetString("VertexCountIsZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Vertex is not part of the Edge. ähnelt.
        /// </summary>
        internal static string VertexNotPartOfEdge {
            get {
                return ResourceManager.GetString("VertexNotPartOfEdge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Voltage &apos;{0}&apos; of the Voltage Graph is not part of the Voltage Group of Order &apos;{1}&apos;. ähnelt.
        /// </summary>
        internal static string VoltageXOfVoltageGraphNotPartOfSpecifiedVoltageGroupOrderY {
            get {
                return ResourceManager.GetString("VoltageXOfVoltageGraphNotPartOfSpecifiedVoltageGroupOrderY", resourceCulture);
            }
        }
    }
}
