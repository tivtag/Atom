<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4A22DDEF-E447-416A-BAB1-27A9B0A9786B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Atom.Tests</RootNamespace>
    <AssemblyName>Atom.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <UseApplicationTrust>false</UseApplicationTrust>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <CodeAnalysisLogFile>bin\Debug\Atom.Tests.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisInputAssembly>bin\x86\Debug\Atom.Tests.dll</CodeAnalysisInputAssembly>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>false</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsRuntimeCheckingLevel>None</CodeContractsRuntimeCheckingLevel>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsBuildReferenceAssembly>False</CodeContractsBuildReferenceAssembly>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsLibPaths />
    <CodeContractsPlatformPath />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>False</CodeContractsShowSquigglies>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <CodeAnalysisLogFile>bin\Release\Atom.Tests.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisInputAssembly>bin\x86\Release\Atom.Tests.dll</CodeAnalysisInputAssembly>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>..\..\SourceAnalysisRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>false</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsBuildReferenceAssembly>False</CodeContractsBuildReferenceAssembly>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsNonNullObligations>False</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>False</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsLibPaths />
    <CodeContractsPlatformPath />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsBaseLineFile />
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>False</CodeContractsShowSquigglies>
    <CodeContractsExtraRewriteOptions />
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Atom.Moles, Version=1.5.3812.32348, Culture=neutral, processorArchitecture=MSIL" />
    <Reference Include="Microsoft.Moles.Framework, Version=0.21.50115.2, Culture=neutral, PublicKeyToken=76a274db078248c8, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
    </Reference>
    <Reference Include="Microsoft.Pex.Framework, Version=0.20.41218.2, Culture=neutral, PublicKeyToken=76a274db078248c8, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\..\..\..\..\..\..\..\Program Files (x86)\Microsoft Pex\PublicAssemblies\Microsoft.Pex.Framework.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
    <Reference Include="mscorlib.Moles, Version=4.0.0.0, Culture=neutral, PublicKeyToken=0ae41878053f6703, processorArchitecture=MSIL" />
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Drawing" />
    <Reference Include="System.Moles, Version=4.0.0.0, Culture=neutral, PublicKeyToken=0ae41878053f6703, processorArchitecture=MSIL" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AnonymousTests.cs" />
    <Compile Include="ChangedValueTests.AreEqual_When_ElementsAreEqual.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.AreEqual_When_ElementsAreEqual_WithStrings.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.cs" />
    <Compile Include="ChangedValueTests.GetHashCode_Returns_SameValue_WhenProperties_AreSame.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.GetHashCode_Returns_SameValue_WhenProperties_AreSame_WithStrings.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.Properties_Return_ExpectedValues_OnConstruction.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.ToString_DoesntThrow_AndAlwaysReturns_NonNull.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="ChangedValueTests.ToString_DoesntThrow_AndAlwaysReturns_NonNull_WithStrings.g.cs">
      <DependentUpon>ChangedValueTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.cs" />
    <Compile Include="Collections\ArrayUtilityTests.InsertAt_Throws_IfIndexIsOutOfRange.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.InsertAt_ValidIndexGreaterOne_WorksAsExpected.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.InsertAt_ValidIndex_WorksAsExpected.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.RemoveAt_IndexValueZero_RemovesFirstElement.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.RemoveAt_Throws_IfIndexIsOutOfRange.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ArrayUtilityTests.RemoveAt_ValidIndex_WorksAsExpected.g.cs">
      <DependentUpon>ArrayUtilityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.cs" />
    <Compile Include="Collections\AssociationTests.GetHashCode_OfEqualAssociations_ReturnSameValues.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.SetKey_ChangesExpectedValue.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.SetValue_ChangesExpectedValue.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.ToKeyValuePair_HasMatchingValues.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.ToString_ReturnsStringThatContains_BothKeyAndValue.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.ToString_WithNullKey_ReturnsStringThatContainsNullConstant.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\AssociationTests.ToString_WithNullValue_ReturnsStringThatContainsNullConstant.g.cs">
      <DependentUpon>AssociationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Comparers\AssociationKeyComparerTests.cs" />
    <Compile Include="Collections\Comparers\TupleItem1ComparerTest.cs" />
    <Compile Include="Collections\Comparers\TupleItem2ComparerTest.cs" />
    <Compile Include="Collections\Comparers\ReverseComparerTests.CompareAB_WithReverseComparer_Returns_Same_As_CompareBA_WithDefaultComparer.g.cs">
      <DependentUpon>ReverseComparerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Comparers\ReverseComparerTests.Compare_AlwaysReturns_0_When_Comparing_SameElement.g.cs">
      <DependentUpon>ReverseComparerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Comparers\ReverseComparerTests.Compare_WithReverseComparer_WithReverseComparer_ReturnsSame_AsDefaultComparer.g.cs">
      <DependentUpon>ReverseComparerTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Comparers\ReverseComparerTests.cs" />
    <Compile Include="Collections\Extensions\ArrayExtensionsTests.cs" />
    <Compile Include="Collections\Extensions\ArrayExtensionsTests.ElementsEqual_WithDifferentlySizedArrays_ReturnsFalse.g.cs">
      <DependentUpon>ArrayExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\CollectionExtensionsTests.AddRange_CollectionContains_AddedItems.g.cs">
      <DependentUpon>CollectionExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\CollectionExtensionsTests.cs" />
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.Concat_WithConverters_WorksAsExpected.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.Concat_WithSameTypes_WorksAsExpected.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.ContainsAny_EmptyEnumeration_ReturnsFalse.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.ContainsAny_NonEmptyEnumeration_AgainstSameEnumeration_ReturnsTrue.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.Contains_EnumerableMinusOneElement_Enumerable_ReturnsFalse.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.Contains_Enumerable_EnumerableMinusOneElement_ReturnsTrue.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.Contains_Self_ReturnsTrue.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.cs" />
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.ElementsEqual_WhenPassedDifferentlySizedSequences_ReturnsFalse.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.ElementsEqual_WhenPassedSameSequences_ReturnsTrue.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.ElementsEqual_WhenPassedSameSizedSequencesButDifferentValue_ReturnsFalse.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.HasDistinctElements_WhenAnyElementIsEqual_ReturnsFalse.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.IndexOf_OnNonEmptySequence_WithPredicateAlwaysReturningTrue_ReturnsZero.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.IndexOf_WithPredicateAlwaysReturningFalse_ReturnsMinusOne.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\EnumerableExtensionsTests.IndexOf_WithSpecificList_AndSpecificPredicate_ReturnsTrue.g.cs">
      <DependentUpon>EnumerableExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.AsReadOnly_ReturnedListGrows_WhenAddingToOriginalList.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.AsReadOnly_ReturnedList_HasSameElements_AsOriginalList.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.AsReadOnly_ReturnedList_HasSameSize_AsOriginalList.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.AsReadOnly_ReturnedList_IsReadOnly.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.AsReadOnly_ReturnedList_ThrowsNotSupportedException_WhenAdding.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.cs" />
    <Compile Include="Collections\Extensions\ListExtensionsTests.SwapItems_InvalidIndex_Throws.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Extensions\ListExtensionsTests.SwapItems_ValidIndex_WorksAsExpected.g.cs">
      <DependentUpon>ListExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.AddsElementsOfSameKeyToSameGrouping.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.ContainsElementWhenAdded.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.cs" />
    <Compile Include="Collections\FastMultiMapTests.DoesNotRemoveGroupingWhenAllElementsOfGroupingAreRemoved.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.DoesNotRemoveGroupingWhenElementsRemainAfterElementWasRemoved.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.EnumeratesOverAllGroupingsContainingAllElements.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.RemovesElementCorrectly.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.StaysUnchangedWhenTryingToRemoveNonExistantElement.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.TryGetReturnsFalseAndElementsAreNullWhenPassingNonExistingKey.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\FastMultiMapTests.TryGetReturnsTrueAndCorrectElementsWhenPassingExistingKey.g.cs">
      <DependentUpon>FastMultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HatTests.Clear_RemovesAllItems.g.cs">
      <DependentUpon>HatTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HatTests.cs" />
    <Compile Include="Collections\HatTests.Get_Repeatedly_WithNonEmptyHat_ReturnsNonNull.g.cs">
      <DependentUpon>HatTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HatTests.InsertItem_IncreasesTotalWeight.g.cs">
      <DependentUpon>HatTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HatTests.Remove_WithEmptyHat_ReturnsFalse.g.cs">
      <DependentUpon>HatTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Clear_RemovesAllElements.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Construction_WithCapacityAndNoSpecificComparer_UsesDefaultComparer.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Contains_NewlyAddedItem.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Contains_Null_WithHeapWithNullEntries_ReturnsTrue.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Contains_Null_WithHeapWithoutNullEntries_ReturnsFalse.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Contains_OnEmptyHeap_ReturnsFalse.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.CopyTo_ClonesAllElements.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.CopyTo_WithValidArguments_ClonesAllElements.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.cs" />
    <Compile Include="Collections\HeapTests.GetEnumerator_ContainsAddedItems.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.GetHeapType_ReturnsExpectedType.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.IsReadOnly_ReturnsFalse.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.NewlyCreatedHeap_IsEmpty.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Pop_WithEmptyHeap_Throws.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Pop_WithNonEmptyHeap_ReturnsOldRoot.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.Remove_ThrowsNotSupported.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\HeapTests.RootGet_WithEmptyHeap_Throws.g.cs">
      <DependentUpon>HeapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.AddsElementsOfSameKeyToSameGrouping.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.ContainsElementWhenAdded.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.cs" />
    <Compile Include="Collections\MultiMapTests.DoesNotRemoveGroupingWhenElementsRemainAfterElementWasRemoved.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.EnumeratesOverAllGroupingsContainingAllElements.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.RemovesElementCorrectly.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.RemovesGroupingWhenAllElementsOfGroupingAreRemoved.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.StaysUnchangedWhenTryingToRemoveNonExistantElement.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.TryGetReturnsFalseAndElementsAreNullWhenPassingNonExistingKey.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\MultiMapTests.TryGetReturnsTrueAndCorrectElementsWhenPassingExistingKey.g.cs">
      <DependentUpon>MultiMapTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\NonNullListTests.cs" />
    <Compile Include="Collections\NonNullListTests.SetIndex_ToNullItem_Throws.g.cs">
      <DependentUpon>NonNullListTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddColumns_NegativeCount_Throws.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddEmptyColumnWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddEmptyRowWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddingColumnWithSpecificValuesWorkAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddingMultipleColumnsAtTheSameTimeWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddingMultipleRowsAtTheSameTimeWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddingRowWithSpecificValuesWorkAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.AddRows_NegativeCount_Throws.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.CloningReturnsExpectedMatrix.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.CreateUsingMultiDimensionalArray_WithDistinctElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.cs" />
    <Compile Include="Collections\ObjectMatrixTests.DeleteColumnWorkAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.DeleteRowWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsExpectedResult.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsExpectedResult_WhenPassedSameMatrices.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsExpectedResult_WhenPassedSameSizedMatricesWithDifferentValues.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsFalseWhenMatricesDifferInSize.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsFalseWhenOtherMatrixIsNull.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.EqualsReturnsTrueWhenPassedSame.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.FindingExistingElementReturnsExpectedMatrixIndicesAndResult.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.FindingNonExistingElementReturnsFalse.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetColumnReturnsExpectedElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetEnumerator_WhenMatrixConvertedToEnumerable_IteratesOverAllElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetHashCodeReturnsDifferentValuesForDifferentMatrices.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetHashCodeReturnsSameValuesForEqualMatrices.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetObjectData_WithArabitaryMatrix_SetsColumnCount.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetObjectData_WithArabitaryMatrix_SetsData.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetObjectData_WithArabitaryMatrix_SetsRowCount.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetRowReturnsExpectedElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetSubMatrixReturnsExpectedMatrix.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetSubMatrixWithStartIndexGreaterOneReturnsExpectedMatrix.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.GetSubMatrixWithStartIndexReturnsExpectedMatrix.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.HasCorrectSizeAfterCreation.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.InterchangingTheSameColumnHasNoEffect.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.InterchangingTheSameRowHasNoEffect.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.InterchangingTwoDistinctColumnsWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.InterchangingTwoDistinctRowsWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.IsNotSquareWhenRowsAndColumsNotTheSame.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.IsSquareWhenRowsAndColumsSame.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.Matrizes_WithDifferent_HashCodes_AreNot_Equal.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.ResizesCorrectlyWhenSettingColumnCount.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.ResizesCorrectlyWhenSettingRowCount.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.ResizingChangesSizeAccordingly.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.ResizingChangesSizeAccordingly_MakeLarger.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetColumnChangesExpectedElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetIndexer_SpecificElement_WorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetRowChangesExpectedElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetSubMatrixCopiesExactSubMatrix_WhenNotSpecifyingSize.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetSubMatrixWorksAsExpected.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetSubMatrixWorksAsExpected_WithPositiveStartIndices.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.SetSubMatrixWorksAsExpected_WithPositiveStartIndices_2.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\ObjectMatrixTests.TheStringReturnedByToStringContainsAllElements.g.cs">
      <DependentUpon>ObjectMatrixTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PooledObjectWrapperTests.cs" />
    <Compile Include="Collections\Pooling\PooledObjectWrapperTests.PooledObject_IsSameAsObjectPassedOnConstruction.g.cs">
      <DependentUpon>PooledObjectWrapperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.ClearingMakesAllNodesAvailableAgain.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.Create_ReturnsNewPool_ThatHasInitialSizeAvailableNodes_ButNoActiveNodes.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.CreatingPoolWithNullPooledObjectCreatorThrows.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.cs" />
    <Compile Include="Collections\Pooling\PoolTests.DynamicallySizedPoolResizesAutomaticallyWhenRequired.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.FixedSizedPoolDoesntResizesAutomaticallyWhenRequiredButReturnsNull.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.GetEnumeratorIteratesOverActiveNodes.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.GettingAllNodesTurnsAllActiveAndMakesPoolEmpty.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.GettingNodeMakesItActive.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.NewPoolHasNoNodes.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\PoolTests.ReturningNodeMakesItAvailableAgain.g.cs">
      <DependentUpon>PoolTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\Pooling\WrappingPoolTests.cs" />
    <Compile Include="Collections\SortableListTests.AddRange_ThenListItemAreSorted.g.cs">
      <DependentUpon>SortableListTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Collections\SortableListTests.cs" />
    <Compile Include="Components\ComponentTests.cs" />
    <Compile Include="Components\EntityComponentCollectionTests.cs" />
    <Compile Include="Components\EntityTests.cs" />
    <Compile Include="Components\EntityTests.PreUpdate_Calls_PreUpdate_OnComponents.g.cs">
      <DependentUpon>EntityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Components\EntityTests.Update_Calls_Update_OnComponents.g.cs">
      <DependentUpon>EntityTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Components\Fakes\FakeComponents.cs" />
    <Compile Include="Components\Fakes\FakeEntity.cs" />
    <Compile Include="Design\BaseObjectPropertyWrapperTests.cs" />
    <Compile Include="Design\BaseObjectPropertyWrapperTests.SetWrappedObject_WhenPassedObjectOfInvalidType_Throws.g.cs">
      <DependentUpon>BaseObjectPropertyWrapperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\Descriptors\FieldPropertyDescriptorTests.cs" />
    <Compile Include="Design\Descriptors\PropertyPropertyDescriptorTests.cs.cs" />
    <Compile Include="Design\NameableObjectWrapperTests.cs" />
    <Compile Include="Design\NameableObjectWrapperTests.GetHashCode_ReturnsSameHashCode_AsObject.g.cs">
      <DependentUpon>NameableObjectWrapperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\NameableObjectWrapperTests.GetName_AppliesMappingFunctionOnObjectToReceiveName.g.cs">
      <DependentUpon>NameableObjectWrapperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\NameableObjectWrapperTests.GetName_AppliesMappingFunction_Continiously.g.cs">
      <DependentUpon>NameableObjectWrapperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\ObjectPropertyWrapperFactoryTests.cs" />
    <Compile Include="Design\ObjectPropertyWrapperFactoryTests.ReceiveWrapperOrObject_WhenPassedKnownObject_ReturnsWrapper.g.cs">
      <DependentUpon>ObjectPropertyWrapperFactoryTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\ObjectPropertyWrapperFactoryTests.ReceiveWrapperOrObject_WhenPassedUnknownObject_ReturnsObject.g.cs">
      <DependentUpon>ObjectPropertyWrapperFactoryTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\ObjectPropertyWrapperFactoryTests.ReceiveWrapper_WhenPassedKnownObject_ReturnsWrapper.g.cs">
      <DependentUpon>ObjectPropertyWrapperFactoryTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Design\TestPropertyWrappers.cs" />
    <Compile Include="Diagnostics\ConsoleLogTests.cs" />
    <Compile Include="Diagnostics\FileLogTests.cs" />
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.Allowing_Severity_WorksAs_Expected.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.All_AreFiltered_When_FilterSeverityIsNone.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.cs" />
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.Default_Doesnt_Filter.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.Disallow_Severity_WorksAs_Expected.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.Disallow_Severity_WorksAs_Expected_When_DisablingAlreadyExisting.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\Filters\SeverityLogFilterTests.Filters_Expected_Severity.g.cs">
      <DependentUpon>SeverityLogFilterTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\LogExtensionsTests.cs" />
    <Compile Include="Diagnostics\LogExtensionsTests.WriteEnumerable_WithDefaultSeverity_WritesEachElementAfterAnother.g.cs">
      <DependentUpon>LogExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\LogExtensionsTests.WriteEnumerable_WithSpecifiedSeverity_WritesEachElementAfterAnother.g.cs">
      <DependentUpon>LogExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\LogExtensionsTests.WriteLineEnumerable_WithDefaultSeverity_WritesEachElementInNewLine.g.cs">
      <DependentUpon>LogExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\LogExtensionsTests.WriteLineEnumerable_WitSpecifiedSeverity_WritesEachElementInNewLine.g.cs">
      <DependentUpon>LogExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Diagnostics\LogProviderTests.cs" />
    <Compile Include="Diagnostics\LogSeverityTests.cs" />
    <Compile Include="Diagnostics\MultiLogTests.cs" />
    <Compile Include="Diagnostics\TextWriterLogTests.cs" />
    <Compile Include="Diagnostics\TraceLogTests.cs" />
    <Compile Include="EventHandlerExtensionTests.cs" />
    <Compile Include="Exceptions\ThrowHelperTests.cs" />
    <Compile Include="Exceptions\ThrowHelperTests.InvalidVersion_Throws_WhenExpected.g.cs">
      <DependentUpon>ThrowHelperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Exceptions\ThrowHelperTests.InvalidVersion_WithInvalidRange_Throws.g.cs">
      <DependentUpon>ThrowHelperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Exceptions\ThrowHelperTests.InvalidVersion_WithRange_Throws_WhenExpected.g.cs">
      <DependentUpon>ThrowHelperTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Factories\HatFactory.cs" />
    <Compile Include="Factories\HeapFactory.cs" />
    <Compile Include="Factories\ObjectMatrixFactory.cs" />
    <Compile Include="Factories\PoolFactory.cs" />
    <Compile Include="GlobalServicesTests.cs" />
    <Compile Include="HashCodeBuilderTests.cs" />
    <Compile Include="HashCodeBuilderTests.GetHashCode_AfterAppendingIntegers_ReturnsDifferentValue.g.cs">
      <DependentUpon>HashCodeBuilderTests.cs</DependentUpon>
    </Compile>
    <Compile Include="HashCodeBuilderTests.GetHashCode_AfterAppendingObjects_ReturnsDifferentValue.g.cs">
      <DependentUpon>HashCodeBuilderTests.cs</DependentUpon>
    </Compile>
    <Compile Include="IOUtilitiesTests.CopyStream_Copies_TheExact_InputData.g.cs">
      <DependentUpon>IOUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="IOUtilitiesTests.cs" />
    <Compile Include="ManagedDisposableTests.cs" />
    <Compile Include="Math\RandRangeExtensionsTests.cs" />
    <Compile Include="Math\RandRangeExtensionsTests.GetRandomRangeDecimal_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetRandomRangeDouble_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetRandomRangeInteger_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetRandomRangeUnsignedInteger_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetRandomRange_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetUnsafeRandomRangeInteger_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Math\RandRangeExtensionsTests.GetUnsafeRandomRangeSingle_ReturnsValueInExpectedRanges.g.cs">
      <DependentUpon>RandRangeExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="MaybeTests.AreEqual_ConstructionWithDifferentValues_ReturnsFalse.g.cs">
      <DependentUpon>MaybeTests.cs</DependentUpon>
    </Compile>
    <Compile Include="MaybeTests.AreEqual_ConstructionWithSameValue_ReturnsTrue.g.cs">
      <DependentUpon>MaybeTests.cs</DependentUpon>
    </Compile>
    <Compile Include="MaybeTests.cs" />
    <Compile Include="MaybeTests.GetHashCode_ConstructionWithValue_ReturnsSameHashCodeAsGetHashCodeOnValue.g.cs">
      <DependentUpon>MaybeTests.cs</DependentUpon>
    </Compile>
    <Compile Include="MaybeTests.GetValue_ConstructionWithValue_ReturnsValue.g.cs">
      <DependentUpon>MaybeTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Provider\DirectObjectProviderTests.cs" />
    <Compile Include="Patterns\Provider\DirectProviderTests.TryResolve_ReturnsSpecifiedString.g.cs">
      <DependentUpon>DirectObjectProviderTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Provider\LambdaObjectProviderTests.cs" />
    <Compile Include="Patterns\Provider\LambdaProviderTests.TryResolve_WithSimpleByPassLambda_ReturnsSpecifiedString.g.cs">
      <DependentUpon>LambdaObjectProviderTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Provider\ObjectProviderContainerTests.cs" />
    <Compile Include="Patterns\Provider\ObjectProviderExtensionsTests.cs" />
    <Compile Include="ServiceContainerExtensionsTests.cs" />
    <Compile Include="NameOfTests.cs" />
    <Compile Include="Patterns\Visitor\CountingVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\CountingVisitorTests.Reset_ChangesCountToZero.g.cs">
      <DependentUpon>CountingVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\CountingVisitorTests.VisitingArrayOfItems_CountEqualToArrayLength.g.cs">
      <DependentUpon>CountingVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\CountingVisitorTests.VisitingOnce_IncreasesCountByOne.g.cs">
      <DependentUpon>CountingVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\EmptyVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\EmptyVisitorTests.HasCompleted_AlwaysReturnsTrue.g.cs">
      <DependentUpon>EmptyVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\EmptyVisitorTests.StaticInstance_IsNotNull.g.cs">
      <DependentUpon>EmptyVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitInOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitInOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitPostOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitPostOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitPreOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\InOrderVisitorTests.VisitPreOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>InOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitInOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitInOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitPostOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitPostOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitPreOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\OrderedVisitorTests.VisitPreOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>OrderedVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitInOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitInOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitPostOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitPostOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitPreOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PostOrderVisitorTests.VisitPreOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>PostOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitInOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitInOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitPostOrder_DoesntPassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitPostOrder_WithCountingVisitor_DoesntIncreasesCountByOne.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitPreOrder_PassesItem_ToWrappedVisitor.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\PreOrderVisitorTests.VisitPreOrder_WithCountingVisitor_IncreasesCountByOne.g.cs">
      <DependentUpon>PreOrderVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\TrackingVisitorTests.cs" />
    <Compile Include="Patterns\Visitor\TrackingVisitorTests.TrackingList_ContainsAllVisitedItems.g.cs">
      <DependentUpon>TrackingVisitorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\VisitorExtensionsTests.cs" />
    <Compile Include="Patterns\Visitor\VisitorExtensionsTests.VisitEnumerable_StopsVisiting_WhenVisitorHasCompleted.g.cs">
      <DependentUpon>VisitorExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\VisitorExtensionsTests.VisitEnumerable_VisitsAllPassedElements.g.cs">
      <DependentUpon>VisitorExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\VisitorExtensionsTests.Visit_StopsVisiting_WhenVisitorHasCompleted.g.cs">
      <DependentUpon>VisitorExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Patterns\Visitor\VisitorExtensionsTests.Visit_VisitsAllPassedElements.g.cs">
      <DependentUpon>VisitorExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\PexAssemblyInfo.cs" />
    <Compile Include="ReflectionExtensionsTests.cs" />
    <Compile Include="ServiceProviderExtensionsTests.cs" />
    <Compile Include="Storage\BaseObjectReaderWriterTests.cs" />
    <Compile Include="Storage\BinaryContextIntegrationTests.cs" />
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenBoolean_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenChar_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenDouble_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenInt16_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenInt32_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenInt64_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenSingle_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenString_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\BinaryContextIntegrationTests.WrittenUInt32_CanBeReadAgain.g.cs">
      <DependentUpon>BinaryContextIntegrationTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Storage\StorageUtilitiesTests.cs" />
    <Compile Include="Storage\XmlUtilitiesTests.cs" />
    <Compile Include="StringExtensionsTests.Contains_Self_ReturnsTrue.g.cs">
      <DependentUpon>StringExtensionsTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringExtensionsTests.cs" />
    <Compile Include="StringUtilitiesTests.ConvertFromValues_IntegratesWith_ConvertToValues.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.ConvertFromValues_IntegratesWith_ConvertToValues_AndBackWith_ConvertFromValues.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.ConvertFromValues_Returns_String_That_Contains_All_Inputs.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.ConvertToValues_Returns_Array_WithExpected_Values.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.cs" />
    <Compile Include="StringUtilitiesTests.DecrementTrailingInteger_WithStringThatHasNumbers_WorkAsExpected.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.DecrementTrailingInteger_WorkAsExpected.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.IncrementTrailingInteger_WithStringThatHasNumbers_WorkAsExpected.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="StringUtilitiesTests.IncrementTrailingInteger_WorkAsExpected.g.cs">
      <DependentUpon>StringUtilitiesTests.cs</DependentUpon>
    </Compile>
    <Compile Include="Stubs\Atom.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>Atom.moles</DependentUpon>
    </Compile>
    <Compile Include="Stubs\mscorlib.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>mscorlib.moles</DependentUpon>
    </Compile>
    <Compile Include="Stubs\StubFactory.cs" />
    <Compile Include="Stubs\System.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <DependentUpon>System.moles</DependentUpon>
    </Compile>
    <Compile Include="TypeActivatorTests.CreateInstance_IfPassedValidTypeName_CreatesObject.g.cs">
      <DependentUpon>TypeActivatorTests.cs</DependentUpon>
    </Compile>
    <Compile Include="TypeActivatorTests.cs" />
    <Compile Include="UnmanagedDisposeableTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Stubs\Atom.moles">
      <Generator>MolesGenerator</Generator>
      <LastGenOutput>Atom.Designer.cs</LastGenOutput>
    </None>
    <None Include="Stubs\mscorlib.moles">
      <Generator>MolesGenerator</Generator>
      <LastGenOutput>mscorlib.Designer.cs</LastGenOutput>
    </None>
    <None Include="Stubs\System.moles">
      <Generator>MolesGenerator</Generator>
      <LastGenOutput>System.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Source\Atom.Test.Framework\Atom.Tests.Framework.csproj">
      <Project>{F9C6D41B-5C7F-4579-AA68-80F3ADF6B0BB}</Project>
      <Name>Atom.Tests.Framework</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\Source\Atom\Atom.csproj">
      <Project>{5EAD885A-5B98-4611-A45E-E4333D40476D}</Project>
      <Name>Atom</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <BootstrapperPackage Include=".NETFramework,Version=v4.0">
      <Visible>False</Visible>
      <ProductName>Microsoft .NET Framework 4 %28x86 and x64%29</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Client.3.5">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1 Client Profile</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.VisualBasic.PowerPacks.10.0">
      <Visible>False</Visible>
      <ProductName>Microsoft Visual Basic PowerPacks 10.0</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Windows.Installer.3.1">
      <Visible>False</Visible>
      <ProductName>Windows Installer 3.1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
  </ItemGroup>
  <ItemGroup>
    <Content Include="Stubs\Atom.Moles.dll">
      <DependentUpon>Atom.moles</DependentUpon>
    </Content>
    <Content Include="Stubs\Atom.Moles.xml">
      <DependentUpon>Atom.moles</DependentUpon>
    </Content>
    <Content Include="Stubs\mscorlib.Moles.dll">
      <DependentUpon>mscorlib.moles</DependentUpon>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Stubs\mscorlib.Moles.xml">
      <DependentUpon>mscorlib.moles</DependentUpon>
    </Content>
    <Content Include="Stubs\System.Moles.dll">
      <DependentUpon>System.moles</DependentUpon>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="Stubs\System.Moles.xml">
      <DependentUpon>System.moles</DependentUpon>
    </Content>
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>